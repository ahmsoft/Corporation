Type.registerNamespace("Telerik.Web.UI.Scheduler.Rendering");
(function(){var f=60000,a=$telerik.$,c=Telerik.Web.UI,d=c.Scheduler,e=Telerik.Web.UI.Scheduler.Rendering,b=d.DateTime;
a.registerEnum(c,"HTTPVerbs",{GET:0,POST:1,PUT:2,DELETE:3});
e.parseDate=function(i){var g=/Date\(([^)]+)\)/;
var h=g.exec(i);
if(h.length!=2){throw new Error(i+" is not .net json date.");
}return new Date(parseFloat(h[1]));
};
e.parseISO8601=function(h){var i=/^\s*(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d).*Z\s*$/,g=new Date(NaN),j,k=i.exec(h);
if(k){j=+k[2];
g.setUTCFullYear(k[1],j-1,k[3]);
g.setUTCHours(k[4]);
g.setUTCMinutes(k[5]);
g.setUTCSeconds(k[6]);
if(j!=g.getMonth()+1){g.setTime(NaN);
}}return g;
};
e.isDST=function(j,g){var m=j.transitionStart;
var l=a.extend({},j.transitionEnd,true);
var i=g.getMonth()+1;
var k;
l.TimeOfDay=b._addTicks(l.TimeOfDay,j.daylightDelta*-1);
var h=function(n,q){var o=d.DateHelper.getNthWeekDay(n,q.Week,q.DayOfWeek);
var p=q.TimeOfDay;
o.setSeconds(p.getSeconds());
o.setMinutes(p.getMinutes());
o.setHours(p.getHours());
if(o.getHours()<p.getHours()){o.setHours(p.getHours()+1);
}return o;
};
if(!m.IsFixedDateRule){if(i>m.Month&&i<l.Month){return true;
}else{if(i===m.Month){k=h(g,m);
return g>=k;
}else{if(i===l.Month){k=h(g,l);
return g<k;
}}}}return false;
};
e.RenderingManagerBase=function(g,h){this._owner=g;
this._settings=h;
this._schedulerTzOffset=this._owner._timeZoneOffset;
this._adjustmentRules=this._owner.get_adjustmentRules();
this._appointmentsLoaded=false;
this._resourcesLoaded=false;
this._suppressWebServiceCalls=false;
this._shouldTriggerDismiss=false;
};
e.RenderingManagerBase.prototype={initialize:function(){this._initializeLoader();
var g=this._settings;
if(g.get_resourcesPopulated&&g.get_resourcesPopulated()){this._resourcesLoaded=true;
}this.loadAppointments();
this.loadResources();
this._owner.add_propertyChanged(Function.createDelegate(this,this._onSchedulerPropertyChanged));
},_initializeLoader:function(){if(this._isWebApi){this._webServiceLoader=new c.WebApiLoader(this._settings);
}else{this._webServiceLoader=new c.WebServiceLoader(this._settings);
}this._webServiceLoader.add_loadingSuccess(Function.createDelegate(this,this._onRequestSucceeded));
this._webServiceLoader.add_loadingError(Function.createDelegate(this,this._onRequestError));
},get_events:function(){if(!this._events){this._events=new Sys.EventHandlerList();
}return this._events;
},loadAppointments:function(h){if(this._suppressWebServiceCalls){return;
}var g=this._getSchedulerInfo(h);
if(!this._onAppointmentsPopulating(g)){return;
}this.loadData(g,"loadAppointments");
},loadAppointmentsInRange:function(i,h){if(this._suppressWebServiceCalls){return;
}var g=this._getSchedulerInfo();
g.ViewStart=this._toServerDate(i);
g.ViewEnd=this._toServerDate(h);
g.VisibleAppointmentsPerDay=0;
this.loadData(g,"loadAppointmentsInRange");
},loadData:function(i,h){var k=this;
var j=this._isWebApi;
var g;
if(j){i=Sys.Serialization.JavaScriptSerializer.serialize(i);
}g={methodName:k._settings.get_method(),data:{schedulerInfo:i},context:h,httpVerb:c.HTTPVerbs.GET};
if(this._isWebApi){this._webServiceLoader.invokeMethod(g);
}else{this._webServiceLoader.loadData(g.data,g.context);
}},loadResources:function(){if(this._suppressWebServiceCalls||this._settings.get_resourcesPopulated()){return;
}var k=this,i=this._getSchedulerInfo(),j=this._isWebApi,g=new c.SchedulerWebServiceEventArgs(i),l=this._settings.get_getResourcesMethod,h;
this._owner._raiseResourcesPopulating(g);
if(g.get_cancel()){return;
}this._owner.get_resources().clear();
if(j){i=Sys.Serialization.JavaScriptSerializer.serialize(i);
}if(l){h={methodName:l.call(k._settings),data:{schedulerInfo:i},context:"loadResources",httpVerb:c.HTTPVerbs.GET};
this._invokeService(h);
}},insertAppointment:function(g){},add_appointmentsReceived:function(g){this.get_events().addHandler("appointmentsReceived",g);
},add_appointmentsPopulated:function(g){this.get_events().addHandler("appointmentsPopulated",g);
},_onAppointmentsPopulating:function(h){var g=new c.SchedulerWebServiceEventArgs(h);
this._owner._raiseAppointmentsPopulating(g);
return !g.get_cancel();
},_onRequestSucceeded:function(l,i){var j=this._owner;
var k=i.get_data();
var h=k.Appointments||k;
if(i.get_context()=="loadAppointmentsInRange"){var g=this._loadAppointments(h);
j._populateAppointmentsTooltip(g);
return;
}j._reminders=[];
j._raiseRequestSuccess(new d.RequestSuccessEventArgs(k));
this._suppressWebServiceCalls=true;
if(i.get_context()=="loadResources"){this._loadResources(j.get_resources(),h);
this._resourcesLoaded=true;
j._raiseResourcesPopulated();
}else{this._raiseEvent("appointmentsReceived");
this._populateAppointments(h);
this._raiseEvent("appointmentsPopulated");
this._appointmentsLoaded=true;
}if(this._appointmentsLoaded&&this._resourcesLoaded){j._raiseDataBound();
}this._suppressWebServiceCalls=false;
if(j._reminderDialog&&a(j._reminderDialog.get_element()).is(":visible")){j._pollReminders();
}if(this._shouldTriggerDismiss){j._dismissRemindersWS(j._reminders);
}},_getSchedulerInfo:function(h){var i=this._owner,g;
if(h){g=i._newActiveModel;
}else{g=i.get_activeModel();
}var j={ViewStart:this._toServerDate(g.get_visibleRangeStart()),ViewEnd:this._toServerDate(g.get_visibleRangeEnd()),EnableDescriptionField:i._enableDescriptionField,MinutesPerRow:i.get_minutesPerRow(),TimeZoneOffset:i._timeZoneOffset,VisibleAppointmentsPerDay:0,UpdateMode:i.get_webServiceSettings().get_updateMode()};
if(g.get_visibleAppointmentsPerDay){j.VisibleAppointmentsPerDay=g.get_visibleAppointmentsPerDay();
}return j;
},_populateAppointments:function(g){var l=this._owner;
var m=l.get_activeModel()._renderer;
var n=l.get_appointments();
var h=this._loadAppointments(g,true);
h=h.concat(n._array);
h.sort(function(i,o){return i.compare(o);
});
n._clear();
l._batchRendering=true;
for(var k=0,j=h.length;
k<j;
k++){n.add(h[k]);
}l._batchRendering=false;
if(m._recalcAppointmentsStyles){m._recalcAppointmentsStyles();
}l.repaint();
},_onRequestError:function(j,i){var h=i.get_message();
var g=new c.SchedulerRequestFailedEventArgs(h);
this._owner._raiseRequestFailed(g);
if(!g.get_cancel()){alert(h);
}},_loadAppointments:function(j,o){var n=this._owner;
var g=[];
for(var m=0,k=j.length;
m<k;
m++){var h=this._loadAppointment(j[m]);
Array.add(g,h);
if(o){var l=new d.AppointmentDataBoundEventArgs(h,j[m]);
n._raiseAppointmentDataBound(l);
}}return g;
},_loadAppointment:function(h){var g=new c.SchedulerAppointment();
g._id=h.ID;
g._internalID=h.EncodedID;
g.set_subject(h.Subject);
g.set_description(h.Description);
g.set_start(this._toClientDate(h.Start));
g.set_end(this._toClientDate(h.End));
g._setOwner(this._owner);
g._recurrenceRule=h.RecurrenceRule;
g._recurrenceParentID=h.RecurrenceParentID;
g._internalRecurrenceParentID=h.EncodedRecurrenceParentID;
g._recurrenceState=h.RecurrenceState;
g._visible=h.Visible;
g.set_toolTip(h.Subject);
g.set_timeZoneID(h.TimeZoneID);
if(h.Resources){this._loadResources(g.get_resources(),h.Resources);
}if(h.Attributes){this._loadAttributes(g.get_attributes(),h.Attributes);
}if(h.Reminders&&g.get_reminders){this._loadReminders(g,h.Reminders);
}return g;
},_loadResources:function(k,l){for(var j=0,g=l.length;
j<g;
j++){var i=l[j];
var h=new c.SchedulerResource({key:i.Key,type:i.Type,text:i.Text,internalKey:i.EncodedKey,available:i.Available});
if(i.Attributes){this._loadAttributes(h.get_attributes(),i.Attributes);
}k.add(h);
}},_toClientDate:function(i){var g;
var j;
var h;
if(i.getTime){g=new Date(i.getTime());
}else{g=e.parseISO8601(i);
}j=g.getTimezoneOffset()*f;
g=b._addTicks(g,j);
g=b._addTicks(g,this._schedulerTzOffset);
h=this._getDSTOffset(g);
g=b._addTicks(g,h);
return g;
},_toServerDate:function(g){var h=new Date(g.getTime());
var j;
var i;
i=this._getDSTOffset(h);
h=b._addTicks(h,i*-1);
h=b._addTicks(h,this._schedulerTzOffset*-1);
j=h.getTimezoneOffset()*f;
h=b._addTicks(h,j*-1);
return h;
},_getDSTOffset:function(g){var l=this._adjustmentRules;
var k;
var j=0;
var m;
for(var h=0;
h<l.length;
h++){k=l[h];
if(k.start<=g&&k.end>=g){m=k;
break;
}}if(m){if(e.isDST(m,g)){j=m.daylightDelta;
}}return j;
},_raiseEvent:function(h,g){var i=this.get_events().getHandler(h);
if(i){if(!g){g=Sys.EventArgs.Empty;
}i(this,g);
}},_onSchedulerPropertyChanged:function(h,g){switch(g.get_propertyName()){case"selectedDate":this.loadAppointments();
break;
case"selectedView":this.loadAppointments(true);
break;
}}};
e.RenderingManagerBase.registerClass("Telerik.Web.UI.Scheduler.Rendering.RenderingManagerBase");
e.ODataRenderingManager=function(g,h){e.ODataRenderingManager.initializeBase(this,[g,h]);
};
e.ODataRenderingManager.prototype={_initializeLoader:function(){this._webServiceLoader=new c.SchedulerODataLoader(this._settings);
this._webServiceLoader.add_loadingSuccess(Function.createDelegate(this,this._onRequestSucceeded));
this._webServiceLoader.add_loadingError(Function.createDelegate(this,this._onRequestError));
var h=this._settings._odata.ODataSourceID,g=$find(h);
if(!g){var i=String.format("DataSource with id {0} was not found on the page or the control is placed after the RadScheduler's declaration",h);
alert(i);
return;
}this._flatBinder=new c.RadODataDataSource.Binder.Flat(g,this);
this._flatBinder.initialize();
},loadData:function(){var g=this;
if(!this._flatBinder){return;
}var h={events:{requesting:function(i){},success:function(i){var j=this,k=g._webServiceLoader.parseData(i,j);
g._webServiceLoader._raiseEvent("loadingSuccess",k);
},fail:function(i){var j=new Telerik.Web.UI.WebServiceLoaderErrorEventArgs(i.get_message());
g._webServiceLoader._onWebServiceError(j,null);
}}};
this._flatBinder.fetch(h);
},get_flatModel:function(){var g=this._settings._odata;
return c.RadODataDataSource.Binder.Flat.Model(g);
},loadAppointments:function(h){if(this._suppressWebServiceCalls){return;
}var g=this._getSchedulerInfo(h);
if(!this._onAppointmentsPopulating(g)){return;
}this.loadData(this._onRequestSucceeded);
}};
e.ODataRenderingManager.registerClass("Telerik.Web.UI.Scheduler.Rendering.ODataRenderingManager",e.RenderingManagerBase);
e.WebServiceRenderingManager=function(g,h){e.WebServiceRenderingManager.initializeBase(this,[g,h]);
this._isWCFService=false;
this._isWebApi=false;
};
e.WebServiceRenderingManager.prototype={initialize:function(){this._isWCFService=this._settings.get_path().endsWith("svc");
this._isWebApi=this._settings.get_path().startsWith("api");
e.WebServiceRenderingManager.callBaseMethod(this,"initialize");
},insertAppointment:function(g){if(this._suppressWebServiceCalls){return;
}var m=this,l=this._isWebApi,j=this._getSchedulerInfo(),i,n,k={appointment:g,schedulerInfo:j},h=a.raiseCancellableControlEvent(m._owner,"appointmentWebServiceInserting",k);
if(h){return;
}if(!this._onAppointmentsPopulating(j)){return;
}n={schedulerInfo:j,appointmentData:m._storeAppointment(g)};
if(l){n=Sys.Serialization.JavaScriptSerializer.serialize(n);
}i={methodName:m._settings.get_insertAppointmentMethod(),data:n,context:"insertAppointment",httpVerb:c.HTTPVerbs.POST};
this._invokeService(i);
g.set_allowDelete(false);
g.set_allowEdit(false);
},deleteAppointment:function(g,j){if(this._suppressWebServiceCalls){return;
}var n=this,l=this._getSchedulerInfo(),m=this._isWebApi,i,o,k={appointment:g,editingRecurringSeries:j,schedulerInfo:l},h=a.raiseCancellableControlEvent(n._owner,"appointmentWebServiceDeleting",k);
if(h){return;
}if(!this._onAppointmentsPopulating(l)){return;
}o={schedulerInfo:l,appointmentData:n._storeAppointment(g),deleteSeries:j};
if(m){o=Sys.Serialization.JavaScriptSerializer.serialize(o);
}i={methodName:n._settings.get_deleteAppointmentMethod(),data:o,context:"deleteAppointment",httpVerb:c.HTTPVerbs.DELETE};
this._invokeService(i);
},updateAppointment:function(g){if(this._suppressWebServiceCalls){return;
}if(g.__newRecurrenceException){this._createRecurrenceException(g);
}else{this._executeUpdate(g);
}},removeRecurrenceExceptions:function(k){if(this._suppressWebServiceCalls){return;
}var l=this,i=this._getSchedulerInfo(),j=this._isWebApi,h,m,n={appointment:k,schedulerInfo:i},g=a.raiseCancellableControlEvent(this._owner,"recurrenceExceptionsRemoving",n);
if(g){return;
}if(!this._onAppointmentsPopulating(i)){return;
}m={schedulerInfo:i,masterAppointmentData:l._storeAppointment(k)};
if(j){m=Sys.Serialization.JavaScriptSerializer.serialize(m);
}h={methodName:l._settings.get_removeRecurrenceExceptionsMethod(),data:m,context:"removeRecurrenceExceptions",httpVerb:c.HTTPVerbs.DELETE};
this._invokeService(h);
},_executeUpdate:function(g){var l=this,j=this._getSchedulerInfo(),k=this._isWebApi,i,m,n={appointment:g,schedulerInfo:j},h=a.raiseCancellableControlEvent(l._owner,"appointmentWebServiceUpdating",n);
if(h){return;
}if(!this._onAppointmentsPopulating(j)){return;
}m={schedulerInfo:j,appointmentData:l._storeAppointment(g)};
if(k){m=Sys.Serialization.JavaScriptSerializer.serialize(m);
}i={methodName:l._settings.get_updateAppointmentMethod(),data:m,context:"updateAppointment",httpVerb:c.HTTPVerbs.PUT};
this._invokeService(i);
},_createRecurrenceException:function(g){var m=this,k=m._getSchedulerInfo(),l=m._isWebApi,i,n,j={appointment:g,schedulerInfo:k},h=a.raiseCancellableControlEvent(m._owner,"recurrenceExceptionCreating",j);
if(h){return;
}if(!this._onAppointmentsPopulating(k)){return;
}n={schedulerInfo:k,recurrenceExceptionData:m._storeAppointment(g)};
if(l){n=Sys.Serialization.JavaScriptSerializer.serialize(n);
}i={methodName:m._settings.get_createRecurrenceExceptionMethod(),data:n,context:"createRecurrenceException",httpVerb:c.HTTPVerbs.POST};
this._invokeService(i);
},_loadAttributes:function(h,i){if(this._isWCFService){for(var j=0;
j<i.length;
j++){var g=i[j];
h.setAttribute(g.Key,g.Value);
}}else{h._load(i);
}},_loadReminders:function(g,o){var n=g.get_reminders(),j=(g.get_recurrenceState()==1),k=false;
if(j){k=this._masterHasException(g,c.RecurrenceRule.parse(g.get_recurrenceRule()));
}for(var p=0,h=o.length;
p<h;
p++){var m=o[p],l=new c.Reminder({id:m.ID,trigger:m.TriggerMinutes});
if(m.Attributes){this._loadAttributes(l.get_attributes(),m.Attributes);
}n.add(l);
var r=l.get_triggerDate(),q=b.subtract(r,new Date()),i=-q>this._owner._remindersMaxAge;
if(q<=0&&!i&&!k){this._owner._reminders.push(l);
}}},_masterHasException:function(g,m){var h=false,k=m.get_exceptions(),j=m.get_exceptions().length;
for(var l=0;
l<j;
l++){if(g.get_start().getTime()==k[l].getTime()){h=true;
break;
}}return h;
},_storeAppointment:function(g){var h=g.get_recurrenceState(),k,j;
if(h==c.RecurrenceState.NotRecurring){h=c.RecurrenceState.NotRecurring;
if(g.get_recurrenceParentID()){h=c.RecurrenceState.Exception;
}else{if(g.get_recurrenceRule()){h=c.RecurrenceState.Master;
}}}k={EncodedID:g._internalID,Subject:g.get_subject(),Description:g.get_description(),Start:this._toServerDate(g.get_start()),End:this._toServerDate(g.get_end()),RecurrenceRule:g._recurrenceRule,RecurrenceState:h,TimeZoneID:g.get_timeZoneID()};
if(this._isWebApi){a.extend(k,{EncodedRecurrenceParentID:g._internalRecurrenceParentID});
}else{a.extend(k,{RecurrenceParentID:g._recurrenceParentID});
}j=this._storeResources(g.get_resources());
if(j.length>0){k.Resources=j;
}k.Attributes=this._storeAttributes(g.get_attributes());
if(g.get_reminders){var i=this._storeReminders(g.get_reminders());
if(i.length>0){k.Reminders=i;
}}a.raiseControlEvent(this._owner,"appointmentSerialized",{appointment:g,data:k});
return k;
},_storeResources:function(i){var h=[];
var g=this;
i.forEach(function(j){Array.add(h,{Key:j.get_key(),Type:j.get_type(),Text:j.get_text(),EncodedKey:j._getInternalKey(),Available:j.get_available(),Attributes:g._storeAttributes(j.get_attributes())});
});
return h;
},_storeAttributes:function(h){if(this._isWCFService){return this._storeAttributesWCF(h);
}var g={};
h.forEach(function(i,j){g[i]=j;
});
return g;
},_storeAttributesWCF:function(g){var h=[];
g.forEach(function(i,j){Array.add(h,{Key:i,Value:j});
});
return h;
},_storeReminders:function(i){var h=[];
var g=this;
i.forEach(function(j){Array.add(h,{ID:j.get_id(),TriggerMinutes:j.get_trigger(),Attributes:g._storeAttributes(j.get_attributes())});
});
return h;
},_invokeService:function(g){if(this._isWebApi){this._webServiceLoader.invokeMethod(g);
}else{this._webServiceLoader.invokeMethod(g.methodName,g.data,g.context);
}}};
e.WebServiceRenderingManager.registerClass("Telerik.Web.UI.Scheduler.Rendering.WebServiceRenderingManager",e.RenderingManagerBase);
})();

(function(m){var a=$telerik.$;
var e=Telerik.Web.UI;
var f=e.Scheduler;
var d=e.RadScheduler.prototype;
var c=e.SchedulerAppointment.prototype;
var b=f.DateTime;
var l=60000;
var j=new Date(0);
function i(){var n=$get(this.get_id()+"_ReminderDialog");
if(!n||!this._isSchedulerContentRendered()){return;
}this._reminderPollInterval=5000;
this._snoozedReminders={};
this._appLoadReminderCallback=Function.createDelegate(this,this._appLoadReminders);
Sys.Application.add_load(this._appLoadReminderCallback);
}function h(){if(!this._isSchedulerContentRendered()){return;
}clearInterval(this._pollRemindersInterval);
}function g(q,r,o){var p="; expires="+o.toGMTString(),n=q+"="+r+p+";";
if(!$telerik.isIE){n+=" path="+window.location.pathname;
}document.cookie=n;
}function k(r){var s=r+"=";
var o=document.cookie.split(";");
for(var q=0,p=o.length;
q<p;
q++){var n=o[q];
while(n.charAt(0)==" "){n=n.substring(1,n.length);
}if(n.indexOf(s)==0){return n.substring(s.length,n.length);
}}return null;
}d._appLoadReminders=function(){var n=this;
Sys.Application.remove_load(this._appLoadReminderCallback);
this._pollRemindersInterval=setInterval(function(){if(!a(n._reminderDialog.get_element()).is(":visible")){n._pollReminders(true);
}},this._reminderPollInterval);
this._initializeReminderDialog();
};
d._initializeReminderDialog=function(){var q=this._reminderDialog=$find(this.get_id()+"_ReminderDialog");
var r=q.get_element();
this._reminderDialogWrapper=a(r).parent();
this._initializeReminderPopup(r);
var o=Function.createDelegate(this,this._hideReminderDialog);
q.add_close(o);
var n=Function.createDelegate(this,this._dismissRemindersClicked);
q.add_dismiss(n);
var p=Function.createDelegate(this,this._openReminderItemClicked);
q.add_openItem(p);
var s=Function.createDelegate(this,this._snoozeReminderClicked);
q.add_snooze(s);
q.add_disposing(function(){q.remove_close(o);
q.remove_dismiss(n);
q.remove_openItem(p);
q.remove_snooze(s);
});
};
d._initializeReminderPopup=function(o){var q=false,n=q?a(".rsRemTitleBar",o)[0]:null,p={modal:true,width:463,draggable:false};
this._reminderPopup=a.popupDialog(o,n,p);
};
e.RadScheduler._plugins.push({onInitialize:i,onDispose:h});
d._reminders=[];
d._pollReminders=function(r){var s=this,n=s.get_appointments(),p=n.get_count();
for(var q=0;
q<p;
q++){var o=n.getAppointment(q);
if(q==0){s._reminderDialog.clearReminders();
}o.get_reminders().forEach(function(v){if(!(o.get_visible()||o._originallyVisible)){return;
}var x=v.get_triggerDate();
var w=b.subtract(x,new Date());
var u=-w>s._remindersMaxAge;
if(w<=0&&!u&&!v._triggerEventFired&&!s._isReminderSnoozed(v)&&!v._dismissed){v._triggerEventFired=true;
var t=false;
if(r){t=a.raiseCancellableControlEvent(s,"reminderTriggering",{appointment:o,reminder:v});
}if(!t){s._reminderDialog.registerReminder(v);
if(s._getFormElement()==null&&!s._dragging){s._showReminderDialog();
}}}});
}};
d._showReminderDialog=function(){if(!this._reminderDialogShown){this._reminderDialogShown=true;
a(this._reminderDialogWrapper).show();
this._reminderPopup.show();
this._reminderDialog.repaint();
}};
d._hideReminderDialog=function(){if(this._reminderDialogShown){this._reminderDialogShown=false;
a(this._reminderDialogWrapper).hide();
this._reminderPopup.close();
}};
d._dismissRemindersClicked=function(o,n){this._dismissReminders(n.get_reminders());
if(!n.get_hasMoreReminders()){this._hideReminderDialog();
}};
d._openReminderItemClicked=function(o,n){this.showAdvancedEditForm(n.get_reminders()[0].get_owner(),true);
this._hideReminderDialog();
};
d._snoozeReminderClicked=function(q,n){var o=n.get_minutes();
var p=n.get_reminders();
this._snoozeReminders(p,o);
this._hideReminderDialog();
};
d._snoozeReminders=function(u,r){if(!u.length){u=[u];
}var p=[];
for(var q=0;
q<u.length;
q++){var t=u[q];
var s=u[q].clone();
var n=s.get_owner();
var o=a.raiseCancellableControlEvent(this,"reminderSnoozing",{appointment:n,reminder:s});
if(!o){var w=(r<0)?b.add(n.get_start(),r*l):b.add(new Date(),r*l);
this._registerSnoozedReminder(t,w);
t._triggerEventFired=false;
if(!this._renderingManager){var v={Command:"SnoozeReminder",AppointmentInternalID:t.get_owner()._internalID,ReminderID:t.get_id(),SnoozeMinutes:r};
p.push(v);
}}}if(p.length>0){this._doCallback(Sys.Serialization.JavaScriptSerializer.serialize(p),this);
this._isDirty=true;
}};
d._registerSnoozedReminder=function(o,p){var n=this._getReminderCookieName(o);
this._snoozedReminders[o.get_id()]=p;
g(n,p.getTime(),p);
};
d._isReminderSnoozed=function(p){var o=this._getReminderCookieName(p);
var n=k(o);
var q=n||this._snoozedReminders[p.get_id()]||j;
if(q>new Date()){return true;
}else{this._snoozedReminders[p.get_id()]=m;
return false;
}};
d._getReminderCookieName=function(n){return this.get_id()+"_"+n.get_id();
};
d._dismissReminders=function(t){if(!t.length){t=[t];
}var p=[];
if(this._renderingManager){this._dismissRemindersWS(t);
}else{for(var q=0;
q<t.length;
q++){var s=t[q];
var n=s.get_owner();
var o=a.raiseCancellableControlEvent(this,"reminderDismissing",{appointment:s.get_owner(),reminder:s});
if(!o){s._dismissed=true;
var u={Command:"DismissReminder",AppointmentInternalID:s.get_owner()._internalID,ReminderID:s.get_id()};
p.push(u);
}a(".rsAptReminder",n.get_element()).hide();
}}if(p.length>0){this._doCallback(Sys.Serialization.JavaScriptSerializer.serialize(p),this);
this._isDirty=true;
}};
d._dismissRemindersWS=function(s){var u=this,q=s[s.length-1],n=q.get_owner(),p=a.raiseCancellableControlEvent(this,"reminderDismissing",{appointment:q.get_owner(),reminder:q});
if(!p){q._dismissed=true;
var o=this.prepareToEdit(n,false);
var t=o.get_reminders().findByID(q.get_id());
o.get_reminders().remove(t);
u._renderingManager._shouldTriggerDismiss=(s.length>1);
if(s.length>1){this._reminders.pop();
}this.updateAppointment(o);
}};
c.get_reminders=function(){if(!this._reminders){this._reminders=new e.ReminderCollection(this);
if(this._serverData&&this._serverData.reminders){var o=this._serverData.reminders;
for(var n in o){this._reminders.add(new e.Reminder(o[n]));
}}}return this._reminders;
};
})();
Type.registerNamespace("Telerik.Web.UI");
(function(){var b=Telerik.Web.UI;
var c=b.Scheduler;
var a=c.DateTime;
var e=60000;
b.Reminder=function(f){this._attributes=new b.SchedulerAttributeCollection(this);
if(f){this._trigger=f.trigger;
this._id=f.id;
if(typeof(f.attributes)!="undefined"){this._attributes._load(f.attributes);
}}else{this.set_id(d());
}};
b.Reminder.prototype={get_trigger:function(){return this._trigger;
},set_trigger:function(f){this._trigger=f;
},get_id:function(){return this._id;
},set_id:function(f){this._id=f;
},get_attributes:function(){return this._attributes;
},get_owner:function(){return this._owner;
},_setOwner:function(f){this._owner=f;
},get_triggerDate:function(){var f=this.get_owner();
if(!f){return;
}return a.add(f.get_start(),-(this.get_trigger()*e));
},clone:function(){var f=new b.Reminder();
f.set_trigger(this.get_trigger());
f.set_id(this.get_id());
f._attributes=this.get_attributes().clone();
f._setOwner(this.get_owner());
return f;
}};
b.Reminder.registerClass("Telerik.Web.UI.Reminder");
function d(){var h=[];
var f="0123456789abcdef";
for(var g=0;
g<32;
g++){h[g]=f.substr(Math.floor(Math.random()*16),1);
}h[12]="4";
h[16]=f.substr((h[16]&3)|8,1);
Array.insert(h,8,"-");
Array.insert(h,13,"-");
Array.insert(h,18,"-");
Array.insert(h,23,"-");
var j=h.join("");
return j;
}})();
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.ReminderCollection=function(b){this._array=[];
this._appointment=b;
};
a.ReminderCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
c._setOwner(this._appointment);
},insert:function(b,c){Array.insert(this._array,b,c);
c._setOwner(this._appointment);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getReminder(b);
if(c){this.remove(c);
}},indexOf:function(c){for(var b=0,d=this._array.length;
b<d;
b++){if(this._array[b]===c){return b;
}}return -1;
},clear:function(){this._array=[];
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getReminder(c));
}},getReminder:function(b){return this._array[b];
},findAll:function(b){var c=new a.ReminderCollection();
this.forEach(function(d){if(b(d)){c.add(d);
}});
return c;
},findByID:function(c){var b=null;
this.forEach(function(d){if(d.get_id()==c){b=d;
}});
return b;
},clone:function(){var b=new a.ReminderCollection();
this.forEach(function(c){b.add(c.clone());
});
return b;
}};
a.ReminderCollection.registerClass("Telerik.Web.UI.ReminderCollection");
}());

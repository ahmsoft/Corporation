Type.registerNamespace("Telerik.Web.UI");
(function(a,b,g){var f=60000;
var e=f*60;
var d=e*24;
b.RecurrenceState=function(){};
b.RecurrenceState.prototype={NotRecurring:0,Master:1,Occurrence:2,Exception:3};
b.RecurrenceState.registerEnum("Telerik.Web.UI.RecurrenceState");
b.SchedulerAppointment=function(l,k){this._attributes=new b.SchedulerAttributeCollection(this);
this._visible=true;
this._domElement=null;
this._domElements=[];
this._recurrenceState=b.RecurrenceState.NotRecurring;
this._recurrenceRule="";
this._backColor=null;
this._borderStyle="solid";
this._borderColor=null;
this._borderWidth=null;
this._selected=false;
if(!l){return;
}this._serverData=l;
this._id=l.id;
this._subject=l.subject;
this._description=l.description;
this._start=new Date(Date.parse(l.start));
this._end=new Date(Date.parse(l.end));
this._toolTip=l.toolTip;
this._internalID=l.internalID;
this._visible=l.visible;
this._recurrenceState=l.recurrenceState;
this._recurrenceParentID=l.recurrenceParentID;
this._contextMenuID=l.contextMenuID;
this._serializedResources=l.resources;
this._resources=null;
this._timeZoneID=(l.timeZoneID||k._timeZoneId);
if(l.domElements){for(var h=0,j=l.domElements.length;
h<j;
h++){this._domElements[h]=$get(l.domElements[h]);
}}this._column=null;
this._allowEdit=null;
if(typeof(l.allowEdit)!="undefined"){this._allowEdit=l.allowEdit;
}this._allowDelete=null;
if(typeof(l.allowDelete)!="undefined"){this._allowDelete=l.allowDelete;
}this._owner=k;
this._originalParent=null;
this._originalLeftOffset=null;
this._originalLeftMargin=null;
if(typeof(l.attributes)!="undefined"){this._attributes._load(l.attributes);
}};
b.SchedulerAppointment.prototype={get_id:function(){return this._id;
},get_internalID:function(){return this._internalID;
},get_subject:function(){return this._subject;
},set_subject:function(h){this._subject=h;
},get_description:function(){return this._description;
},set_description:function(h){this._description=h;
},get_start:function(){return this._start;
},set_start:function(h){this._start=h;
},get_end:function(){return this._end;
},set_end:function(h){this._end=h;
},get_timeZoneID:function(){return this._timeZoneID;
},set_timeZoneID:function(h){this._timeZoneID=h;
},get_duration:function(){return this._end-this._start;
},get_durationInMinutes:function(){return Math.round(this.get_duration()/f);
},set_selected:function(i){var h=this.get_element();
this._selected=i;
a(h).toggleClass("rsAptSelected",i);
},get_selected:function(){return this._selected;
},get_toolTip:function(){return this._toolTip;
},set_toolTip:function(h){this._toolTip=h;
if(this._domElements&&this._domElements.length){a.each(this._domElements,function(){this.title=h;
});
}},get_cssClass:function(){return this._cssClass||"";
},set_cssClass:function(h){this._cssClass=h;
if(this._domElements&&this._domElements.length){a.each(this._domElements,function(){this.className="rsApt";
a(this).addClass(h);
});
}},set_backColor:function(h){this._backColor=h;
var j=a(this.get_elements());
var i=j;
if(this._owner&&this._owner.get_renderMode()===b.RenderMode.Lite){i=a(".rsAptContent",j);
j.addClass("rsAptColor");
}else{if(this._getStyleMode()==b.AppointmentStyleMode.Default){i=a(".rsAptMid, .rsAptContent, .rsAptIn",j);
j.addClass("rsAptColor");
}else{j.addClass("rsAptSimple");
}}i.css("background-color",h);
},get_backColor:function(){return this._backColor;
},set_borderStyle:function(h){this._borderStyle=h;
this._renderBorder();
},get_borderStyle:function(){return this._borderStyle;
},set_borderColor:function(h){this._borderColor=h;
this._renderBorder();
},get_borderColor:function(){return this._borderColor;
},set_borderWidth:function(h){if(typeof(h)=="number"){h+="px";
}this._borderWidth=h;
this._renderBorder();
},get_borderWidth:function(){return this._borderWidth;
},get_visible:function(){return this._visible;
},get_radScheduler:function(){return this._owner;
},get_owner:function(){return this._owner;
},_setOwner:function(h){this._owner=h;
},get_allowEdit:function(){return(this._allowEdit==null)?true:this._allowEdit;
},set_allowEdit:function(h){this._allowEdit=h;
},get_allowDelete:function(){return(this._allowDelete==null)?true:this._allowDelete;
},set_allowDelete:function(h){this._allowDelete=h;
},get_element:function(){if(!this._domElement&&this._domElements&&this._domElements.length>0){this._domElement=this._domElements[0];
}return this._domElement;
},get_elements:function(){return this._domElements;
},get_timeSlot:function(){var h=this.get_owner();
if(!h){return null;
}return h.get_activeModel().getTimeSlotForAppointment(this);
},get_attributes:function(){return this._attributes;
},get_recurrenceState:function(){return this._recurrenceState;
},set_recurrenceState:function(h){this._recurrenceState=h;
},get_recurrenceRule:function(){return this._recurrenceRule;
},set_recurrenceRule:function(h){this._recurrenceRule=h;
},get_recurrenceParentID:function(){return this._recurrenceParentID;
},get_resources:function(){if(!this._resources){this._resources=new b.SchedulerResourceCollection();
for(var j in this._serializedResources){var i=this._serializedResources[j];
if(i.text){this._resources.add(new b.SchedulerResource(i));
}else{var k=this.get_owner().get_resources().getResourcesByType(i.type);
var h=this._resources;
k.forEach(function(l){if(l.get_key()==i.key){h.add(l);
}});
}}}return this._resources;
},edit:function(){var h=this.get_owner();
if(h){h.editAppointment(this);
}},remove:function(){var h=this.get_owner();
if(h){h.deleteAppointment(this);
}},compare:function(h){if(this.get_start().getTime()<h.get_start().getTime()){return -1;
}if(this.get_start().getTime()>h.get_start().getTime()){return 1;
}if(this.get_end().getTime()>h.get_end().getTime()){return -1;
}return 0;
},_isAllDay:function(){return this.get_duration()%d==0;
},_isInRange:function(l,j){var i=this.get_start();
var h=this.get_end();
var k=i<j&&h>l;
if(this.get_duration()==0){return k||i.getTime()==l.getTime();
}return k;
},_startsInRange:function(j,i){var h=this.get_start();
return(h<i&&h>j);
},_rangeIsInsideAppointment:function(i,h){return this.get_start()<=i&&this.get_end()>=h;
},_getTimeSlot:function(){if(!this._timeSlot){if(!this.get_owner()){return null;
}this._timeSlot=this.get_owner().get_activeModel().getTimeSlotForAppointment(this);
}return this._timeSlot;
},_getColumn:function(){return this._column;
},_setColumn:function(h){this._column=h;
},_setRowIndex:function(h){this._rowIndex=h;
},_getRowIndex:function(){return this._rowIndex;
},_startDrag:function(k){var l=this.get_owner(),j=l._initialDragAppointmentElement,m=l.get_element(),h=a(k);
a(j).css("opacity",0.6);
if($telerik.isIE&&l.get_renderMode()!==b.RenderMode.Lite){a(j).css("padding-bottom","4px");
}m.style.cursor="move";
j.style.zIndex=999;
this._originalParent=j.parentNode;
if(l.get_selectedView()==b.SchedulerViewType.TimelineView){var i=Math.floor(parseInt(j.style.left,10)/100);
while(i--){h=h.next();
}this._removeTimelineSlotsOffset(j);
}Sys.UI.DomElement.removeCssClass(j,"rsWAppointmentDelete");
},_removeTimelineSlotsOffset:function(h){var i=h.style,j=i.left,k;
this._originalLeftOffset=i.left;
this._originalLeftMargin=i.marginLeft;
if(j){k=parseFloat(j,10)%100;
i.left=k+"%";
}i.marginLeft="";
},_resetDragStyles:function(i){var j=this.get_owner();
var h=j._initialDragAppointmentElement;
a(h).css("opacity","");
if($telerik.isIE&&j.get_renderMode()!==b.RenderMode.Lite){a(h).css("padding-bottom","0px");
}if(i&&j.get_selectedView()==b.SchedulerViewType.TimelineView){h.style.left=this._originalLeftOffset;
h.style.marginLeft=this._originalLeftMargin;
}h.style.zIndex="";
var k=j.get_element();
if(k&&k.style){k.style.cursor="";
}},_abortDrag:function(){this._resetDragStyles(true);
var h=this.get_owner()._initialDragAppointmentElement;
if(h.parentNode!=this._originalParent){this._originalParent.appendChild(h);
}},_raiseMoveEnd:function(h){var k=this.get_owner(),j=k._activeModel.getTimeSlotFromDomElement(k._initialDragCell),i={appointment:this,newStartTime:this.get_start(),editingRecurringSeries:false,targetSlot:j,isAbortedByUser:h||false};
a.raiseCancellableControlEvent(k,"appointmentMoveEnd",i);
},_finishDrag:function(){var k=this.get_owner(),i=k._activeModel,l=i.getTimeSlotFromDomElement(k._initialDragCell),m=i.getTimeSlotFromDomElement(k._draggingHoveredCell),j=i.get_startOfMovedAppointment(this,m,l);
this._resetDragStyles(false);
if((l.get_index()==m.get_index())){this._abortDrag();
this._raiseMoveEnd();
return;
}var h={OnConfirm:this._onAppointmentMoveCallback,OnCancel:this._onAppointmentMoveAbortCallback,Scheduler:k,Appointment:this,SourceSlot:l,TargetSlot:m,NewStart:j,CallbackIsCalledFromDialog:true};
if(k.get_displayRecurrenceActionDialogOnMove()&&(this._recurrenceState==1||this._recurrenceState==2)){this._showRecurrenceActionDialog(h);
}else{h.CallbackIsCalledFromDialog=false;
this._onAppointmentMoveCallback(false,h);
}},_showRecurrenceActionDialog:function(h){var j=this.get_owner();
var k=new b.SchedulerRecurrenceActionDialogShowingEventArgs(h.Appointment,b.RecurrenceAction.Move);
j._raiseRecurrenceActionDialogShowing(k);
if(k.get_cancel()){var i=k.get_editSeries();
if(i!==null){h.CallbackIsCalledFromDialog=false;
this._onAppointmentMoveCallback(i,h);
}else{this._onAppointmentMoveAbortCallback(h);
}}else{b.RecurrenceActionDialog.Show(b.RecurrenceAction.Move,h);
}},_onAppointmentMoveCallback:function(j,h){h.Scheduler._raiseRecurrenceActionDialogClosedEvent(h,j,b.RecurrenceAction.Move);
var k={appointment:h.Appointment,newStartTime:h.NewStart,editingRecurringSeries:j,targetSlot:h.TargetSlot,isAbortedByUser:false};
var i=a.raiseCancellableControlEvent(h.Scheduler,"appointmentMoveEnd",k);
if(this._owner&&this.get_owner()._webServiceSettings.get_isEmpty()&&(this.get_owner().get_activeModel()._groupingResource!==g)&&h.Appointment.get_resources().indexOf(h.SourceSlot.get_resource())==-1){i=true;
}if(!i){h.Scheduler.moveAppointment(h.Appointment,j,h.SourceSlot,h.TargetSlot);
}else{h.Appointment._abortDrag();
}},_onAppointmentMoveAbortCallback:function(h){h.Scheduler._raiseRecurrenceActionDialogClosedEvent(h,false,b.RecurrenceAction.Move);
h.Appointment._abortDrag();
h.Appointment._raiseMoveEnd(true);
},get_contextMenuID:function(){return this._contextMenuID;
},set_contextMenuID:function(h){this._contextMenuID=h;
this._contextMenu=null;
},clone:function(){var h=new b.SchedulerAppointment();
h._id=this._id;
h._subject=this._subject;
h._description=this._description;
h._start=this._start;
h._end=this._end;
h._toolTip=this._toolTip;
h._internalID=this._internalID;
h._visible=this._visible;
h._recurrenceState=this._recurrenceState;
h._recurrenceParentID=this._recurrenceParentID;
h._contextMenuID=this._contextMenuID;
h._resources=this.get_resources().clone();
h._attributes=this.get_attributes().clone();
if(this.get_reminders){h._reminders=this.get_reminders().clone();
}for(var i in this){if(h[i]===g&&!i.startsWith("_")){h[i]=c(this[i]);
}}return h;
},_getStyleMode:function(){var h=this.get_owner();
if(!h){return b.AppointmentStyleMode.Auto;
}return h.get_appointmentStyleMode();
},_renderBorder:function(){var h=this.get_borderColor();
var j=this.get_borderWidth()||"";
var i=this.get_borderStyle();
var k=this.get_element();
if(!k){return;
}if(this._owner&&this._owner.get_renderMode()===b.RenderMode.Lite){a(".rsAptContent",k).css({"border-color":h,"border-style":i,"border-width":j});
}else{if(this._getStyleMode()==b.AppointmentStyleMode.Default){a(".rsAptMid, .rsAptContent, .rsAptIn",k).css({"border-color":h,"border-style":i,"border-width":j});
}else{a(k).addClass("rsAptSimple").css({"border-top-color":h,"border-top-style":i,"border-top-width":j,"border-bottom-color":h,"border-bottom-style":i,"border-bottom-width":j}).find(".rsAptOut").css({"border-left-color":h,"border-left-style":i,"border-left-width":j,"border-right-color":h,"border-right-style":i,"border-right-width":j});
}}}};
function c(j){var h=j,i;
if(j&&typeof j==="object"){h=Object.prototype.toString.call(j)==="[object Array]"?[]:{};
for(i in j){h[i]=c(j[i]);
}}return h;
}b.SchedulerAppointment.registerClass("Telerik.Web.UI.SchedulerAppointment");
})($telerik.$,Telerik.Web.UI);
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.SchedulerAppointmentCollection=function(a){this._array=[];
this._scheduler=a;
};
Telerik.Web.UI.SchedulerAppointmentCollection.prototype={add:function(b){var a=this._array.length;
this.insert(a,b);
},insert:function(a,b){Array.insert(this._array,a,b);
this._notify(function(c){c._onAppointmentInserting(b);
});
},remove:function(b,a){if(typeof(a)=="undefined"){a=true;
}var c=Array.remove(this._array,b);
this._notify(function(d){d._onAppointmentRemove(b,a);
});
return c;
},removeAt:function(b,a){var c=this.getAppointment(b);
if(c){this.remove(c,a);
}},_clear:function(){this._notify(function(a){a._onAppointmentsClear();
});
this._array=[];
},get_count:function(){return this._array.length;
},getAppointment:function(a){return this._array[a];
},indexOf:function(a){return Array.indexOf(this._array,a);
},forEach:function(c){for(var b=0,a=this.get_count();
b<a;
b++){c(this.getAppointment(b));
}},getAppointmentsInRange:function(b,a){return this.findAll(function(c){var e=c.get_start();
var d=c.get_end();
return e<a&&d>b;
});
},getAppointmentsStartingInRange:function(b,a){return this.findAll(function(c){var d=c.get_start();
return d>=b&&d<a;
});
},findAll:function(a){var b=new Telerik.Web.UI.SchedulerAppointmentCollection();
this.forEach(function(c){if(a(c)){b.add(c);
}});
return b;
},find:function(b){var a=null;
this.forEach(function(c){if(!a&&b(c)){a=c;
}});
return a;
},findByID:function(a){var b=null;
this.forEach(function(c){if(c.get_id()==a){b=c;
}});
return b;
},findByResource:function(b){var a=new Telerik.Web.UI.SchedulerResource();
if(b){a._type=b.type||b.get_type();
a._key=b.key;
if(b.get_key){a._key=b.get_key();
}}return this.findAll(function(c){var d=c.get_resources().getResourcesByType(a.get_type());
if(typeof a.get_key()==="undefined"){return d.get_count()>0;
}var e=false;
d.forEach(function(f){if(f.get_key()===a.get_key()){e=true;
}});
return e;
});
},_notify:function(a){if(this._scheduler){a(this._scheduler);
}}};
Telerik.Web.UI.SchedulerAppointmentCollection.registerClass("Telerik.Web.UI.SchedulerAppointmentCollection");
(function(a){Type.registerNamespace("Telerik.Web.UI");
var b=Telerik.Web.UI;
b.AppointmentsTooltip=function(c){a.observable(this);
this._container=c;
this._isVisible=false;
this._element=null;
this._scrollTimer=null;
this._anchor=null;
};
b.AppointmentsTooltip.prototype={dispose:function(){this.hide();
this._container=null;
this.disposeObservable();
},show:function(){this._element=a("<div class='rsTooltip'><div class='rsToolTipArrow rsToolTipArrowUp' style='display:none'></div><div class='rsToolTipContent'></div><div class='rsToolTipArrow rsToolTipArrowDown' style='display:none'></div><div class='rsToolTipCallOut'></div></div>").appendTo(this._container);
this._bindEvents();
return this;
},hide:function(){a(this._element).remove();
this._element=null;
this._anchor=null;
return this;
},position:function(){var c=this._anchor;
var f=this._container;
var e=this._getElementPosition(c,f);
var j=this._getElementPosition(a(c).parents("table")[0],f);
var g="rsTooltipRight";
var d=e.top+e.height/2;
var l=a(this._element).outerWidth();
var h=a(this._element).height();
var i=e.right;
var k;
if(a(f).width()<i+l){i=e.left-l;
g="rsTooltipLeft";
}if(h>j.height){a(this._element).height(j.height).find(".rsToolTipArrow").show();
h=j.height;
}k=d-h/2;
if(k+h>j.bottom){k=j.bottom-h;
}a(this._element).addClass(g).css({left:i,top:k}).find(".rsToolTipCallOut").css({top:d-k});
this._resolveScrollArrows();
return this;
},populate:function(c){var e=this;
var d=a("<ul>").appendTo(a(this._element).find(".rsToolTipContent"));
a.each(c,function(){if(!this.get_visible()){return;
}var f=e._getAppointmentHtml(this);
d.append(f);
});
return this;
},get_isVisible:function(){return this._isVisible;
},_bindEvents:function(){var f=this;
var c=a(this._element);
var d=function(h){var g=c.find(".rsToolTipContent");
f._scrollTimer=setInterval(function(){g.scrollTop(g.scrollTop()+h);
f._resolveScrollArrows();
},16);
};
var e=function(){clearInterval(f._scrollTimer);
};
c.on("mouseenter",function(){f.trigger("mouseenter");
}).on("mouseleave",function(){f.trigger("mouseleave");
}).on("mouseenter",".rsToolTipArrowUp",function(){d(-3);
}).on("mouseenter",".rsToolTipArrowDown",function(){d(3);
}).on("mouseleave",".rsToolTipArrowUp",e).on("mouseleave",".rsToolTipArrowDown",e);
},_resolveScrollArrows:function(){var c=a(this._element);
var d=c.find(".rsToolTipContent")[0];
c.find(".rsToolTipArrowUp, .rsToolTipArrowDown").show();
if(d.scrollTop===0){c.find(".rsToolTipArrowUp").hide();
}if(d.scrollTop+a(d).innerHeight()>=d.scrollHeight){c.find(".rsToolTipArrowDown").hide();
}},_getAppointmentHtml:function(c){var e=this._getAppointmentClass(c);
var d="<li";
if(e){d+=(" class='"+e+"'");
}d+=">";
if(c.get_resources().get_count()>0){d+="<span class='rsResourceMarker rsMarkerBlock'></span>";
}d+=(c.get_subject()+"</li>");
return d;
},_getAppointmentClass:function(c){var e=c.get_owner();
var d=[];
var f=this;
c.get_resources().forEach(function(g){f._addUniqueClassName(d,g.get_cssClass());
if(e&&e.get_resourceStyles()){a.each(e.get_resourceStyles().getMatchingClasses(g),function(){f._addUniqueClassName(d,this);
});
var h=e.get_resources().getResourceByTypeAndKey(g.get_type(),g.get_key());
if(h){f._addUniqueClassName(d,h.get_cssClass());
}}});
return d.join(" ");
},_addUniqueClassName:function(c,d){if(d&&Array.indexOf(c,d)==-1){c.push(d);
}},_getElementPosition:function(d,h){var c=a(d);
var g=c.offset();
var k=c.width();
var e=c.height();
var f=g.left;
var j=g.top;
if(h){var i=a(h).offset();
f-=i.left;
j-=i.top;
}return{left:f,right:f+k,top:j,bottom:j+e,width:k,height:e};
}};
b.AppointmentsTooltip.registerClass("Telerik.Web.UI.AppointmentsTooltip");
})($telerik.$);
Type.registerNamespace("Telerik.Web.UI.Scheduler.Rendering");
(function(){var a=Telerik.Web.UI.Scheduler.Rendering;
a.Block=function(){this._columns=[];
this._parts=[];
this._start=null;
this._end=null;
};
a.Block.prototype={add:function(e){if(this._columns.length<1){this._createColumn();
}var b=false;
for(var c=0;
c<this._columns.length;
c++){if(this._columns[c].tryAdd(e)){b=true;
break;
}}if(!b){var d=this._createColumn();
d.tryAdd(e);
}Array.add(this._parts,e);
if(!this._start||this._start>e.start){this._start=e.start;
}if(!this._end||this._end<e.end){this._end=e.end;
}},remove:function(c){var d=Array.remove(this._parts,c);
if(!d){return;
}var b=c.column;
b.remove(c);
if(b.get_parts().length==0){Array.remove(this._columns,b);
}},overlapsWith:function(b){if(this._parts.length==0){return false;
}return this._start<b.end&&this._end>b.start;
},_createColumn:function(){var b=new a.Column(this);
var c=this._columns.length;
Array.insert(this._columns,c,b);
return b;
},get_columns:function(){return this._columns;
},forEach:function(d){for(var c=0,b=this._parts.length;
c<b;
c++){d(this._parts[c]);
}}};
a.Block.registerClass("Telerik.Web.UI.Scheduler.Rendering.Block");
})();
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler");
(function(){var a=Telerik.Web.UI;
var b=a.Scheduler;
a.AppointmentEventArgs=function(c){a.AppointmentEventArgs.initializeBase(this);
this._appointment=c;
};
a.AppointmentEventArgs.prototype={get_appointment:function(){return this._appointment;
}};
a.AppointmentEventArgs.registerClass("Telerik.Web.UI.AppointmentEventArgs",Sys.EventArgs);
a.SchedulerAppointmentCancelEventArgs=function(c){a.SchedulerAppointmentCancelEventArgs.initializeBase(this);
this._appointment=c;
};
a.SchedulerAppointmentCancelEventArgs.prototype={get_appointment:function(){return this._appointment;
}};
a.SchedulerAppointmentCancelEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentCancelEventArgs",Sys.CancelEventArgs);
a.SchedulerAppointmentClickEventArgs=function(c,d){a.SchedulerAppointmentClickEventArgs.initializeBase(this,[c]);
this._domEvent=d;
};
a.SchedulerAppointmentClickEventArgs.prototype={get_domEvent:function(){return this._domEvent;
}};
a.SchedulerAppointmentClickEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentClickEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentInsertingEventArgs=function(d,c,e){a.SchedulerAppointmentInsertingEventArgs.initializeBase(this);
this._startTime=d;
this._isAllDay=c;
this._targetSlot=e;
};
a.SchedulerAppointmentInsertingEventArgs.prototype={get_startTime:function(){return this._startTime;
},get_isAllDay:function(){return this._isAllDay;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentInsertingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentInsertingEventArgs",Sys.CancelEventArgs);
a.SchedulerAppointmentResizeStartEventArgs=function(c){a.SchedulerAppointmentResizeStartEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentResizeStartEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizeStartEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentResizeEndEventArgs=function(c,g,f,e,d){a.SchedulerAppointmentResizeEndEventArgs.initializeBase(this,[c]);
this._targetSlot=g;
this._newStartTime=f;
this._newEndTime=e;
this._editingRecurringSeries=d;
};
a.SchedulerAppointmentResizeEndEventArgs.prototype={get_newTime:function(){return this._newEndTime;
},get_newStartTime:function(){return this._newStartTime;
},get_newEndTime:function(){return this._newEndTime;
},get_editingRecurringSeries:function(){return this._editingRecurringSeries;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentResizeEndEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizeEndEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentResizingEventArgs=function(c,d){a.SchedulerAppointmentResizingEventArgs.initializeBase(this,[c]);
this._targetSlot=d;
};
a.SchedulerAppointmentResizingEventArgs.prototype={get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentResizingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentDeletingEventArgs=function(c,d){a.SchedulerAppointmentDeletingEventArgs.initializeBase(this,[c]);
this._editingRecurringSeries=d;
};
a.SchedulerAppointmentDeletingEventArgs.prototype={get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerAppointmentDeletingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDeletingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentDeletedEventArgs=function(c){a.SchedulerAppointmentDeletedEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentDeletedEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDeletedEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentEditingEventArgs=function(c,d){a.SchedulerAppointmentEditingEventArgs.initializeBase(this,[c]);
this._editingRecurringSeries=d;
};
a.SchedulerAppointmentEditingEventArgs.prototype={get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerAppointmentEditingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentEditingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentMoveStartEventArgs=function(c){a.SchedulerAppointmentMoveStartEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentMoveStartEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentMoveStartEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentMovingEventArgs=function(c,d){a.SchedulerAppointmentMovingEventArgs.initializeBase(this,[c]);
this._targetSlot=d;
};
a.SchedulerAppointmentMovingEventArgs.prototype={get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentMovingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentMovingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerTimeSlotClickEventArgs=function(e,d,c){a.SchedulerTimeSlotClickEventArgs.initializeBase(this);
this._time=e;
this._targetSlot=d;
this._domEvent=c;
};
a.SchedulerTimeSlotClickEventArgs.prototype={get_time:function(){return this._time;
},get_domEvent:function(){return this._domEvent;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerTimeSlotClickEventArgs.registerClass("Telerik.Web.UI.SchedulerTimeSlotClickEventArgs",Sys.EventArgs);
a.SchedulerAppointmentDoubleClickEventArgs=function(c){a.SchedulerAppointmentDoubleClickEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentDoubleClickEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDoubleClickEventArgs",a.AppointmentEventArgs);
a.SchedulerRecurrenceActionDialogShowingEventArgs=function(c,d){a.SchedulerRecurrenceActionDialogShowingEventArgs.initializeBase(this,[c]);
this._recurrenceAction=d;
this._editSeries=null;
};
a.SchedulerRecurrenceActionDialogShowingEventArgs.prototype={get_recurrenceAction:function(){return this._recurrenceAction;
},get_editSeries:function(){return this._editSeries;
},set_editSeries:function(c){this._editSeries=c;
}};
a.SchedulerRecurrenceActionDialogShowingEventArgs.registerClass("Telerik.Web.UI.SchedulerRecurrenceActionDialogShowingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerRecurrenceActionDialogClosedEventArgs=function(c,e,d){a.SchedulerRecurrenceActionDialogClosedEventArgs.initializeBase(this,[c]);
this._recurrenceAction=e;
this._editSeries=d;
};
a.SchedulerRecurrenceActionDialogClosedEventArgs.prototype={get_recurrenceAction:function(){return this._recurrenceAction;
},get_editSeries:function(){return this._editSeries;
}};
a.SchedulerRecurrenceActionDialogClosedEventArgs.registerClass("Telerik.Web.UI.SchedulerRecurrenceActionDialogClosedEventArgs",a.AppointmentEventArgs);
a.SchedulerFormCreatedEventArgs=function(c,e,f,d){a.SchedulerFormCreatedEventArgs.initializeBase(this,[c]);
this._formElement=e;
this._mode=f;
this._editingRecurringSeries=d||false;
};
a.SchedulerFormCreatedEventArgs.prototype={get_formElement:function(){return this._formElement;
},get_mode:function(){return this._mode;
},get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerFormCreatedEventArgs.registerClass("Telerik.Web.UI.SchedulerFormCreatedEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentContextMenuEventArgs=function(c,d){a.SchedulerAppointmentContextMenuEventArgs.initializeBase(this,[c]);
this._domEvent=d;
};
a.SchedulerAppointmentContextMenuEventArgs.prototype={get_domEvent:function(){return this._domEvent;
}};
a.SchedulerAppointmentContextMenuEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentContextMenuEventArgs",a.AppointmentEventArgs);
a.SchedulerTimeSlotContextMenuEventArgs=function(h,e,c,g,f,d){a.SchedulerTimeSlotContextMenuEventArgs.initializeBase(this);
this._time=h;
this._isAllDay=e;
this._domEvent=c;
this._targetSlot=g;
this._startSlot=f;
this._endSlot=d;
};
a.SchedulerTimeSlotContextMenuEventArgs.prototype={get_time:function(){return this._time;
},get_isAllDay:function(){return this._isAllDay;
},get_domEvent:function(){return this._domEvent;
},get_targetSlot:function(){return this._targetSlot;
},get_startSlot:function(){return this._startSlot;
},get_endSlot:function(){return this._endSlot;
}};
a.SchedulerTimeSlotContextMenuEventArgs.registerClass("Telerik.Web.UI.SchedulerTimeSlotContextMenuEventArgs",Sys.EventArgs);
a.SchedulerWebServiceEventArgs=function(c){a.SchedulerWebServiceEventArgs.initializeBase(this);
this._schedulerInfo=c;
};
a.SchedulerWebServiceEventArgs.prototype={get_schedulerInfo:function(){return this._schedulerInfo;
}};
a.SchedulerWebServiceEventArgs.registerClass("Telerik.Web.UI.SchedulerWebServiceEventArgs",Sys.CancelEventArgs);
a.SchedulerRequestFailedEventArgs=function(c){a.SchedulerRequestFailedEventArgs.initializeBase(this);
this._errorMessage=c;
};
a.SchedulerRequestFailedEventArgs.prototype={get_errorMessage:function(){return this._errorMessage;
}};
a.SchedulerRequestFailedEventArgs.registerClass("Telerik.Web.UI.SchedulerRequestFailedEventArgs",Sys.CancelEventArgs);
b.RequestSuccessEventArgs=function(c){b.RequestSuccessEventArgs.initializeBase(this);
this._result=c;
};
b.RequestSuccessEventArgs.prototype={get_result:function(){return this._result;
}};
b.RequestSuccessEventArgs.registerClass("Telerik.Web.UI.Scheduler.RequestSuccessEventArgs",Sys.EventArgs);
b.NavigationCommandEventArgs=function(c,d){b.NavigationCommandEventArgs.initializeBase(this);
this._command=c;
this._selectedDate=d;
};
b.NavigationCommandEventArgs.prototype={get_command:function(){return this._command;
},get_selectedDate:function(){return this._selectedDate;
}};
b.NavigationCommandEventArgs.registerClass("Telerik.Web.UI.Scheduler.NavigationCommandEventArgs",Sys.CancelEventArgs);
b.NavigationCompleteEventArgs=function(c){b.NavigationCompleteEventArgs.initializeBase(this);
this._command=c;
};
b.NavigationCompleteEventArgs.prototype={get_command:function(){return this._command;
}};
b.NavigationCompleteEventArgs.registerClass("Telerik.Web.UI.Scheduler.NavigationCompleteEventArgs",Sys.EventArgs);
b.AppointmentDataBoundEventArgs=function(c,d){b.AppointmentDataBoundEventArgs.initializeBase(this,[c]);
this._data=d;
};
b.AppointmentDataBoundEventArgs.prototype={get_data:function(){return this._data;
}};
b.AppointmentDataBoundEventArgs.registerClass("Telerik.Web.UI.Scheduler.AppointmentDataBoundEventArgs",a.AppointmentEventArgs);
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler.Rendering");
(function(){var a=$telerik.$;
var b=Telerik.Web.UI.Scheduler.Rendering;
b.Column=function(c){this._parts=[];
this._block=c;
};
b.Column.prototype={tryAdd:function(d){var c=this._getPartsInRange(d.start,d.end);
if(c.length==0){Array.add(this._parts,d);
d.column=this;
return true;
}return false;
},remove:function(c){var d=Array.remove(this._parts,c);
if(d){c.column=null;
}},get_parts:function(){return this._parts;
},get_block:function(){return this._block;
},get_width:function(d){var e=d?100:90,c=this.get_block().get_columns().length;
return e/c;
},get_left:function(d){var c=this.get_block().get_columns(),e=Array.indexOf(c,this),f=d?100:90;
return f/c.length*e;
},_getPartsInRange:function(d,c){return a.grep(this._parts,function(e){return(e.start<c&&e.end>d);
});
}};
b.Column.registerClass("Telerik.Web.UI.Scheduler.Rendering.Column");
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler");
(function(){var a=Telerik.Web.UI.Scheduler;
var d=60000;
var c=d*60;
var b=c*24;
a.DateHelper={getStartOfWeek:function(f,h){var g=f.getDay();
var e=0;
while(g!=h){if(g==0){g=6;
}else{g--;
}e++;
}return new a.DateTime(f).add(-e*b).toDate();
},getEndOfWeek:function(e,h,f){var g=a.DateHelper.getStartOfWeek(e,h);
return new a.DateTime(g).add(f*b).toDate();
},getWeekLength:function(g,e,f){var i=a.DateHelper.getStartOfWeek(g,e);
var h=new Date(i.getTime());
while(h.getDay()!=f){h=new a.DateTime(h).add(b).toDate();
}return((new a.DateTime(h).subtract(i)/b)+1);
},getNthWeekDay:function(j,m,l){var f=a.DateHelper.getDaysInMonth(j.getFullYear(),j.getMonth());
var g=a.DateHelper.getFirstDayOfMonth(j);
var h=l-g.getDay();
var e=1;
var k;
var i=new Date(j);
if(h<0){h+=7;
}h+=1;
while(e<=m&&h<=f){k=h;
h+=7;
e+=1;
}i.setDate(k);
return i;
},getDaysInMonth:function(f,e){return 32-new Date(f,e,32).getDate();
},getFirstDayOfMonth:function(e){var f=new Date(e.getFullYear(),e.getMonth(),1,0,0,0);
return f;
},getLastDayOfMonth:function(e){var f=new Date(0);
f.setHours(0);
f.setMinutes(0);
var h=e.getFullYear();
var g=e.getMonth();
f.setFullYear(h,g,this.getDaysInMonth(h,g));
return f;
},getFirstDayOfYear:function(e){var f=new Date(e.getFullYear(),0,1,0,0,0);
return f;
}};
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler");
Telerik.Web.UI.Scheduler.EventMap=function(){this._owner=null;
this._element=null;
this._eventMap={};
this._onDomEventDelegate=null;
this._browserHandlers={};
};
Telerik.Web.UI.Scheduler.EventMap.prototype={initialize:function(b,a){this._owner=b;
if(!a){a=this._owner.get_element();
}this._element=a;
},skipElement:function(b,c){var f=$telerik.getTouchTarget(b);
var d=f.tagName.toLowerCase();
var a=f.className;
if(d=="select"){return true;
}if(d=="option"){return true;
}if(d=="a"&&(!c||a.indexOf(c)<0)){return true;
}if(d=="input"){return true;
}if(d=="textarea"){return true;
}if(d=="button"){return true;
}return false;
},dispose:function(){if(this._onDomEventDelegate){for(var d in this._eventMap){if(this._shouldUseEventCapture(d)){var a=this._browserHandlers[d];
this._element.removeEventListener(d,a,true);
}else{$telerik.removeHandler(this._element,d,this._onDomEventDelegate);
}}this._onDomEventDelegate=null;
var b=true;
if(this._element._events){for(var c in this._element._events){if(this._element._events[c].length>0){b=false;
break;
}}if(b){this._element._events=null;
}}}},addHandlerForClassName:function(f,b,g){if(typeof(this._eventMap[f])=="undefined"){this._eventMap[f]={};
if(this._shouldUseEventCapture(f)){var c=this._getDomEventDelegate();
var d=this._element;
var a=function(h){return c.call(d,new Sys.UI.DomEvent(h));
};
this._browserHandlers[f]=a;
d.addEventListener(f,a,true);
}else{$telerik.addHandler(this._element,f,this._getDomEventDelegate());
}}var e=this._eventMap[f];
e[b]=g;
},_onDomEvent:function(d){var c=this._eventMap[d.type],h=$telerik.getTouchTarget(d);
if(!c){return;
}if($telerik.$.isEmptyObject(h)){return;
}while(h&&h.nodeType!==9&&h.nodeType!==11){var a=h.className;
var g=(typeof a=="string")?a.split(" "):[];
var b=null;
for(var f=0;
f<g.length;
f++){b=c[g[f]];
if(b){break;
}}if(b){this._fillEventFields(d,h);
if(b.call(this._owner,d)!=true){if(!h.parentNode){d.stopPropagation();
}return;
}}if(h==this._element){return;
}h=h.parentNode;
}},_fillEventFields:function(c,b){c.eventMapTarget=b;
if(c.rawEvent.relatedTarget){c.eventMapRelatedTarget=c.rawEvent.relatedTarget;
}else{if(c.type=="mouseover"){c.eventMapRelatedTarget=c.rawEvent.fromElement;
}else{c.eventMapRelatedTarget=c.rawEvent.toElement;
}}if(!c.eventMapRelatedTarget){return;
}try{var a=c.eventMapRelatedTarget.className;
}catch(d){c.eventMapRelatedTarget=this._element;
}},_shouldUseEventCapture:function(a){return(a=="blur"||a=="focus")&&$telerik.isFirefox&&Sys.Browser.version>=3;
},_getDomEventDelegate:function(){if(!this._onDomEventDelegate){this._onDomEventDelegate=Function.createDelegate(this,this._onDomEvent);
}return this._onDomEventDelegate;
}};
Telerik.Web.UI.Scheduler.EventMap.registerClass("Telerik.Web.UI.Scheduler.EventMap");
Type.registerNamespace("Telerik.Web.UI");
(function(a,b){b.InlineTemplateBase=function(g,d,c,f,e){this._schedulerElement=g;
this._localization=d;
this._textareaId=this._schedulerElement.id+"_SubjectTextBox";
this._events=null;
};
b.InlineTemplateBase.prototype={get_events:function(){if(!this._events){this._events=new Sys.EventHandlerList();
}return this._events;
},get_text:function(){if(this._textArea){return this._textArea.value;
}},set_text:function(c){if(this._textArea){this._textArea.value=c;
}},get_start:function(){return this._start;
},set_start:function(c){this._start=c;
},get_end:function(){return this._end;
},set_end:function(c){this._end=c;
},get_editSeries:function(){return this._editSeries;
},set_editSeries:function(c){this._editSeries=c;
},get_isInsert:function(){return this._isInsert;
},set_isInsert:function(c){this._isInsert=c;
},get_appointmentInternalID:function(){return this._appointmentInternalID;
},set_appointmentInternalID:function(c){this._appointmentInternalID=c;
},get_element:function(){return this._element;
},dispose:function(){this._events=null;
this._cleanup(true);
},save:function(){this._raiseEvent("saveClicked",null);
this.hide();
},advanced:function(){this._raiseEvent("moreClicked",null);
},hide:function(){this._cleanup();
},add_saveClicked:function(c){this.get_events().addHandler("saveClicked",c);
},add_moreClicked:function(c){this.get_events().addHandler("moreClicked",c);
},add_deleteClicked:function(c){this.get_events().addHandler("deleteClicked",c);
},add_keyDown:function(c){this.get_events().addHandler("keyDown",c);
},_raiseEvent:function(d,c){var e=this.get_events().getHandler(d);
if(e){if(!c){c=Sys.EventArgs.Empty;
}e(this,c);
}}};
b.InlineTemplateBase.registerClass("Telerik.Web.UI.InlineTemplateBase",null,Sys.IDisposable);
b.InlineTemplateNative=function(i,e,d,g,f){b.InlineTemplateNative.initializeBase(this,[i,e,d,g,f]);
var h=e.ShowAdvancedForm,c=e.ContextMenuDelete;
this._contentTemplate='<textarea id="{0}" rows="5" cols="20"></textarea><hr />';
if(d){this._contentTemplate+='<button type="button" class="rsButton rsAptEditMore">'+h+"</button>";
}this._contentTemplateDelete='<button type="button" class="rsButton rsAptEditDelete">'+c+"</button>";
};
b.InlineTemplateNative.prototype={instantiateIn:function(c){this._cleanup();
var h=this,g=this._localization,f=this.get_isInsert(),d=f?g.AdvancedNewAppointment:g.AdvancedEditAppointment,e=String.format(this._contentTemplate,this._textareaId);
if(!f){e+=this._contentTemplateDelete;
}this._dialog=a.modal("#"+this._schedulerElement.id+">.rsTopWrap",b.RenderMode.Mobile);
this._dialog.initialize().set_content({title:d,content:e,ok:g.Save,cancel:g.Cancel}).set_onActionConfirm(function(){h.save();
}).set_onActionCancel(function(){h.hide();
}).show();
this._element=this._dialog.get_element();
this._element.originalParent=c;
this._textArea=document.getElementById(this._textareaId);
this._attachHandlers();
},_delete:function(){this._raiseEvent("deleteClicked",null);
this.hide();
},attachTo:function(l){var o=this,d=a(l),i=d.hasClass("rsAptEditSizingWrapperInsert"),j=this._localization,h=i?j.AdvancedNewAppointment:j.AdvancedEditAppointment,c;
d.remove();
this._dialog=a.modal("#"+this._schedulerElement.id+">.rsTopWrap",b.RenderMode.Mobile);
this._element=this._dialog.get_element();
c=a(this._element);
c.find(".rsModalTitle").text(h);
var m=d.find("div.rsTemplateWrapper");
if(m.length>0){c.find(".rsModalContent, .rsModalButtons").remove();
c.find(".rsModalDialog").append(m);
return;
}var n=d.find("textarea");
n.height("");
c.find(".rsModalContent").append(n);
var f=d.find(".rsAptEditConfirm").addClass("rsButton");
c.find(".rsModalConfirm").replaceWith(f);
var e=d.find(".rsAptEditCancel").addClass("rsButton");
c.find(".rsModalClose").replaceWith(e);
var k=d.find(".rsAptEditMore").addClass("rsButton");
c.find(".rsModalContent").append("<hr />").append(k);
var g=d.find(".rsAptEditDelete").addClass("rsButton");
if(g.length>0){c.find(".rsModalContent").append(g);
this._deleteLinkHref=g[0].href;
g[0].href="";
g.on("click",function(p){$telerik.cancelRawEvent(p);
o._delete();
});
}this._dialog.show();
},repaint:function(){this._dialog.set_dimensions(a(this._schedulerElement));
},_attachHandlers:function(){var c=this;
a(this._element).on("click",".rsAptEditDelete",function(d){c._delete();
$telerik.cancelRawEvent(d);
}).on("click",".rsAptEditMore",function(d){c.advanced();
c.hide();
$telerik.cancelRawEvent(d);
});
},_cleanup:function(c){if(!this._element){return;
}a(this._element).off();
this._element=null;
if(this._dialog){this._dialog.hide();
}}};
b.InlineTemplateNative.registerClass("Telerik.Web.UI.InlineTemplateNative",b.InlineTemplateBase);
b.InlineTemplate=function(g,d,c,f,e){b.InlineTemplate.initializeBase(this,[g,d,c,f,e]);
this._schedulerContentElement=$telerik.getElementByClassName(g,"rsContent","div");
this._minWidth=f;
this._minHeight=e;
this._wrapZIndexStep=1000;
this._addEmptySpace=true;
this._formHTMLTemplate='<div class="rsAptEditFormWrapper"><div class="rsAptEditFormOuter"><div class="rsAptEditFormMiddle"><div class="rsAptEditFormMiddle2"><div class="rsAptEditFormInner"><div style="{0}" class="rsAptEditTextareaWrapper"><textarea id="{1}" style="{2}"></textarea></div><div class="rsEditOptions"><a href="#" class="rsAptEditConfirm">'+d.Save+'</a><a href="#" class="rsAptEditCancel">'+d.Cancel+"</a>";
if(c){this._formHTMLTemplate+='<a href="#" class="rsAptEditMore">'+d.ShowAdvancedForm+"</a>";
}this._formHTMLTemplate+='</div><div class="rsAptEditResizeHandle"></div></div></div></div></div></div>';
this._onResizeHandleMouseMoveDelegate=Function.createDelegate(this,this._onResizeHandleMouseMove);
this._onResizeHandleMouseUpDelegate=Function.createDelegate(this,this._onResizeHandleMouseUp);
this._onKeyboardEventDelegate=Function.createDelegate(this,this._onKeyboardEvent);
};
b.InlineTemplate._positionForm=function(r){var q=a("#"+r),l=q.find("div.rsTopWrap div.rsAptEditSizingWrapper");
if(l.length==0){return;
}if(l[0].detached){b.InlineTemplate._positionDetachedForm(q);
return;
}l.css("top","");
l.css("left","");
var e=q.find("div.rsTopWrap div.rsContent"),g=l.parents("table.rsContentTable, table.rsAllDayTable, table.rsAgendaTable"),m=l.offset(),i=l.parents().is("table.rsAllDayTable")&&!e.is(".rsTimelineView"),s=q.find("div.rsTopWrap div.rsContentScrollArea"),t=false,u=false;
if(!i){var j=m.top+l.height(),c=g,d;
if(g.is(".rsAgendaTable")){c=g.parent().find(".rsAgendaTable").last();
if(c.offset().top+c.height()<e.offset().top+e.height()){c=e;
}}d=c.offset().top+c.height();
if(j>d){l.css("top",(d-j)+"px");
t=true;
}var k=m.left+l.width(),h=g.offset().left,f=h+g.width(),p=k-f;
if(p>0){p*=-1;
var n=h-(m.left+p);
if(n>0){p+=n;
}l.css("left",p+"px");
u=true;
}}else{var o=l[0].parentNode;
l[0].originalParent=o;
l.width(a(o).width());
l.appendTo(e);
l[0].detached=true;
b.InlineTemplate._positionDetachedForm(q);
}var w=l.find("div.rsAptEditTextareaWrapper");
if(w){var v=w.find("textarea:first");
if(v.length>0){if($telerik.isIE&&w[0].style.height!="auto"){v.css("height",w.css("height"));
w.css("height","auto");
}if($telerik.isFirefox){v[0].scrollIntoView=function(){};
}}}if(t){s[0].scrollTop=s[0].scrollHeight;
}if(u){s[0].scrollLeft=s[0].scrollWidth;
}l.css("visibility","visible");
};
b.InlineTemplate._positionDetachedForm=function(n){var c=n.find("div.rsTopWrap div.rsContent");
var l=n.find("div.rsTopWrap div.rsAptEditSizingWrapper");
var d=c.offset();
var m=a(l[0].originalParent);
var k=m.offset();
var f=m.parents("table.rsContentTable, table.rsAllDayTable, table.rsAgendaTable");
if(!f.length){return;
}var j=c.prev();
if(j.is(".rsHeader, .rsToolbar")){d.top-=j.height();
}var h=(k.top-d.top);
var g=k.left-d.left;
var i=k.left+l.width();
var e=f.offset().left+f.width();
if(i>e){g+=e-i;
}l.css({top:h+"px",left:g+"px",width:m.width()+"px"});
};
b.InlineTemplate.prototype={instantiateIn:function(c){this._cleanup();
var e=document.createElement("div"),f=this._getTargetElement(c),h="",g="";
e.className="rsAptEditSizingWrapper";
e.style.zIndex=20000;
e.style.visibility="visible";
e.style.minWidth=this._minWidth+"px";
if(f.offsetHeight<this._minHeight){var d="height: "+this._minHeight+"px";
if($telerik.isIE){g=d;
}else{h=d;
}}e.innerHTML=String.format(this._formHTMLTemplate,h,this._textareaId,g);
f.appendChild(e);
this._element=e;
this._textArea=document.getElementById(this._textareaId);
b.InlineTemplate._positionForm(this._schedulerElement.id);
if(this._textArea){this._textArea.focus();
}this._attachHandlers(true);
},attachTo:function(c){this._element=c;
this._textArea=a(c).find("textarea:first")[0];
var d=a("div.rsTemplateWrapper",this._element);
if(d.length>0){this._template=d[0];
}this._attachHandlers(false);
},_getTargetElement:function(e){var d=a(e),c=d,g,f=c.parents("table.rsAgendaTable").length>0;
if(!c.is("td")){c=c.parents("td:first");
}g=c.find(".rsWrap:first");
if(d.is(".rsApt")){g=d.parent();
}if(g.length>0&&g.is(".rsWrap")){g.data("originalCssText",g[0].style.cssText);
}else{if(f){d=c;
}else{c.html("");
}g=a('<div class="rsWrap"></div>').appendTo(d);
if(f){this._setWrapDimentions(g,c);
}g.data("originalCssText","");
}var h=g.css("zIndex");
if(h=="auto"){h=0;
}g.css({zIndex:parseInt(h,10)+this._wrapZIndexStep});
return g[0];
},_setWrapDimentions:function(d,c){var e=c.offset();
var f=d.offset();
d.css({top:(e.top-f.top),left:(e.left-f.left)});
},_cleanup:function(c){if(!this._element){return;
}if(this._eventMap){this._eventMap.dispose();
}$telerik.removeHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
var d=this._element.originalParent||this._element.parentNode;
d.style.cssText=a(d).data("originalCssText");
if(!c){a(this._element).remove();
this._element=null;
}if(d.childNodes.length==0){var e=d.parentNode;
if(e){e.removeChild(d);
if(e.innerHTML==""&&this._addEmptySpace){e.innerHTML="&nbsp;";
}}}},_attachHandlers:function(c){if(!this._element){return;
}this._eventMap=new b.Scheduler.EventMap();
this._eventMap.initialize(this);
this._eventMap.addHandlerForClassName("mousedown","rsAptEditResizeHandle",this._onResizeHandleMouseDown);
this._eventMap.addHandlerForClassName("mouseover","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
this._eventMap.addHandlerForClassName("click","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
this._eventMap.addHandlerForClassName("dblclick","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
this._eventMap.addHandlerForClassName("contextmenu","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
if(c){this._eventMap.addHandlerForClassName("click","rsAptEditConfirm",this._saveClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditCancel",this._cancelClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditMore",this._moreClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditSizingWrapper",this._clicked);
this._eventMap.addHandlerForClassName("dblclick","rsAptEditSizingWrapper",this._clicked);
this._eventMap.addHandlerForClassName("keydown","rsAptEditSizingWrapper",this._keyDown);
}$telerik.addHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
},_onInlineTemplateMouseEvent:function(c){c.stopPropagation();
},_saveClicked:function(c){this.save();
$telerik.cancelRawEvent(c);
return false;
},_cancelClicked:function(c){this._cleanup();
$telerik.cancelRawEvent(c);
return false;
},_moreClicked:function(c){this.advanced();
$telerik.cancelRawEvent(c);
return false;
},_clicked:function(c){$telerik.cancelRawEvent(c);
return false;
},_keyDown:function(c){this._raiseEvent("keyDown",c);
return false;
},_onResizeHandleMouseDown:function(c){this._resizeOrigin={x:c.clientX,y:c.clientY,scrollTop:this._schedulerContentElement.scrollTop};
this._resizing=true;
var d=this._textArea?this._textArea.parentNode.offsetHeight:this._template.offsetHeight;
this._initialSize={width:this._element.offsetWidth,height:d};
$telerik.addHandler(this._schedulerContentElement,"mousemove",this._onResizeHandleMouseMoveDelegate);
$telerik.addHandler(document,"mouseup",this._onResizeHandleMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStart);
},_onResizeHandleMouseMove:function(c){if(!$telerik.isMouseOverElement(this._schedulerElement,c)){return;
}var f=c.clientX-this._resizeOrigin.x,d=c.clientY-this._resizeOrigin.y;
f+=this._initialSize.width+this._schedulerContentElement.scrollLeft;
d+=this._initialSize.height+(this._schedulerContentElement.scrollTop-this._resizeOrigin.scrollTop);
f=Math.max(f,this._minWidth);
d=Math.max(d,this._minHeight);
this._setSize(f,d);
b.RadScheduler._clearSelection();
},_onResizeHandleMouseUp:function(){this._cleanupResize();
},_onSelectStart:function(){return false;
},_cleanupResize:function(){if(!this._resizing){return;
}$telerik.removeHandler(this._schedulerContentElement,"mousemove",this._onResizeHandleMouseMoveDelegate);
$telerik.removeHandler(document,"mouseup",this._onResizeHandleMouseUpDelegate);
$telerik.removeHandler(document,"selectstart",this._onSelectStart);
b.RadScheduler._clearSelection();
this._resizing=false;
},_onKeyboardEvent:function(c){if(c.keyCode==27){this._cleanupResize();
}},_setSize:function(e,c){if(!this._element){return;
}this._element.style.width=e+"px";
var d=this._textArea;
if(d){if($telerik.isIE){d.style.height=(c-6)+"px";
}else{d.parentNode.style.height=c+"px";
}}else{this._template.style.height=c+"px";
}}};
b.InlineTemplate.registerClass("Telerik.Web.UI.InlineTemplate",b.InlineTemplateBase);
b.InlineTemplateLite=function(g,d,c,f,e){b.InlineTemplateLite.initializeBase(this,[g,d,c,f,e]);
this._addEmptySpace=false;
this._formHTMLTemplate='<div class="rsInlineForm rsAptEditFormWrapper"><div style="{0}" class="rsTextarea rsAptEditTextareaWrapper"><textarea id="{1}" style="{2}" rows="5" cols="20"></textarea></div><div class="rsButtons"><span class="rsButton rsAptEditConfirm">'+d.Save+'</span><span class="rsButton rsAptEditCancel">'+d.Cancel+"</span>";
if(c){this._formHTMLTemplate+='<span class="rsButton rsAptEditMore">'+d.ShowAdvancedForm+"</span>";
}this._formHTMLTemplate+='</div><span class="rsResize rsAptEditResizeHandle"><span class="rsIcon rsIconCornerBR"></span></span></div>';
};
b.InlineTemplateLite.registerClass("Telerik.Web.UI.InlineTemplateLite",b.InlineTemplate);
})($telerik.$,Telerik.Web.UI);
(function(a){var b=Telerik.Web.UI;
var c='<div class="rsModalWrapper"><div class="rsOverlay"></div><div class="rsModalDialog"><div class="rsModalBgTopLeft"></div><div class="rsModalBgTopRight"></div><div class="rsModalBgBottomLeft"></div><div class="rsModalBgBottomRight"></div><div class="rsModalOuter"><div class="rsModalOuterTitle"><a class="rsModalWindowClose" href="#" title=""></a><div class="rsModalInner"><h1 class="rsModalTitle"></h1><div class="rsModalContent"></div><div class="rsModalButtons"><a href="#" class="rsModalConfirm">OK</a><a href="#" class="rsModalClose">Cancel</a></div><div class="rsModalIcon"></div></div></div></div></div></div>';
var e='<div class="rsModalWrapper"><div class="rsOverlay"></div><div class="rsModalDialog rsPopup"><div class="rsModalTitle rsTitle"></div><div class="rsModalContent rsBody"></div><div class="rsModalButtons rsCommandFooter"><button type="button" class="rsButton rsModalClose">Cancel</button><button type="button" class="rsButton rsModalConfirm">OK</button></div></div></div>';
var d='<div class="rsModalWrapper"><div class="rsOverlay"></div><div class="rsModalDialog rsPopup"><div class="rsModalTitle rsTitle"></div><div class="rsModalContent rsBody"></div><div class="rsModalButtons rsCommandFooter"><button type="button" class="rsButton rsModalConfirm">OK</button><button type="button" class="rsButton rsModalClose">Cancel</button></div></div></div>';
function f(g){var h=c;
if(g===b.RenderMode.Mobile){h=e;
}else{if(g===b.RenderMode.Lite){h=d;
}}return h;
}a.bind=function(g,h){return function(i){if(i){i.preventDefault();
}return g[h].apply(g,arguments);
};
};
a.modal=function(h,g){if(!(this instanceof a.modal)){return new a.modal(h,g);
}var i=a(h);
var j=f(g);
this._isMobile=(g===b.RenderMode.Mobile);
this._dialog=a(j).appendTo(i).hide();
this.set_dimensions(i);
this._dialog.find(".rsOverlay, .rsModalDialog").css({opacity:0});
return this;
};
a.modal.prototype={initialize:function(){this._dialog.find(".rsModalClose").unbind("click").bind("click",a.bind(this,"hide")).end().find(".rsModalWindowClose").unbind("click").bind("click",a.bind(this,"hide")).end().find(".rsModalConfirm").unbind("click").bind("click",a.bind(this,"hide"));
return this;
},set_dimensions:function(h){var g=this._isMobile?280:380;
this._dialog.css({height:h.height(),width:h.width(),left:"1px",top:"1px",background:"none"}).find(".rsOverlay").css({height:h.height(),width:h.width()}).end().find(".rsModalDialog").css({width:g,left:(h.width()-g)/2});
},set_content:function(h){for(var g in h){switch(g){case"title":this._dialog.find(".rsModalTitle").text(h.title);
break;
case"content":this._dialog.find(".rsModalContent").html(h.content);
break;
case"ok":this._dialog.find(".rsModalConfirm").text(h.ok);
break;
case"cancel":this._dialog.find(".rsModalClose").text(h.cancel).end().find(".rsModalWindowClose").attr("title",h.cancel);
break;
}}return this;
},set_onActionConfirm:function(g){if(a.isFunction(g)){this._dialog.find(".rsModalConfirm").unbind().bind("click",g);
}return this;
},set_onActionCancel:function(g){if(a.isFunction(g)){this._dialog.find(".rsModalClose, .rsModalWindowClose").unbind().bind("click",g);
}return this;
},get_element:function(){return this._dialog;
},show:function(){if(this._isMobile){this._dialog.show().find(".rsOverlay").css("opacity","0.4").end().find(".rsModalDialog").css("opacity","1");
}else{var h;
if($telerik.isIE7){h=this._dialog.children(".rsModalDialog").children("div[class^=rsModalBg]");
h.addClass("rsAnimating");
}this._dialog.show().find(".rsOverlay").stop().animate({opacity:0.4},"slow").end().find(".rsModalDialog").stop().animate({opacity:1},{duration:"slow",complete:function(){if($telerik.isIE){this.style.cssText=this.style.cssText.replace(/filter.*?\;/ig,"");
}if($telerik.isIE7&&h.hasClass("rsAnimating")){h.removeClass("rsAnimating");
}}}).end();
}var i=this._dialog.find(".rsModalDialog"),g=a(window),j=this._dialog.parent();
var k=(j.height()-i.height())/2;
if(j.height()>g.height()){k=((g.scrollTop()-j.position().top)+(g.height()-i.height())/2);
}if(k<0){k=0;
}if(k>j.height()){k=j.height()-(i.height());
}i.css({top:k});
return this;
},hide:function(){if(this._isMobile){this._dialog.find(".rsOverlay").css("opacity","0").end().find(".rsModalDialog").css("opacity","0");
}else{if($telerik.isIE7){this._dialog.children(".rsModalDialog").children("div[class^=rsModalBg]").addClass("rsAnimating");
}this._dialog.find(".rsOverlay").stop().animate({opacity:0},"fast").end().find(".rsModalDialog").stop().animate({opacity:0},"fast",a.bind(this._dialog,"hide")).end();
}this.dispose();
},dispose:function(){this._dialog.find(".rsModalConfirm").unbind().end().find(".rsModalClose").unbind();
a(this._dialog).remove();
this._dialog=null;
}};
})($telerik.$);
(function(){var a=$telerik.$;
var b=Telerik.Web.UI;
a.popupDialog=function(e,c,d){if(!(this instanceof a.popupDialog)){return new a.popupDialog(e,c,d);
}this._targetElement=e;
this._handleElement=c;
this.options=a.extend({},a.popupDialog.defaults,d);
this._eventsNamespace="."+e.id;
if(b.Calendar){this._originalCalendarZIndex=b.Calendar.Popup.zIndex;
}return this;
};
a.popupDialog.defaults={zIndex:4000,draggable:true,modal:true,minTop:10,minBottom:10,minLeft:10,minRight:10,maxHeight:550,width:700};
a.popupDialog.prototype={show:function(){var d=this._targetElement;
this._modalExtender=new Telerik.Web.UI.ModalExtender(d);
var e="fixed";
d.style.position=e;
if(this.options.modal){a(this._modalExtender._getModalOverlay()).css({position:e,zIndex:this.options.zIndex});
this._modalExtender.show();
}a(d).css({display:"block",zIndex:this.options.zIndex+1});
if(b.Calendar){b.Calendar.Popup.zIndex=this.options.zIndex+2;
}var c=this;
a(window).bind("resize"+this._eventsNamespace,function(){c._resizeForm.apply(c);
c._positionForm.apply(c);
});
a(window).trigger("resize"+this._eventsNamespace);
if(this.options.draggable&&this._handleElement){this._dragCue=this._createDragCue();
this._makeDraggable();
}},close:function(){if(this._modalExtender){this._modalExtender.dispose();
}a([window,document,this._handleElement||window]).unbind(this._eventsNamespace);
if(b.Calendar){b.Calendar.Popup.zIndex=this._originalCalendarZIndex;
}},_positionForm:function(){var h=a(window),g=0,f=0,e=g,d=f,c=a(this._targetElement);
f+=(h.width()-c.outerWidth())/2;
g+=(h.height()-parseInt(this.options.maxHeight,10))/2;
f=Math.max(f,d);
g=Math.max(g,e);
c.css({top:g,left:f});
},_resizeForm:function(){var c=a(this._targetElement),d=c.find(".rsAdvOptionsScroll"),g=this.options,e=a(window).height()-(c.outerHeight(true)-d.outerHeight(true)),f=Math.min(e,g.maxHeight);
c.css({width:g.width});
d.css({"max-height":f});
},_createDragCue:function(){var d=a(this._targetElement);
var c=a('<div class="rsAdvDragCue" style="display:none; top:0; left:0;"></div>').css({position:d.css("position"),opacity:"0.5"});
d.parent().append(c);
return c;
},_finishDrag:function(){var e=a(this._targetElement);
var c=this._dragCue;
var d={top:parseInt(c.css("top"),10)+(parseInt(c.css("border-top-width"),10)||parseInt(c.css("border-width"),10)),left:parseInt(c.css("left"),10)+(parseInt(c.css("border-left-width"),10)||parseInt(c.css("border-width"),10))};
e.data("mouseMove",false).css({top:d.top,left:d.left,"-webkit-user-select":"","-moz-user-select":""});
c.hide();
e.trigger("formMoved");
},_onMouseMove:function(h){var g=a(this._targetElement);
var e=this._dragCue;
if(!g.data("mouseMove")){return;
}b.RadScheduler._clearSelection();
var f=e.offset();
if(h.clientX>0){var o=e.data("scrollLeft")-a(window).scrollLeft();
var m=f.left+e.data("relOriginX");
var c=h.clientX-m-o;
var k=parseInt(e.css("left"),10)+c;
var i=a(window).width()-e.outerWidth(true)-this.options.minRight;
k=Math.max(Math.min(i,k),this.options.minLeft);
e.css("left",k);
}if(h.clientY>0){var p=e.data("scrollTop")-a(window).scrollTop();
var n=f.top+e.data("relOriginY");
var d=h.clientY-n-p;
var l=parseInt(e.css("top"),10)+d;
var j=a(window).height()-e.outerHeight(true)-this.options.minBottom;
l=Math.max(Math.min(j,l),this.options.minTop);
e.css("top",l);
}},_makeDraggable:function(){var e=a(this._targetElement);
var f=a(this._handleElement);
var d=this._dragCue;
f.bind("mousedown"+this._eventsNamespace,function(k){if(k.which!=1){return;
}if(a(k.target).is("a")){return;
}e.trigger("formMoving");
e.data("mouseMove",true).css({"-webkit-user-select":"none","-moz-user-select":"none"});
var h=parseInt(e.css("left"),10)-parseInt(d.css("borderLeftWidth"),10);
var j=parseInt(e.css("top"),10)-parseInt(d.css("borderTopWidth"),10);
var l={horizontal:e.outerWidth(true)-e.outerWidth(),vertical:e.outerHeight(true)-e.outerHeight()};
d.css({width:e.outerWidth()-l.horizontal,height:e.outerHeight()-l.vertical,zIndex:parseInt(e.css("zIndex"),10)+1,top:j,left:h}).show();
var i=d.offset();
d.data("relOriginY",Math.round(k.clientY-i.top)).data("relOriginX",Math.round(k.clientX-i.left)).data("scrollTop",a(window).scrollTop()).data("scrollLeft",a(window).scrollLeft());
});
var c=this;
a(document).bind("mouseup"+this._eventsNamespace,function(){if(!e.data("mouseMove")){return;
}c._finishDrag.apply(c);
});
var g=function(){c._onMouseMove.apply(c,arguments);
};
a(document).bind("mouseout"+this._eventsNamespace,g);
a(document).bind("mousemove"+this._eventsNamespace,g);
}};
})();
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler");
$telerik.findScheduler=$find;
$telerik.toScheduler=function(a){return a;
};
(function(i){var a=$telerik.$,c=Telerik.Web.UI,d=c.Scheduler,b=d.DateTime,h=60000,g=h*60,f=g*24,e=160;
a.registerEnum(c,"SchedulerViewType",{DayView:0,WeekView:1,MonthView:2,ResourceView:3,TimelineView:4,MultiDayView:5,AgendaView:6,YearView:7});
a.registerEnum(c,"SchedulerNavigationCommand",{SwitchToDayView:0,SwitchToWeekView:1,SwitchToMonthView:2,SwitchToTimelineView:3,SwitchToMultiDayView:4,SwitchToAgendaView:5,SwitchToYearView:6,NavigateToNextPeriod:7,NavigateToPreviousPeriod:8,SwitchToSelectedDay:9,SwitchToSelectedMonth:10,SwitchFullTime:11,DisplayNextAppointmentSegment:12,DisplayPreviousAppointmentSegment:13,NavigateToSelectedDate:14});
a.registerEnum(c,"SchedulerFormMode",{Hidden:0,Insert:1,Edit:2,AdvancedInsert:3,AdvancedEdit:4});
a.registerEnum(c,"AppointmentStyleMode",{Auto:0,Simple:1,Default:2});
a.registerEnum(c,"ResourceMarkerType",{None:0,Block:1,Bar:2});
a.registerEnum(c,"AppointmentUpdateMode",{Batch:0,Single:1});
c.RadScheduler=function(j){c.RadScheduler.initializeBase(this,[j]);
this._styles={dragTarget:"rsDragTarget",inlineForm:{sizingWrapper:"rsAptEditSizingWrapper"}};
this._postBackReference=null;
this._uniqueId=null;
this._minutesPerRow=30;
this._numberOfHoveredRows=2;
this._selectedView=0;
this._readOnly=false;
this._overflowBehavior=1;
this._shouldPostbackOnClick=true;
this._displayDeleteConfirmation=true;
this._displayRecurrenceActionDialogOnMove=false;
this._firstDayStart=null;
this._appointments=null;
this._currentAppointment=null;
this._currentOperationAppointment=null;
this._resources=new c.SchedulerResourceCollection();
this._resourceTypes=new c.ResourceTypeCollection();
this._scrollTop=0;
this._scrollLeft=0;
this._useHorizontalScrolling=false;
this._localization=null;
this._advancedTemplate=null;
this._advancedInsertTemplate=null;
this._advancedEditTemplate=null;
this._attributes=new c.SchedulerAttributeCollection();
this._datePickerCalendarExpanded=false;
this._datePickerOriginalValue="";
this._customAttributeNames=[];
this._timeLabelRowSpan=2;
this._appointmentStyleMode=c.AppointmentStyleMode.Auto;
this._enableDescriptionField=false;
this._navigating=false;
this._allowEdit=true;
this._allowDelete=true;
this._allowInsert=true;
this._defaultAdvancedFormRendered=false;
this._useDefaultAdvancedInsert=true;
this._useDefaultAdvancedEdit=true;
this._startEditingInAdvancedForm=true;
this._startInsertingInAdvancedForm=false;
this._dragging=false;
this._draggingAppointment=null;
this._onKeyboardEventDelegate=null;
this._onKeyboardEventNavigationDelegate=null;
this._activeModel=null;
this._modelTables=null;
this._resizingState={};
this._resizeHelper=null;
this._eventMap=new c.Scheduler.EventMap();
this._rowHeight="25px";
this._minimumViewHeight=e;
this._minimumInlineFormHeight=50;
this._minimumInlineFormWidth=250;
this._shouldUseClientInlineInsertForm=true;
this._shouldUseClientInlineEditForm=true;
this._validationGroup=null;
this._remindersMaxAge=60000*60*24*14;
this._webServiceSettings=new c.SchedulerWebServiceSettings({});
this._timeZoneOffset=0;
this._timeZoneId="";
this._adjustmentRules=[];
this._formContainerMode=c.SchedulerFormMode.Hidden;
this._editingRecurringSeries=false;
this._showFullTime=false;
this._showAllDayRow=true;
this._firstDayOfWeek=c.DayOfWeek.Sunday;
this._lastDayOfWeek=c.DayOfWeek.Saturday;
this._advancedFormSettings={enabled:true,modal:false,zIndex:2500};
this._weekViewSettings=[];
this._dayViewSettings=[];
this._multiDayViewSettings=[];
this._monthViewSettings=[];
this._timelineViewSettings=[];
this._agendaViewSettings=[];
this._yearViewSettings=[];
this._modelData=null;
this._schedulerRendered=null;
this._contentTouchScroll=null;
this._repainting=false;
this._isDirty=false;
this._shouldPostbackOnReminderSnooze=false;
this._rowSelectionState={};
this._rowSelectionState.isRowSelection=false;
this._rowSelectionState.selectedSlots=[];
this._rowSelectionState.rowSelectionStartSlot=null;
this._rowSelectionState.rowSelectionEndSlot=null;
this._appointmentsToolTipDelay=500;
this._navigator=null;
this._lastSelectedApt=null;
this._contextMenuInterval={timeslot:null,appointment:null,reset:function(){clearTimeout(this.timeslot);
this.timeslot=null,clearTimeout(this.appointment);
this.appointment=null;
}};
};
c.RadScheduler._plugins=[];
c.RadScheduler._incrementTime=function(j,k,l){if(isNaN(l)){l=0;
}var n=j.getTimezoneOffset();
j.setTime(j.getTime()+(k*3600000)+(l*60000));
var m=j.getTimezoneOffset();
j.setTime(j.getTime()+((m-n)*60000));
};
c.RadScheduler._preInitialize=function(m,o,n,j,p,k){var l=a("#"+m);
if(l[0]._preInitialized&&!$telerik.isIE){return;
}if(k==c.RenderMode.Mobile){e=240;
}c.RadScheduler._adjustContentDimensions(l,o,n,j,p,k);
l[0].style.cssText=l[0].style.cssText;
c.RadScheduler._recalcAppointmentWidth();
l[0]._preInitialized=true;
};
c.RadScheduler._recalcAppointmentWidth=function(n){var m=0;
var k=a(n).find(".rsTopWrap table.rsAllDayTable .rsAllDayRow").first();
var j=k.find("td");
var l=k.width()/j.length;
var o={};
j.each(function(){var r=this.offsetWidth;
var p=this.cellIndex;
var q;
if(p===0||a(this).hasClass("rsFirstCell")){m=r;
o[p]=0;
}else{q=r-m;
o[p]=o[p-1]+q;
}});
a(n).find(".rsTopWrap table.rsAllDayTable div.rsApt").each(function(){var p=this;
var B=a(p).parents("table.rsAllDayTable").filter(":first");
if(B.length==0){return;
}var C=B[0].style.width,t=C.endsWith("px"),D=p.style.width,s=D.endsWith("px");
if(t&&s){return;
}if(!t){if(s){p.width=p.originalWidth;
D=p.originalWidth;
}else{p.originalWidth=D;
}}var z=p.parentNode.parentNode;
var v=a(p).parents(".rsTimelineView").length!=0;
var y=0;
var x=0;
if(v){y=p.style.left==""?0:parseFloat(p.style.left,10);
x=Math.floor(y/100);
for(var u=0;
u<x;
u++){z=a(z).next().get(0);
}}if(!z||!z.tagName||z.tagName.toUpperCase()!="TD"){return;
}var A=z.parentNode;
var r=parseFloat(D,10)/100;
var q=Math.floor(r);
var w=z.cellIndex+q-1;
if(w>A.cells.length-1){return;
}if(v&&y>0){p.style.left=y+"%";
if($telerik.isIE7){x=0;
}x+=o[z.cellIndex];
p.style.marginLeft=x+"px";
}p.style.width=(l*r)+"px";
});
};
c.RadScheduler._scrollVerticalArea=function(j,k){if(j.length){j.parent().scrollTop(k);
}};
c.RadScheduler._adjustContentDimensions=function(q,w,v,o,x,p){var r=q.find("div.rsTopWrap");
var j={scheduler:q,schedulerTopWrap:r,contentWrapper:r.find("td.rsContentWrapper"),verticalHeaderWrapper:r.find("td.rsVerticalHeaderWrapper")};
var t=Telerik.Web.Browser.scrollBarWidth;
if(r.find(".rsYearView").length&&r.find(".rsYearView").hasClass("rsVertical")){x=true;
}if(x){r.find("table.rsVerticalHeaderTable").css("margin-bottom",t+"px");
}c.RadScheduler._adjustContentWidth(j);
var s=r.find("div.rsContentScrollArea");
if(o!=2||s.parents(".rsTimelineView").length==0){c.RadScheduler._adjustContentHeight(j,x,o);
}if(s.length){var y=r.find(".rsVerticalHeaderTable");
c.RadScheduler._scrollVerticalArea(y,w);
s.scrollTop(w).scrollLeft(v);
var k=r.find("td.rsHorizontalHeaderWrapper").children().children();
var l=false;
var n;
if(o!=2){l=(q.attr("dir")=="rtl");
var u=s[0].scrollHeight,m=l?"margin-left":"margin-right";
if(x){u+=t;
}n=(o==3&&s[0].offsetHeight==u)?0:t;
k.css(m,n);
}k.scrollLeft(v);
}c.InlineTemplate._positionForm(q[0].id);
c.RadScheduler._adjustTimelineViewHeight(q,p);
c.RadScheduler._adjustAgendaViewHeight(j);
};
c.RadScheduler._adjustContentHeight=function(n,s,r){a(n.contentWrapper).add(n.contentWrapper.children(":first")).height("");
var j=n.schedulerTopWrap.find("div.rsHeader, div.rsToolbar, div.rsFooter, td.rsHorizontalHeaderWrapper").filter(":visible"),m=n.scheduler.height(),q=0,p=s?Telerik.Web.Browser.scrollBarWidth:0,l=n.scheduler.find(".rsContent"),k=(l.outerHeight()-l.height()),o;
a.each(j,function(){m-=a(this).outerHeight();
});
a(n.contentWrapper).find("table.rsContentTable, table.rsAllDayTable, div.rsYearMonthsWrap, table.rsAgendaTable, div.rsSubHeader:visible").each(function(){if(a(this).parents().is(".rsHorizontal")){q=a(this).outerHeight();
}else{q+=a(this).outerHeight();
}});
q+=p;
m-=(a(n.schedulerTopWrap).outerHeight()-a(n.schedulerTopWrap).height());
if(q>=m&&r!=2){m-=k;
}else{m=q;
}a(n.contentWrapper).add(n.contentWrapper.children(":first")).height(m);
o=m-p;
a(n.verticalHeaderWrapper).add(n.verticalHeaderWrapper.children(":first")).height(o);
};
c.RadScheduler._adjustContentWidth=function(k){var m=k.contentWrapper.add(k.schedulerTopWrap.find("td.rsHorizontalHeaderWrapper").children().get()).add(k.contentWrapper.children()[0]);
var n=k.schedulerTopWrap.outerWidth()-k.schedulerTopWrap.width();
if($telerik.isIE){if(k.scheduler.width()-n!=0){k.scheduler.css("overflow-x","hidden");
k.schedulerTopWrap.width(k.scheduler.width()-n);
k.scheduler.css("overflow-x","");
}}else{k.schedulerTopWrap.width(k.scheduler.width()-n);
}m.width("100%");
var j=k.scheduler.width()-k.verticalHeaderWrapper.width();
m.width(j-2);
var l=k.contentWrapper.find(".rsArrowContainer");
if(l.length>0){l.width(k.contentWrapper.find(".rsContentTable").width());
}};
c.RadScheduler._adjustTimelineViewHeight=function(o,n){var l=a(o),k=l.find(".rsTimelineView .rsAllDayRow"),j=l.find(".rsTimelineView .rsVerticalHeaderWrapper tr");
if(k.length>0){var p=0;
var m;
k.each(function(){p+=a(this).height();
});
if(n===c.RenderMode.Lite){m=l.height()-l.find(".rsTopWrap").outerHeight();
}else{m=e-p;
}if(m>0){k.each(function(s){var q=a(this),r=a(j[s]),t=q.height()+m/k.length;
q.outerHeight(t);
r.outerHeight(t);
});
}}};
c.RadScheduler._adjustAgendaViewHeight=function(l){var k=l.contentWrapper,j=k.find("table.rsAgendaTable"),m=0;
j.add(k.find("div.rsSubHeader:visible")).each(function(){m+=a(this).outerHeight();
});
if(l.contentWrapper.parents(".rsAgendaView").length>0&&m<e){k.add(k.children(":first")).height(e);
}};
c.RadScheduler._clearSelection=function(){if(document.selection&&document.selection.empty){try{document.selection.empty();
}catch(j){}}else{if(window.getSelection&&window.getSelection().removeAllRanges){window.getSelection().removeAllRanges();
}}};
c.RadScheduler.prototype={initialize:function(){var l=this.get_element(),j=a(l);
c.RadScheduler.callBaseMethod(this,"initialize");
this._activeModel=this._getModelFactory(this._selectedView).createModel();
this._activeModel.initialize();
this._eventMap.initialize(this);
this.updateClientState();
this._scrollTopOnInitialize=this.get_scrollTop();
this._updateScrollAreas();
this._minimumViewHeight=e;
var o=!this._webServiceSettings.get_isEmpty();
if(!o&&j.find(".rsAdvancedEdit").length>0){var m=j.find(".rsAdvancedEdit")[0];
if(c.Scheduling!=i&&c.Scheduling.AdvancedTemplate!=i&&this._defaultAdvancedFormRendered){var n=this._isSchedulerContentRendered();
this._advancedTemplate=this._createAdvancedTemplate(l,m,n);
}this._makeModal(m);
this._initializeAdvancedTemplateCallback=Function.createDelegate(this,this._initializeAdvancedTemplate);
Sys.Application.add_load(this._initializeAdvancedTemplateCallback);
}if(this._isSchedulerContentRendered()){if(!$telerik.isIE){this._eventMap.addHandlerForClassName("mousemove","rsContent",this._onContentScroll);
}var k=$telerik.isTouchDevice?"touchend":"click";
this._eventMap.addHandlerForClassName("dblclick","rsAptEdit",this._stopEventPropagation);
this._eventMap.addHandlerForClassName("dblclick","rsApt",this._onAppointmentDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsAgendaRow",this._onAppointmentDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsContentTable",this._onCellDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsAllDayTable",this._onCellDoubleClick);
this._eventMap.addHandlerForClassName("click","rsAptResize",this._onResizeGripMouseClick);
this._eventMap.addHandlerForClassName("click","rsApt",this._onAppointmentClick);
this._eventMap.addHandlerForClassName("click","rsAgendaRow",this._onAppointmentClick);
this._eventMap.addHandlerForClassName("click","rsAptDelete",this._onAppointmentDeleteClick);
this._eventMap.addHandlerForClassName("click","rsArrowTop",this._onPreviousDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowBottom",this._onNextDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowLeft",this._onPreviousDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowRight",this._onNextDayClick);
this._eventMap.addHandlerForClassName("click","rsNextDay",this._onNextSchedulerDayClick);
this._eventMap.addHandlerForClassName("click","rsPrevDay",this._onPreviousSchedulerDayClick);
this._eventMap.addHandlerForClassName("click","rsToday",this._onTodayClick);
this._eventMap.addHandlerForClassName("click","rsFullTime",this._onFullTimeLinkClick);
this._eventMap.addHandlerForClassName("click","rsOvertimeArrow",this._onFullTimeLinkClick);
this._eventMap.addHandlerForClassName("click","rsAptEdit",this._onEditFormClick);
this._eventMap.addHandlerForClassName("click","rsShowMore",this._onShowMoreClick);
this._eventMap.addHandlerForClassName("click","rsDateHeader",this._onDateHeaderClick);
this._eventMap.addHandlerForClassName("click","rsMonthHeader",this._onMonthHeaderClick);
this._eventMap.addHandlerForClassName(k,"rsAddAppointment",this._onAddAppointmentClick);
this._eventMap.addHandlerForClassName(k,"rsViewToggle",this._onViewToggleClick);
this._eventMap.addHandlerForClassName("click","rsHeaderDay",this._onDayViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderWeek",this._onWeekViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderMonth",this._onMonthViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderTimeline",this._onTimelineViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderMultiDay",this._onMultiDayViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderAgenda",this._onAgendaViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderYear",this._onYearViewTabClick);
this._eventMap.addHandlerForClassName("click","rsContentTable",this._onCellClick);
this._eventMap.addHandlerForClassName("click","rsAllDayTable",this._onCellClick);
this._eventMap.addHandlerForClassName("click","rsDatePickerActivator",this._onDatePickerToggle);
if(!$telerik.isTouchDevice){this._eventMap.addHandlerForClassName("mousedown","rsContentTable",this._onCellMouseDown);
this._eventMap.addHandlerForClassName("mousedown","rsAllDayTable",this._onCellMouseDown);
this._eventMap.addHandlerForClassName("mouseover","rsAllDayTable",this._onRowMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsContentTable",this._onRowMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsAllDayCell",this._onAllDayCellMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsApt",this._onAppointmentMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsAgendaRow",this._onAppointmentMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsAptResize",this._onResizeGripMouseOver);
this._eventMap.addHandlerForClassName("mouseout","rsContent",this._onRowMouseOut);
this._eventMap.addHandlerForClassName("mouseout","rsAllDayCell",this._onRowMouseOut);
this._eventMap.addHandlerForClassName("mouseout","rsApt",this._onAppointmentMouseOut);
this._eventMap.addHandlerForClassName("mouseout","rsAgendaRow",this._onAppointmentMouseOut);
}if(this._renderMode==c.RenderMode.Lite){a(this._element).find(".rsTopWrap .rsButton").on("mouseenter",function(){a(this).addClass("rsHovered");
}).on("mouseleave",function(){a(this).removeClass("rsHovered");
});
}this._initializeTouchEvents();
this._initializeContextMenuEvents();
this._updateContentScrollArea(j);
this._onDocumentMouseOutDelegate=Function.createDelegate(this,this._onDocumentMouseOut);
$telerik.addHandler(document.documentElement,"mouseout",this._onDocumentMouseOutDelegate);
this._onDocumentClickDelegate=Function.createDelegate(this,this._onDocumentClick);
$telerik.addHandler(document.documentElement,"click",this._onDocumentClickDelegate);
this._onContentScroll();
this._initializeIndicators();
this._applicationLoadedCallback=Function.createDelegate(this,this._applicationLoaded);
Sys.Application.add_load(this._applicationLoadedCallback);
}this._onKeyboardEventDelegate=Function.createDelegate(this,this._onKeyboardEvent);
$telerik.addHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
this._onRowSelectionMouseMoveDelegate=Function.createDelegate(this,this._onRowSelectionMouseMove);
this._onRowSelectionMouseUpDelegate=Function.createDelegate(this,this._onRowSelectionMouseUp);
this.add_navigationCommand(this._onNavigationCommand);
this._onResizeGripMouseMoveDelegate=Function.createDelegate(this,this._onResizeGripMouseMove);
this._onResizeGripMouseUpDelegate=Function.createDelegate(this,this._onResizeGripMouseUp);
this._onSelectStartDelegate=Function.createDelegate(this,this._onSelectStart);
this._onDocMouseUpDelegate=Function.createDelegate(this,this._onDocMouseUp);
this._onDocumentMouseMoveDelegate=Function.createDelegate(this,this._onDocumentMouseMove);
this._getInlineTemplate();
this._initializeRenderingManager();
this._initializeKeyboardNavigation();
this._initializePlugins();
this._initializeAppointmentsTooltip();
this._resolveAddButtonVisibility();
this._resizeHelper=new c.Scheduler.ResizeHelper(this);
this._resizeHelper.initialize();
this._onWindowResizeDelegate=Function.createDelegate(this,this.repaint);
$telerik.addHandler(window,"resize",this._onWindowResizeDelegate);
},_initializeTouchEvents:function(){var j=$telerik.isTouchDevice?"touchstart":"mousedown",k=$telerik.isTouchDevice?"touchend":"mouseup";
this._eventMap.addHandlerForClassName(j,"rsAptDelete",this._onAppointmentDeleteMouseDown);
this._eventMap.addHandlerForClassName(j,"rsApt",this._onAppointmentMouseDown);
this._eventMap.addHandlerForClassName(j,"rsAgendaRow",this._onAppointmentMouseDown);
this._eventMap.addHandlerForClassName(j,"rsAptResize",this._onResizeGripMouseDown);
this._eventMap.addHandlerForClassName(k,"rsContent",this._endDrag);
},_initializeContextMenuEvents:function(){var j=this,k=function(l){j._addLongTouchHandler("timeslot",j._onTimeSlotTouchHold,l);
j._preventCtxMenuClosing=false;
j._timeSlotTapped=true;
a(".rsContent",this._element).on("touchmove",function(m){j._contextMenuInterval.reset();
j._timeSlotTapped=false;
});
};
if($telerik.isTouchDevice){this._eventMap.addHandlerForClassName("touchstart","rsContentTable",k);
this._eventMap.addHandlerForClassName("touchstart","rsAllDayTable",k);
this._eventMap.addHandlerForClassName("touchend","rsContentTable",this._onTimeSlotTouchEnd);
this._eventMap.addHandlerForClassName("touchend","rsAllDayTable",this._onTimeSlotTouchEnd);
}else{this._eventMap.addHandlerForClassName("contextmenu","rsApt",this._onAppointmentContextMenu);
this._eventMap.addHandlerForClassName("contextmenu","rsAgendaRow",this._onAppointmentContextMenu);
this._eventMap.addHandlerForClassName("contextmenu","rsContentTable",this._onCellContextMenu);
this._eventMap.addHandlerForClassName("contextmenu","rsAllDayTable",this._onCellContextMenu);
}},_addLongTouchHandler:function(m,j,l){var k=this._contextMenuInterval,n=this;
clearTimeout(k[m]);
k[m]=setTimeout(function(){$telerik.cancelRawEvent(l);
j.apply(n,[l]);
},500);
},_onTimeSlotTouchHold:function(j){this._preventCtxMenuClosing=true;
this._onCellContextMenu(j);
},_addPreventClosing:function(j){var m=this;
for(var k=0,l=j.length;
k<l;
k++){j[k].add_hiding(function(o,n){m._onContextMenuHiding(o,n);
});
}},_onContextMenuHiding:function(k,j){var l=j.get_domEvent()&&j.get_domEvent().type=="click";
if(l&&this._preventCtxMenuClosing){this._preventCtxMenuClosing=false;
j.set_cancel(true);
}},_onTimeSlotTouchEnd:function(j){a(".rsContent",this._element).off("touchmove");
this._onDocMouseUp(j);
if(this._timeSlotTapped){this._onCellMouseDown(j);
if(this._renderMode==c.RenderMode.Mobile&&this.get_selectedView()==c.SchedulerViewType.MonthView){var k=this._activeModel.getTimeSlotFromDomElement(j.target);
return this._switchToSelectedDay(k.get_startTime());
}}this._timeSlotTapped=false;
},_initializeKeyboardNavigation:function(){var j=a(this.get_element());
if(j.attr("tabIndex")>=0||j.attr("accessKey")!=i){this._navigator=new c.Scheduler.KeyboardNavigation(this);
this._onKeyboardEventNavigationDelegate=Function.createDelegate(this,this._onKeyboardEventNavigation);
$telerik.addHandler(this.get_element(),"keydown",this._onKeyboardEventNavigationDelegate);
}},_initializeIndicators:function(){if(!this._modelData){return;
}if(this.get_activeModel()._settings&&this.get_activeModel()._settings.hiddenAptsIndicator===false){return;
}this._modelData=eval("("+this._modelData+")");
this._setIndicatorState(this._modelData.aptIndicators);
},_initializePlugins:function(){var j=this;
a.each(c.RadScheduler._plugins,function(){this.onInitialize.call(j);
});
},_isSchedulerContentRendered:function(){if(this._schedulerRendered===null){this._schedulerRendered=a(this.get_element()).find(".rsTopWrap").length>0;
}return this._schedulerRendered;
},_updateContentScrollArea:function(j){this._clearScrollAreaHandlers();
this._contentScrollArea=j.find("div.rsContentScrollArea")[0];
if(this._contentScrollArea){this._onContentScrollDelegate=Function.createDelegate(this,this._onContentScroll);
$telerik.addHandler(this._contentScrollArea,"scroll",this._onContentScrollDelegate);
if(c.TouchScrollExtender._getNeedsScrollExtender()&&!this._contentTouchScroll){this._contentTouchScroll=new c.TouchScrollExtender(this._contentScrollArea);
this._contentTouchScroll.initialize();
}}},_updateScrollAreas:function(){var j=a(this.get_element());
this._updateContentScrollArea(j);
this._horizontalScrollAreas=j.find(".rsTopWrap td.rsHorizontalHeaderWrapper").children().children();
this._verticalScrollAreas=j.find(".rsTopWrap .rsVerticalHeaderTable");
},_applicationLoaded:function(){Sys.Application.remove_load(this._applicationLoadedCallback);
if(!this.get_element()){return;
}this.set_scrollTop(this._scrollTopOnInitialize);
this.repaint();
this.initializeDatePicker();
},initializeDatePicker:function(){var m=this,k=this.get_element().id+"_SelectedDateCalendar",j;
j=$find(k);
if(j){this._initializeRadDatePicker(j);
return;
}j=$get(k);
if(j){var l=!$telerik.isTouchDevice||$telerik.isAndroid?"change":"blur";
a(j).on("focus",function(n){m._nativeCalendarFocus(n);
}).on(l,function(n){m._nativeCalendarBlur(n);
});
}},_initializeRadDatePicker:function(j){j.add_dateSelecting(Function.createDelegate(this,this._radCalendarDateChanging));
j.add_calendarViewChanged(Function.createDelegate(this,this._radCalendarViewChanged));
a(this.get_element()).find("div.rsDatePickerAnimationWrapper").hide();
if(this._renderingManager){j.set_autoPostBack(false);
j.add_dateSelected(Function.createDelegate(this,this._radCalendarDateChanged));
}else{j.add_calendarViewChanging(function(k){k.set_autoPostBack(false);
});
j.add_calendarViewChanged(function(k){k.set_autoPostBack(true);
});
}},_radCalendarDateChanging:function(n,l){var m=l.get_renderDay().get_date(),k=new Date(m[0],m[1]-1,m[2]),j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.NavigateToSelectedDate,k);
if(l.get_isSelecting()){this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){l.set_cancel(true);
this._onDatePickerToggle();
}}},_radCalendarDateChanged:function(m){var l=m.get_selectedDates();
if(l.length>0){var k=l[0],j=new Date(k[0],k[1]-1,k[2]);
if(this._preventCalendarNavigate){return;
}this.set_selectedDate(j);
this._onDatePickerToggle();
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.NavigateToSelectedDate));
}},_radCalendarViewChanged:function(n){var j=a(this.get_element()).find("div.rsDatePickerAnimationWrapper");
var k=j.find("div").filter(":first");
var m=this.get_renderMode()===c.RenderMode.Lite;
var l=(m)?k.height():k.find("table").first().height();
j.css({height:l+"px"});
},_nativeCalendarFocus:function(j){this._datePickerOriginalValue=j.target.value;
},_nativeCalendarBlur:function(l){var k=new Date(l.target.value),j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.NavigateToSelectedDate,k);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){l.target.value=this._datePickerOriginalValue;
return;
}if(this._renderingManager){this.set_selectedDate(k);
j=new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.NavigateToSelectedDate);
this.raiseEvent("navigationComplete",j);
}else{var m={Command:"NavigateToSelectedDate",StartDate:k.format("yyyyMMddHHmm")};
this.postback(m);
}},_initializeAdvancedTemplate:function(){if(this._advancedTemplate){this._advancedTemplate.initialize();
}this._fireFormCreated(this.get_currentAppointment(),this._formContainerMode,this._editingRecurringSeries);
try{if(this._defaultAdvancedFormRendered){this._focusAdvancedFormSubjectTextBox();
}}catch(j){}Sys.Application.remove_load(this._initializeAdvancedTemplateCallback);
},_initializeRenderingManager:function(){if(this._createRenderingManager(this._webServiceSettings)){this._renderingManager.add_appointmentsReceived(Function.createDelegate(this,this._onWebServiceAppointmentsReceived));
this._renderingManager.add_appointmentsPopulated(Function.createDelegate(this,this._onWebServiceAppointmentsPopulated));
this._renderingManager.initialize();
}},_createRenderingManager:function(j){if(!j.get_isEmpty()&&j.get_isWcf()){this._renderingManager=new c.Scheduler.Rendering.WebServiceRenderingManager(this,this._webServiceSettings);
}else{if(this._webServiceSettings.get_isOData()){this._renderingManager=new c.Scheduler.Rendering.ODataRenderingManager(this,this._webServiceSettings);
}else{return false;
}}return true;
},_onWebServiceAppointmentsPopulated:function(){this._raiseAppointmentsPopulated();
if(!this._activeModel._getRenderer){return;
}var j=this._activeModel._getRenderer();
if(j&&j.refreshIndicatorState){j.refreshIndicatorState();
}},_onWebServiceAppointmentsReceived:function(){var j=this._isInBatchMode()||this._navigating;
this._processUpdateMode(j);
this._navigating=false;
if(this._newActiveModel){this._activeModel=this._newActiveModel;
this._newActiveModel=null;
}this.set_firstDayStart(this._activeModel.get_visibleRangeStart());
this._resolveAddButtonVisibility();
if(!this._activeModel._getRenderer){return;
}var k=this._activeModel._getRenderer();
if(k){k.refreshView();
this._updateScrollAreas();
}},_processUpdateMode:function(m){var n=this;
var j=this.get_appointments();
if(m){j._clear();
}else{if(this._currentOperationAppointment){var l=this._currentOperationAppointment.get_id();
this._currentOperationAppointment.remove();
var k=this.get_appointments().findAll(function(o){return o.get_id()===l||o.get_recurrenceParentID()===l;
});
k.forEach(function(o){Array.remove(j._array,o);
});
n._activeModel._getRenderer().clearAppointments(k);
}}this._currentOperationAppointment=null;
},_cacheCurrentOperationAppointment:function(j,k){var l=j.get_recurrenceState();
if(l===c.RecurrenceState.Occurrence||l===c.RecurrenceState.Exception&&k){this._currentOperationAppointment=this.get_appointments().findByID(j.get_recurrenceParentID());
}else{this._currentOperationAppointment=j;
}},_resolveAddButtonVisibility:function(){if(this._renderMode==c.RenderMode.Mobile){var k=this.get_selectedView(),l=c.SchedulerViewType,j=k==l.MonthView||k==l.YearView||k==l.AgendaView||k==l.TimelineView;
a(this._element).find(".rsAddAppointment").toggle(!j);
}},dispose:function(){if(this._advancedInsertTemplate&&this._advancedInsertTemplate.dispose){this._advancedInsertTemplate.dispose();
}if(this._advancedEditTemplate&&this._advancedEditTemplate.dispose){this._advancedEditTemplate.dispose();
}if(this._onWindowResizeDelegate){$telerik.removeHandler(window,"resize",this._onWindowResizeDelegate);
}if(this._onKeyboardEventDelegate){$telerik.removeHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
}if(this._onKeyboardEventNavigationDelegate){$telerik.removeHandler(this.get_element(),"keydown",this._onKeyboardEventNavigationDelegate);
}if(this._onDocumentMouseOutDelegate){$telerik.removeHandler(document.documentElement,"mouseout",this._onDocumentMouseOutDelegate);
}if(this._onDocumentClickDelegate){$telerik.removeHandler(document.documentElement,$telerik.isTouchDevice?"touchend":"click",this._onDocumentClickDelegate);
}var j=this.get_contentElement();
if(j){$telerik.clearHandlers(j);
}if(c.TouchScrollExtender._getNeedsScrollExtender()&&this._contentTouchScroll){this._contentTouchScroll.dispose();
}this._dropDownElement=null;
this._clearScrollAreaHandlers();
this._eventMap.dispose();
if(this._renderMode==c.RenderMode.Lite){a(this._element).find(".rsTopWrap .rsButton").off();
}this._modelTables=null;
this._resizingState=null;
this._currentOperationAppointment=null;
this._disposeAppointmentsTooltip();
if(this._resizeHelper){this._resizeHelper.dispose();
this._resizeHelper=null;
}if(this._inlineTemplate){this._inlineTemplate.dispose();
}if(this._popupDialog){this._popupDialog.close();
}this._disposePlugins();
c.RadScheduler.callBaseMethod(this,"dispose");
},_disposePlugins:function(){var j=this;
a.each(c.RadScheduler._plugins,function(){this.onDispose.call(j);
});
},_clearScrollAreaHandlers:function(){if(this._contentScrollArea){$telerik.clearHandlers(this._contentScrollArea);
}},repaint:function(j){if(this._repainting){return;
}this._repainting=true;
c.RadScheduler._adjustContentDimensions(a(this.get_element()),this.get_scrollTop(),this.get_scrollLeft(),this.get_overflowBehavior(),this._useHorizontalScrolling,this.get_renderMode());
this._repaintAdvancedTemplate();
this._repaintInlineTemplate();
this._initializeModelTables();
c.RadScheduler._recalcAppointmentWidth(this.get_element());
this._repainting=false;
},_repaintAdvancedTemplate:function(){if(this.get_overflowBehavior()==1&&!this._advancedFormSettings.modal){if(typeof(c.Scheduling)!="undefined"&&typeof(c.Scheduling.AdvancedTemplate)!="undefined"){c.Scheduling.AdvancedTemplate._adjustHeight($get(this.get_id()),this.get_renderMode());
}}},_repaintInlineTemplate:function(){if(this._renderMode==c.RenderMode.Mobile&&this._inlineTemplate.get_element()){this._inlineTemplate.repaint();
}},get_appointments:function(){return this._appointments;
},set_appointments:function(m){this._appointments=new c.SchedulerAppointmentCollection(this);
var k=eval("("+m+")");
for(var l=0;
l<k.length;
l++){var j=new c.SchedulerAppointment(k[l],this);
this._appointments.add(j);
}},get_resources:function(){return this._resources;
},set_resources:function(m){var j=Sys.Serialization.JavaScriptSerializer.deserialize(m);
for(var k=0;
k<j.length;
k++){var l=new c.SchedulerResource(j[k]);
this._resources.add(l);
}},get_resourceTypes:function(){return this._resourceTypes;
},set_resourceTypes:function(m){var j=Sys.Serialization.JavaScriptSerializer.deserialize(m);
for(var k=0;
k<j.length;
k++){var l=new c.ResourceType(j[k]);
this._resourceTypes.add(l);
}},get_adjustmentRules:function(){return this._adjustmentRules;
},set_adjustmentRules:function(j){this._adjustmentRules=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_resourceStyles:function(){if(!this._resourceStyles){if(c.ResourceStyleMappingCollection){this._resourceStyles=new c.ResourceStyleMappingCollection();
}else{return null;
}}return this._resourceStyles;
},set_resourceStyles:function(n){var m=eval("("+n+")");
var l=this.get_resourceStyles();
for(var j=0;
j<m.length;
j++){var k=new c.ResourceStyleMapping(m[j],this);
l.add(k);
}},get_firstDayStart:function(){return this._firstDayStart;
},set_firstDayStart:function(j){this._firstDayStart=new Date(Date.parse(j));
},get_currentAppointment:function(){return this._currentAppointment;
},set_currentAppointment:function(j){var k=Sys.Serialization.JavaScriptSerializer.deserialize(j);
this._currentAppointment=new c.SchedulerAppointment(k,this);
},get_localization:function(){return this._localization;
},set_localization:function(j){this._localization=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_scrollTop:function(){return this._scrollTop;
},set_scrollTop:function(j){this._scrollTop=j;
},get_scrollLeft:function(){return this._scrollLeft;
},set_scrollLeft:function(j){this._scrollLeft=j;
},get_displayDeleteConfirmation:function(){return this._displayDeleteConfirmation;
},set_displayDeleteConfirmation:function(j){this._displayDeleteConfirmation=j;
},get_displayRecurrenceActionDialogOnMove:function(){return this._displayRecurrenceActionDialogOnMove;
},set_displayRecurrenceActionDialogOnMove:function(j){this._displayRecurrenceActionDialogOnMove=j;
},get_shouldPostbackOnClick:function(){return this._shouldPostbackOnClick;
},set_shouldPostbackOnClick:function(j){this._shouldPostbackOnClick=j;
},get_shouldUseClientInlineInsertForm:function(){return this._shouldUseClientInlineInsertForm;
},set_shouldUseClientInlineInsertForm:function(j){this._shouldUseClientInlineInsertForm=j;
},get_shouldUseClientInlineEditForm:function(){return this._shouldUseClientInlineEditForm;
},set_shouldUseClientInlineEditForm:function(j){this._shouldUseClientInlineEditForm=j;
},get_overflowBehavior:function(){return this._overflowBehavior;
},set_overflowBehavior:function(j){this._overflowBehavior=j;
},get_readOnly:function(){return this._readOnly;
},get_readOnlyForActiveModel:function(){return !!this._activeModel._settings.readOnly;
},get_readOnlyResolved:function(){return this.get_readOnly()||this.get_readOnlyForActiveModel();
},set_readOnly:function(j){this._readOnly=j;
},get_selectedView:function(){return this._selectedView;
},set_selectedView:function(l,m){this._selectedView=l;
if(this._renderingManager){this._newActiveModel=this._getModelFactory(this._selectedView).createModel();
this._newActiveModel.initialize();
if(!m){var j={};
var n=c.SchedulerViewType;
var k=c.SchedulerNavigationCommand;
j[n.DayView]=k.SwitchToDayView;
j[n.WeekView]=k.SwitchToWeekView;
j[n.MonthView]=k.SwitchToMonthView;
j[n.TimelineView]=k.SwitchToTimelineView;
j[n.MultiDayView]=k.SwitchToMultiDayView;
j[n.AgendaView]=k.SwitchToAgendaView;
j[n.YearView]=k.SwitchToYearView;
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(j[l]));
}}this.raisePropertyChanged("selectedView");
},get_minutesPerRow:function(){return this._minutesPerRow;
},set_minutesPerRow:function(j){this._minutesPerRow=j;
},get_timeLabelRowSpan:function(){return this._timeLabelRowSpan;
},set_timeLabelRowSpan:function(j){this._timeLabelRowSpan=j;
this.raisePropertyChanged("timeLabelRowSpan");
},get_hoursPanelTimeFormat:function(){if(!this._hoursPanelTimeFormat){if((this._activeModel.get_dayStartTime()%h!==0)||((this.get_timeLabelRowSpan()*this.get_minutesPerRow())%60!==0)){this._hoursPanelTimeFormat="h:mmtt";
}else{this._hoursPanelTimeFormat="htt";
}}return this._hoursPanelTimeFormat;
},set_hoursPanelTimeFormat:function(j){this._hoursPanelTimeFormat=j;
},get_postBackReference:function(){return this._postBackReference;
},set_postBackReference:function(j){this._postBackReference=j;
},get_allowEdit:function(){return this._allowEdit;
},set_allowEdit:function(j){this._allowEdit=j;
},get_allowDelete:function(){return this._allowDelete;
},set_allowDelete:function(j){this._allowDelete=j;
},get_allowInsert:function(){return this._allowInsert;
},set_allowInsert:function(j){this._allowInsert=j;
},get_attributes:function(){return this._attributes;
},set_attributes:function(j){this._attributes._load(j);
},get_customAttributeNames:function(){return this._customAttributeNames;
},set_customAttributeNames:function(j){this._customAttributeNames=j;
},get_activeModel:function(){return this._activeModel;
},set_numberOfHoveredRows:function(j){this._numberOfHoveredRows=j;
},get_numberOfHoveredRows:function(){return this._numberOfHoveredRows;
},set_groupBy:function(j){this._groupBy=j;
},get_groupBy:function(){return this._groupBy;
},get_contentElement:function(){return $telerik.getElementByClassName(this.get_element(),"rsContent","div");
},get_rowHeight:function(){return this._rowHeight;
},set_rowHeight:function(j){this._rowHeight=j;
},get_height:function(){return a(this.get_element()).css("height");
},set_height:function(j){this.get_element().style.height=j;
this.repaint();
},get_minimumInlineFormWidth:function(){return this._minimumInlineFormWidth;
},set_minimumInlineFormWidth:function(j){this._minimumInlineFormWidth=j;
},get_minimumInlineFormHeight:function(){return this._minimumInlineFormHeight;
},set_minimumInlineFormHeight:function(j){this._minimumInlineFormHeight=j;
},get_validationGroup:function(){return this._validationGroup||this.get_id();
},set_validationGroup:function(j){this._validationGroup=j;
},get_webServiceSettings:function(){return this._webServiceSettings;
},set_webServiceSettings:function(k){var j=Sys.Serialization.JavaScriptSerializer.deserialize(k);
if(j.odataSettings){this._webServiceSettings=new c.SchedulerODataSettings(j);
}else{this._webServiceSettings=new c.SchedulerWebServiceSettings(j);
}},get_selectedDate:function(){return this._selectedDate;
},set_selectedDate:function(k){var j;
if(k instanceof Date){j=k;
}else{j=new Date(k);
}if(j!=null&&!isNaN(j)&&j!="Invalid Date"){this._selectedDate=j;
this.raisePropertyChanged("selectedDate");
}},get_showFullTime:function(){return this._showFullTime;
},set_showFullTime:function(k){if(k!=this._showFullTime){this._showFullTime=k;
if(this._renderingManager){var j=this.get_activeModel()._getRenderer();
if(k){j.showFullTime();
}else{j.showBusinessTime();
}this._renderingManager.loadAppointments(false);
this.repaint();
}}},get_showAllDayRow:function(){return this._showAllDayRow;
},set_showAllDayRow:function(j){this._showAllDayRow=j;
},get_firstDayOfWeek:function(){return this._firstDayOfWeek;
},set_firstDayOfWeek:function(j){this._firstDayOfWeek=j;
},get_lastDayOfWeek:function(){return this._lastDayOfWeek;
},set_lastDayOfWeek:function(j){this._lastDayOfWeek=j;
},get_weekViewSettings:function(){return this._weekViewSettings;
},set_weekViewSettings:function(j){this._weekViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_dayViewSettings:function(){return this._dayViewSettings;
},set_dayViewSettings:function(j){this._dayViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_monthViewSettings:function(){return this._monthViewSettings;
},set_monthViewSettings:function(j){this._monthViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_multiDayViewSettings:function(){return this._multiDayViewSettings;
},set_multiDayViewSettings:function(j){this._multiDayViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_timelineViewSettings:function(){return this._timelineViewSettings;
},set_timelineViewSettings:function(j){this._timelineViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_agendaViewSettings:function(){return this._agendaViewSettings;
},set_agendaViewSettings:function(j){this._agendaViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_yearViewSettings:function(){return this._yearViewSettings;
},set_yearViewSettings:function(j){this._yearViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(j);
},get_advancedFormSettings:function(){return this._advancedFormSettings;
},set_advancedFormSettings:function(k){for(var j in k){this._advancedFormSettings[j]=k[j];
}},get_appointmentStyleMode:function(){return this._appointmentStyleMode;
},set_appointmentStyleMode:function(j){this._appointmentStyleMode=j;
},showInlineInsertForm:function(r,m){var k,n=null;
if(m){n=m.get_index();
k=this.get_durationBetweenTimeSlots(r,m);
}var j=k?this._createAppointmentFromTimeSlotAndDuration(r,k):this._createAppointmentFromTimeSlot(r);
if(this._renderingManager&&this._startInsertingInAdvancedForm){this._showAdvancedInsertForm(j);
return;
}if(this.get_shouldUseClientInlineInsertForm()||this._renderingManager){if(this._datePickerCalendarExpanded){this._onDatePickerToggle();
}var l=this._getInlineTemplate();
l.set_isInsert(true);
l.instantiateIn(r.get_domElement());
l.set_text("");
l.set_start(j.get_start());
l.set_end(j.get_end());
if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormShown",l);
}this._fireFormCreated(j,c.SchedulerFormMode.Insert);
return;
}var q=r.get_domElement().offsetWidth;
var p=r.get_domElement().offsetHeight;
var o={command:"Insert",appointmentID:-1,targetSlotIndex:r.get_index(),lastSlotIndex:n,slotWidth:q,slotHeight:p};
this.postback(o);
},showInsertFormAt:function(k,j){this.showInlineInsertForm(k,j);
},showAllDayInlineInsertForm:function(l){var n=new Date(l.getFullYear(),l.getMonth(),l.getDate()),m=new b(n).add(f).toDate(),k=this._createAppointment(n,m),j=this.get_activeModel().getTimeSlotForAppointment(k);
this.showInlineInsertForm(j);
},showInlineEditForm:function(l,n,m){var k=m||l.get_element(),j=(l._allowDelete!=null)?l.get_allowDelete():this.get_allowDelete(),p=this._renderMode==c.RenderMode.Mobile,s;
if(this.get_selectedView()==c.SchedulerViewType.TimelineView){s=this._activeModel.getTimeSlotForAppointment(l).get_domElement();
}else{s=k.parentNode.parentNode;
}if(this._renderingManager&&this._startEditingInAdvancedForm){this.showAdvancedEditForm(l,n);
return;
}if(this.get_shouldUseClientInlineEditForm()||this._renderingManager){if(this._datePickerCalendarExpanded){this._onDatePickerToggle();
}var o=this._getInlineTemplate(),q;
if(l.get_recurrenceParentID()){q=this.get_appointments().findByID(l.get_recurrenceParentID());
}o.set_isInsert(false);
o.instantiateIn(k);
o.set_appointmentInternalID(l._internalID);
o.set_text(n&&q?q.get_subject():l.get_subject());
o.set_start(l.get_start());
o.set_end(l.get_end());
o.set_editSeries(n);
if(p){a(o.get_element()).find(".rsAptEditDelete").toggle(j);
}if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormShown",o);
}this._fireFormCreated(l,c.SchedulerFormMode.Edit,n);
return;
}var u=s.offsetWidth;
var t=s.offsetHeight;
var r={command:"Edit",appointmentID:l._internalID,editSeries:n,slotWidth:u,slotHeight:t};
this.postback(r);
},showAdvancedInsertForm:function(k){var l=b.add(k,this.get_minutesPerRow()*h),j=this._createAppointment(k,l);
j.set_subject("");
this._showAdvancedInsertForm(j);
},showAllDayAdvancedInsertForm:function(k){var m=new Date(k.getFullYear(),k.getMonth(),k.getDate()),l=b.add(m,f),j=this._createAppointment(m,l);
j.set_subject("");
this._showAdvancedInsertForm(j);
},showAdvancedEditForm:function(k,m){if(this._renderingManager){var j=(k._allowDelete!=null)?k.get_allowDelete():this.get_allowDelete(),n=this._renderMode==c.RenderMode.Mobile;
this._showAdvancedFormWrapper(a(this.get_element()).find("div.rsAdvancedEditWrapper"));
this._advancedTemplate=this._getAdvancedEditTemplate();
var l=this.prepareToEdit(k,m),o=false;
if(n){var p=this._getAppointmentByInternalID(k.get_internalID());
o=(p.get_recurrenceState()!=c.RecurrenceState.Exception&&l.get_recurrenceState()==c.RecurrenceState.Exception);
}this._fireFormCreated(l,c.SchedulerFormMode.AdvancedEdit,m);
if(this._advancedTemplate){this._advancedTemplate.populate(l,false,o);
}if(n){a(this._advancedTemplate._formElement).find(".rsAdvEditDelete").toggle(j);
}if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormShown",this._advancedTemplate);
}this._focusAdvancedFormSubjectTextBox();
return;
}var q={command:"AdvancedEdit",appointmentID:k._internalID,appointment:this._getSerializableAppointment(k),startDate:k.get_start().format("yyyyMMddHHmm"),endDate:k.get_end().format("yyyyMMddHHmm"),editSeries:m};
this.postback(q);
},hideAdvancedForm:function(){var j=a(this.get_element());
if(this._renderingManager){var k=j.find("> div.rsAdvancedEditWrapper, > div.rsAdvancedInsertWrapper");
if(k.parent().is(".rsHiddenAdvancedForm")){return;
}this._advancedTemplate=null;
j.find("div.rsHiddenAdvancedForm").append(k);
j.find("div.rsTopWrap").show();
if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormHidden");
}if(!this._advancedFormSettings.modal){this.repaint();
}}else{j.find("> .rsAdvFormWrap").hide();
}if(this._popupDialog){this._popupDialog.close();
}},hideInlineForm:function(){var j=this._getInlineTemplate();
if(j.get_element()){j.hide();
}if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormHidden");
}},editAppointmentWithConfirmation:function(j,k){this._editAppointmentInline(j,k);
},editAppointment:function(j,k){this.showInlineEditForm(j,k);
},insertAppointment:function(j){if(this._renderingManager){this._cacheCurrentOperationAppointment(j);
this.get_appointments().add(j);
return;
}(new Date()).format("yyyyMMddHHmm");
var k={command:"InsertAppointment",appointment:this._getSerializableAppointment(j),startDate:j.get_start().format("yyyyMMddHHmm"),endDate:j.get_end().format("yyyyMMddHHmm")};
this.postback(k);
},prepareToEdit:function(j,k){this._cacheCurrentOperationAppointment(j,k);
if(j.get_recurrenceState()!=c.RecurrenceState.NotRecurring){var m=j;
if(j.get_recurrenceParentID()){m=this.get_appointments().findByID(j.get_recurrenceParentID());
}if(k){return m;
}if(j.get_recurrenceState()!=c.RecurrenceState.Exception){var l=j.clone();
l._recurrenceParentID=m.get_id();
l._recurrenceRule="";
l._recurrenceState=c.RecurrenceState.Exception;
l.__newRecurrenceException=true;
return l;
}}return j;
},updateAppointment:function(j,k){if(this._renderingManager){if(this._currentOperationAppointment===null){this._cacheCurrentOperationAppointment(j,k);
}this._renderingManager.updateAppointment(j);
return;
}var l={command:"UpdateAppointment",appointmentID:j._internalID,appointment:this._getSerializableAppointment(j),startDate:j.get_start().format("yyyyMMddHHmm"),endDate:j.get_end().format("yyyyMMddHHmm"),editSeries:k};
this.postback(l);
},deleteAppointmentWithConfirmation:function(j){this._deleteAppointment(j);
},deleteAppointment:function(j,k){if(this._renderingManager){this._cacheCurrentOperationAppointment(j,k);
this.get_appointments().remove(j,k);
return;
}var l={command:"Delete",appointmentID:j._internalID,editSeries:k};
this.postback(l);
},moveAppointment:function(j,m,v,w){if(this._renderingManager){var p=this.get_activeModel(),q=this.prepareToEdit(j,m),s=p.get_startOfMovedAppointment(j,w,v),l=p.getDurationOfMovedAppointment(j,v,w),r,o;
if(q.get_recurrenceState()==c.RecurrenceState.Master){o=b.subtract(s,j.get_start());
s=b.add(q.get_start(),o);
}r=c.Scheduler.DateTime.add(s,l);
q.set_start(s);
q.set_end(r);
if(v.get_resource){var k=q.get_resources(),t=v.get_resource(),n=k.getResourceByTypeAndKey(t.get_type(),t.get_key());
if(n){k.remove(n);
}k.add(w.get_resource());
}this._renderingManager.updateAppointment(q);
return;
}var u={Command:"Move",AppointmentID:j._internalID,EditSeries:m,SourceSlotIndex:v.get_index(),TargetSlotIndex:w.get_index()};
this.postback(u);
},resizeAppointment:function(j,l,p,q){var o=this._resizingState.resizeFromStart;
if(this._renderingManager){var n=this.prepareToEdit(j,l),k;
if(o){j.set_start(q.get_startTime());
k=b.subtract(j.get_end(),j.get_start());
n.set_start(b.add(n.get_end(),(k*-1)));
}else{k=b.subtract(q.get_endTime(),j.get_start());
n.set_end(b.add(n.get_start(),k));
}this._renderingManager.updateAppointment(n);
return;
}var m={Command:"Resize",AppointmentID:j._internalID,EditSeries:l,SourceSlotIndex:p.get_index(),TargetSlotIndex:q.get_index(),StartDate:o?q.get_startTime().format("yyyyMMddHHmm"):j.get_start().format("yyyyMMddHHmm"),EndDate:o?j.get_end().format("yyyyMMddHHmm"):q.get_endTime().format("yyyyMMddHHmm")};
this.postback(m);
},removeRecurrenceExceptions:function(j){if(this._renderingManager){this._renderingManager.removeRecurrenceExceptions(j);
}},getAppointmentDomElement:function(k){var j=a(k).parents(".rsAgendaRow");
if(j.length>0){return j.find(".rsApt")[0];
}else{if(a(k).is(".rsAgendaRow")){return a(k).find(".rsApt")[0];
}}while(k&&!Sys.UI.DomElement.containsCssClass(k,"rsApt")){k=k.parentNode;
}return k;
},getAppointmentFromDomElement:function(o){if(!o){return null;
}var l=this.getAppointmentDomElement(o),j=this.get_appointments(),m,n;
for(var q=0,k=j.get_count();
q<k;
q++){m=j.getAppointment(q);
if(!m.get_element()){continue;
}n=m._domElements;
for(var r=0,p=n.length;
r<p;
r++){if(l.id==n[r].id){return m;
}}}return null;
},displayToUtc:function(j){return b.add(j,-this._timeZoneOffset);
},utcToDisplay:function(j){return b.add(j,this._timeZoneOffset);
},saveClientState:function(){return'{"scrollTop":'+Math.round(this._scrollTop)+',"scrollLeft":'+Math.round(this._scrollLeft)+',"isDirty":'+this._isDirty+"}";
},rebind:function(){if(!this._renderingManager){return;
}this.hideInlineForm();
this.hideAdvancedForm();
this._renderingManager.loadAppointments();
},_createAppointment:function(l,k){var j=new c.SchedulerAppointment();
if(l&&k){j.set_start(l);
j.set_end(k);
}j.set_timeZoneID(this._timeZoneId);
return j;
},_createAppointmentFromTimeSlot:function(n){if(!n){return this._createAppointment();
}var m=n.get_startTime();
var k=n.get_endTime();
var l=this.get_activeModel();
if(l.getDurationOfInsertedAppointment){k=b.add(m,l.getDurationOfInsertedAppointment(n));
}var j=this._createAppointment(m,k);
if(n.get_resource){j.get_resources().add(n.get_resource());
}return j;
},_createAppointmentFromTimeSlotAndDuration:function(n,k){var j=this._createAppointmentFromTimeSlot(n);
if(k&&k>0){var m=j.get_start(),l=b.add(m,k);
j.set_end(l);
}return j;
},_getSerializableAppointment:function(j){return{ID:j._internalID,Subject:this._encodeString(j.get_subject()),Description:this._encodeString(j.get_description()),Attributes:this._getSerializableAttributes(j.get_attributes()),Resources:this._getSerializableResources(j.get_resources()),RecurrenceState:j.get_recurrenceState(),RecurrenceParentID:j.get_recurrenceParentID(),TimeZoneID:j.get_timeZoneID()};
},_encodeString:function(j){return encodeURIComponent((j||"").replace(/'/g,"&squote"));
},_getSerializableAttributes:function(j){var k={};
j.forEach(function(l,m){k[l]=m;
});
return k;
},_getSerializableResources:function(l){var m=[];
for(var j=0;
j<l.get_count();
j++){var k=l.getResource(j);
m[m.length]={Key:k.get_key(),Text:this._encodeString(k.get_text()),Type:k.get_type(),Available:k.get_available()};
}return m;
},_onAppointmentInserting:function(j){if(!this._renderingManager){return;
}j._setOwner(this);
if(!this.get_activeModel().isVisible(j)){j._originallyVisible=j._visible;
j._visible=false;
}if(j.get_visible()){this._activeModel._getRenderer().renderAppointment(j);
if(j.get_visible()){this._raiseAppointmentCreated(j);
}}this._renderingManager.insertAppointment(j);
},_onAppointmentRemove:function(j,k){if(!this._renderingManager){return;
}this._activeModel._getRenderer().removeAppointment(j);
this._renderingManager.deleteAppointment(j,k);
},_onAppointmentsClear:function(){if(!this._renderingManager){return;
}this._activeModel._getRenderer().clearAppointments(this.get_appointments());
},_getFormElement:function(){var j=a(this.get_element()),k=j.find("div.rsAptEditFormInner, div.rsInlineForm");
if(!k.length){k=j.find("div.rsAdvancedEdit").filter(":visible");
}if(k.length){return k[0];
}else{return null;
}},_fireFormCreated:function(j,n,l){var m=this._getFormElement();
if(m){var k=new c.SchedulerFormCreatedEventArgs(j,m,n,l);
this._raiseFormCreated(k);
}},_onKeyboardEvent:function(k){var m=this._rowSelectionState;
if(k.keyCode==27){if(this._dragging){this._abortDrag(k,true);
}if(this._resizingState&&this._resizingState.resizing){this._restoreResizingAppointmentSize();
this._cleanupResize();
}if(!m.isRowSelection){this._clearSlotSelection();
}}if(k.keyCode==13&&!a(".rsAdvancedInsertWrapper").is(":visible")){if(m.isRowSelection){this._abortRowSelection();
}var l=false,n=k.target,j=a(n);
if(!$telerik.isIE){if(n.tagName.toLowerCase()=="body"||j.is(".RadScheduler")){l=true;
}}else{if(n.className){if(j.is(".rsWrap")||j.is(".rsSelectedSlot")){l=true;
}}}if(m.selectedSlots.length>0&&!this.get_readOnlyResolved()&&this.get_allowInsert()&&l){if(!this._lastSelectedApt){if(this._insertAppoinmentAtSelectedSlots()){k.preventDefault();
}return false;
}}}},_insertAppoinmentAtSelectedSlots:function(){var n=this._rowSelectionState,m=n.selectedSlots,o,j,k;
if(m.length==0){return;
}o=m[0];
j=this.get_durationOfSelectedArea();
if(!j){this._clearSlotSelection();
return;
}k=m[m.length-1];
var l=new c.SchedulerAppointmentInsertingEventArgs(o.get_startTime(),o.get_isAllDay(),o);
this._raiseAppointmentInserting(l);
if(!l.get_cancel()){this.showInsertFormAt(o,k);
return true;
}},_onDocumentClick:function(j){var k=a(this.get_element()).find(".rsToolbar .rsViewSwitcher>ul");
if(k.length>0){if(a(j.target).is("span.rsViewToggle")){return;
}k.addClass("rsHidden");
}},_onKeyboardEventNavigation:function(j){if(this._getNavigator()&&(j.target===this._element||a(j.target).is("textarea"))||$telerik.isIE&&!a(j.target).is("input")&&a(j.target).parents(".RadScheduler")[0]===this._element){this._getNavigator().parse(j);
}},_onDocumentMouseOut:function(j){if(!this._dragging||this._finishDragExecuting){return;
}var k=j.rawEvent.relatedTarget?j.rawEvent.relatedTarget:j.rawEvent.toElement;
if(!k){this._abortDrag(j,true);
}},_getDatePickerHeight:function(j){var k=0;
j.children().each(function(){k+=a(this).outerHeight();
});
return k;
},_onDatePickerToggle:function(p){var q=this.get_element(),l=a(q),m=l.find("div.rsDatePickerWrapper"),k=m.find("div.rsDatePickerAnimationWrapper"),o=k.find("div").filter(":first"),n=o.find("table.rcMainTable"),j=l.find(".rsDatePickerActivator"),s=this.get_renderMode()===c.RenderMode.Lite;
m.css({position:"relative",display:"inline-block"});
k.stop().css({position:"absolute",overflow:"hidden"});
m.css("overflow","visible");
if(!this._datePickerCalendarExpanded){this.hideInlineForm();
k.show();
if(n.length){var t=(s)?n.outerWidth():n.parent().outerWidth();
k.add(o).width(t+"px");
}var r=(s)?o.height():o.find("table").first().height();
k.animate({height:r+"px"},300,"easeInQuart");
j.addClass("rsDatePickerActivatorDown");
}else{k.animate({height:"0px"},300,"easeOutQuart",function(){m.css("overflow","hidden");
k.hide();
});
j.removeClass("rsDatePickerActivatorDown");
}this._datePickerCalendarExpanded=!this._datePickerCalendarExpanded;
if(p){p.preventDefault();
}return false;
},_onContentScroll:function(){var k=this._contentScrollArea;
if(!k){return;
}if(this._horizontalScrollAreas.length){this._horizontalScrollAreas.scrollLeft(k.scrollLeft);
}c.RadScheduler._scrollVerticalArea(this._verticalScrollAreas,k.scrollTop);
var j=this._getInlineTemplate().get_element();
if(j&&j.detached){c.InlineTemplate._positionForm(this.get_element().id);
}this._scrollLeft=k.scrollLeft;
this._scrollTop=k.scrollTop;
this.updateClientState();
},_onAppointmentClick:function(m){if(this._dragging){return;
}var n=new Date().getTime();
var k=100;
if($telerik.isIE&&n-this._resizingState.resizeTimestamp<k){return;
}var j=this.getAppointmentFromDomElement(m.eventMapTarget);
var l=new c.SchedulerAppointmentClickEventArgs(j,m);
this._raiseAppointmentClick(l);
if((this.get_readOnlyResolved()||!this.get_allowEdit())&&this.get_shouldPostbackOnClick()){var o={Command:"Click",AppointmentID:j._internalID,EditSeries:false};
this.postback(o);
}},_onAppointmentContextMenu:function(n){if(this._dragging||this._draggingAppointment){return;
}var k=this.getAppointmentDomElement(n.eventMapTarget);
var j=this.getAppointmentFromDomElement(k);
if(j.get_contextMenu){var l=j.get_contextMenu();
if(l!=null){var o=l.findItemByValue("CommandEdit");
var m=l.findItemByValue("CommandDelete");
if(o!=null){o.set_enabled(true);
if(this.get_readOnlyResolved()||!this.get_allowEdit()){o.set_enabled(false);
}if(j._allowEdit!=null){o.set_enabled(j.get_allowEdit());
}}if(m!=null){m.set_enabled(true);
if(this.get_readOnlyResolved()||!this.get_allowDelete()){m.set_enabled(false);
}if(j._allowDelete!=null){m.set_enabled(j.get_allowDelete());
}}}}var p=new c.SchedulerAppointmentContextMenuEventArgs(j,n);
this._raiseAppointmentContextMenu(p);
},_onEditFormClick:function(j){j.stopPropagation();
},_getHourCellFromDomElement:function(j){var k=j;
while(k.tagName.toLowerCase()!="th"){k=k.parentNode;
}return k;
},_onAllDayCellMouseOver:function(j){if(this._dragging&&this._draggingAppointment){j.eventMapTarget.lastChild.appendChild(this._draggingAppointment.get_element());
}this._onRowMouseOver(j);
},_onRowMouseOver:function(j){if(this._dragging||this._resizingState.resizing||this._getInlineTemplate()._resizing){return;
}var n=this.get_numberOfHoveredRows();
if(n==0){return;
}this._removeRowHover();
var p=a(j.target);
while(!(p.is("td")&&p.parents("table").filter(":first").is(".rsContentTable, .rsAllDayTable"))){p=p.parent();
if(p.length==0){return;
}}if(p.parents("table").is(".rsAllDayTable")||this.get_selectedView()==c.SchedulerViewType.MonthView){n=1;
}this._currentHoverCell=p[0];
var k=[this._currentHoverCell];
for(var l=1;
l<n;
l++){var m=this._getNextRowCell(k[l-1]);
if(m){k[l]=m;
}else{break;
}}this._hoveredCells=k;
var o=1;
a.each(this._hoveredCells,function(){a(this).addClass("rsAptCreate").addClass("rsAptCreateRow"+o++);
});
return true;
},_onCellMouseDown:function(j){if(this._lastSelectedApt&&this._contentTouchScroll){this._contentTouchScroll.enable();
}this._clearAppointmentSelection();
if(!this.get_activeModel().get_supportsSlotSelection()){return;
}var l=this._rowSelectionState,k;
if(j.which){k=(j.which==3);
}else{if(j.button){k=(j.button==2);
}}if(k){return;
}if(this.get_readOnlyResolved()){return;
}var m=a(j.target);
while(!(m.is("td")&&m.parents("table").filter(":first").is(".rsContentTable, .rsAllDayTable"))){m=m.parent();
if(m.length==0||m.parents("div").filter(":first").is(".rsAptEditSizingWrapper")){return;
}}this._clearSlotSelection();
var n=this._activeModel.getTimeSlotFromDomElement(m[0]);
if(n&&n.set_selected){n.set_selected(true);
l.rowSelectionStartSlot=n;
l.isRowSelection=true;
l.selectedSlots.push(n);
if(!$telerik.isTouchDevice){$telerik.addHandler(document,"mousemove",this._onRowSelectionMouseMoveDelegate);
$telerik.addHandler(document,"mouseup",this._onRowSelectionMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
}}},_onRowSelectionMouseMove:function(j){var k=this._rowSelectionState;
if(this.get_readOnlyResolved()||this._dragging||this._draggingAppointment||!k.isRowSelection){this._abortRowSelection();
return;
}this._processRowSelection(this._getCellFromCoordinates(j.clientX,j.clientY));
},_processRowSelection:function(j){c.RadScheduler._clearSelection();
if(!j||!j.tagName||j.tagName.toLowerCase()!="td"){return;
}this.get_activeModel()._processRowSelection(j,this._updateRowSelection);
},_updateRowSelection:function(){var n=this._rowSelectionState,o=n.rowSelectionStartSlot,j=n.rowSelectionEndSlot,m=this._activeModel.getTimeSlotsBetween(o,j),k,l;
for(k=0,l=n.selectedSlots.length;
k<l;
k++){n.selectedSlots[k].set_selected(false);
}n.selectedSlots=m;
for(k=0,l=m.length;
k<l;
k++){m[k].set_selected(true);
}},_onRowSelectionMouseUp:function(j){this._abortRowSelection();
},_onNavigationCommand:function(m,j){var k=m;
var l=k._rowSelectionState;
if(l.selectedSlots.length>0){k._clearSlotSelection();
}k._navigating=true;
},_abortRowSelection:function(){var k=this._rowSelectionState;
k.isRowSelection=false;
if(k.selectedSlots.length>0){k.rowSelectionStartSlot=k.selectedSlots[0];
k.rowSelectionEndSlot=k.selectedSlots[k.selectedSlots.length-1];
}if(!$telerik.isTouchDevice){try{$telerik.removeHandler(document,"mousemove",this._onRowSelectionMouseMoveDelegate);
}catch(j){}try{$telerik.removeHandler(document,"mouseup",this._onRowSelectionMouseUpDelegate);
}catch(j){}try{$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
}catch(j){}}},_clearSlotSelection:function(){var j=this._rowSelectionState;
a.each(j.selectedSlots,function(){this.set_selected(false);
});
j.selectedSlots=[];
j.rowSelectionStartSlot=null;
j.rowSelectionEndSlot=null;
},get_selectedSlots:function(){return this._rowSelectionState.selectedSlots;
},get_durationOfSelectedArea:function(){var k=this._rowSelectionState;
if(k.selectedSlots.length<1){return 0;
}var l=k.rowSelectionStartSlot;
var j=k.rowSelectionEndSlot;
return this.get_durationBetweenTimeSlots(l,j);
},get_durationBetweenTimeSlots:function(l,k){var j=null;
l=(!l)?k:l;
k=(!k)?l:k;
if(l&&k){j=b.subtract(k.get_endTime(),l.get_startTime());
if(!j){j=b.add(l.get_endTime(),l.get_startTime());
}else{if(j<=0){j=b.subtract(l.get_endTime(),k.get_startTime());
if(j<=0){j=null;
}}}}return j;
},_getNavigator:function(){return this._navigator;
},_getParentTable:function(j){var k=j.parentNode;
while(k.tagName.toLowerCase()!="table"){k=k.parentNode;
}return k;
},_getNextRowCell:function(j){var o=j.parentNode;
var p=this._getParentTable(j);
var m=p.rows[o.rowIndex+1];
var k=null;
if(m){var n=m.cells.length;
var l=o.cells.length;
if(n==l){k=m.cells[j.cellIndex];
}else{if(n<l){k=m.cells[j.cellIndex-1];
}else{k=m.cells[j.cellIndex+1];
}}}return k;
},_onRowMouseOut:function(j){if(!this._currentHoverCell){return;
}if(!j.eventMapRelatedTarget||$telerik.isDescendant(this._currentHoverCell,j.eventMapRelatedTarget)){return;
}this._removeRowHover();
},_removeRowHover:function(){if(!this._hoveredCells){return;
}this._currentHoverCell=null;
var j=1;
a.each(this._hoveredCells,function(){a(this).removeClass("rsAptCreate").removeClass("rsAptCreateRow"+j++);
});
},_stopEventPropagation:function(j){j.stopPropagation();
},_onAppointmentDeleteMouseDown:function(j){var k=this._rowSelectionState;
this._stopEventPropagation(j);
if(k.selectedSlots.length>0){this._clearSlotSelection();
}},_onResizeGripMouseDown:function(l){if(this.get_readOnlyResolved()){return;
}var q=this._rowSelectionState;
if(q.selectedSlots.length>0){this._clearSlotSelection();
}var p=this.getAppointmentDomElement(l.eventMapTarget),o=this.getAppointmentFromDomElement(p),k=(o._allowEdit!=null)?o.get_allowEdit():this.get_allowEdit();
if(!k){return;
}var m=new c.SchedulerAppointmentResizeStartEventArgs(o);
this._raiseAppointmentResizeStart(m);
if(!m.get_cancel()){var j=a(p),n=$telerik.isTouchDevice;
this._initializeResizingState(l,p,o);
if(this.get_selectedView()==c.SchedulerViewType.TimelineView){j=j.parent();
}j.css("zIndex","999");
$telerik.addHandler(document,(n?"touchmove":"mousemove"),this._onResizeGripMouseMoveDelegate);
$telerik.addHandler(document,(n?"touchend":"mouseup"),this._onResizeGripMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
if(n){if(this._contentTouchScroll){this._contentTouchScroll.disable();
}l.preventDefault();
}}},_initializeResizingState:function(j,m,l){var k=this._activeModel;
var o=a(l.get_element()).parents("td").filter(":first").get(0);
var n=this._resizingState;
var p;
n.resizing=true;
n.resizingElement=m;
n.resizingAppointment=l;
n.resizeFromStart=a(j.target).hasClass("rsAptResizeStart");
n.sourceSlot=this.get_selectedView()==c.SchedulerViewType.TimelineView?k.getTimeSlotForAppointment(l):k.getTimeSlotFromDomElement(o);
p=this._getResizeTargetCell(j);
n.targetSlot=k.getTimeSlotFromDomElement(p);
n.originalSize=k._getResizingAppointmentOriginalSize(m,l);
},_restoreResizingAppointmentSize:function(){var j=this._resizingState;
if(!j.originalSize){return;
}this._activeModel.restoreResizingAppointmentSize(j);
},_onResizeGripMouseMove:function(n){var r=this._resizingState;
var p=r.resizeFromStart;
var j=r.resizingAppointment;
var l=r.resizingElement;
if(!l){return;
}c.RadScheduler._clearSelection();
var k=l.parentNode.parentNode;
var s=this._getResizeTargetCell(n);
if(!s){return;
}var t=this._activeModel.getTimeSlotFromDomElement(s);
if(!t||t.get_rawIndex().viewPartIndex===0){return;
}if(t.get_rawIndex().modelIndex!==r.sourceSlot.get_rawIndex().modelIndex){return;
}if(p&&t.get_startTime()>=j.get_end()||!p&&t.get_endTime()<=j.get_start()){return;
}r.targetSlot=t;
var o=new c.SchedulerAppointmentResizingEventArgs(j,t);
this._raiseAppointmentResizing(o);
if(o.get_cancel()){return;
}var m=this._getParentTable(k);
var u=this._getParentTable(s);
if(m!=u){return;
}var q=this._activeModel._getResizingPlaneDelta(s,k);
if(q!=0){this._updateResizingAppointmentElements(r,s,q);
}this._activeModel.updateResizingAppointmentSize(s,r);
this._scrollView(r.resizingElement,!p,this._getMousePosition(n));
},_getResizeTargetCell:function(k){var j=this._resizingState.resizeFromStart?10:-10;
var l=$telerik.getTouchEventLocation(k,"client");
if(this.get_selectedView()==c.SchedulerViewType.TimelineView||this.get_selectedView()==c.SchedulerViewType.MonthView){l.x+=j;
}else{l.y+=j;
}var m=this._getCellFromCoordinates(l.x,l.y);
return m;
},_updateResizingAppointmentElements:function(p,q,o){var m=p.resizeFromStart,n=p.resizingAppointment,k=m?".rsAptResizeStart":".rsAptResizeEnd",l=$telerik.isTouchDevice,j;
if(l){j=a(p.resizingElement).find(k).remove();
a(p.resizingElement).find(".rsAptMid").append(j.clone());
}this._clearAppointmentSelection();
this._resizeHelper._updateResizingAppointmentElements(p,o,q);
if(l){a(p.resizingElement).find(k).replaceWith(j);
this._selectAppointment(n,p.resizingElement);
}},_repaintAppointment:function(j){var k=this._activeModel._getRenderer();
if(k){k.removeAppointment(j);
j._domElements=[];
j._domElement=null;
k.renderAppointment(j);
}},_onSelectStart:function(j){$telerik.cancelRawEvent(j);
return false;
},_onResizeGripMouseUp:function(l){if(!this._resizingState.resizingElement){return;
}var p=this._resizingState,o=p.resizingElement,s=p.targetSlot,n=p.resizeFromStart,j=p.resizingAppointment,t=n?j.get_end():s.get_endTime(),u=n?s.get_startTime():j.get_start(),r=p.sourceSlot,v=o;
if(this.get_selectedView()==c.SchedulerViewType.TimelineView||this.get_selectedView()==c.SchedulerViewType.MonthView){v=v.parentNode;
}this._clearElementZIndex(v);
if(!n&&t.getTime()==j.get_end().getTime()||n&&u.getTime()==j.get_start().getTime()){this._restoreResizingAppointmentSize();
this._cleanupResize();
return;
}var k={OnConfirm:this._onAppointmentResizeCallback,OnCancel:this._onAppointmentResizeAbortCallback,Scheduler:this,Appointment:j,SourceSlot:r,TargetSlot:s,UpdatedEndDate:t,UpdatedStartDate:u,CallbackIsCalledFromDialog:true};
if(j._recurrenceState==1||j._recurrenceState==2){var q=new c.SchedulerRecurrenceActionDialogShowingEventArgs(k.Appointment,c.RecurrenceAction.Resize);
this._raiseRecurrenceActionDialogShowing(q);
if(q.get_cancel()){var m=q.get_editSeries();
if(m!==null){k.CallbackIsCalledFromDialog=false;
this._onAppointmentResizeCallback(m,k);
}else{this._onAppointmentResizeAbortCallback(k);
}}else{c.RecurrenceActionDialog.Show(c.RecurrenceAction.Resize,k);
}}else{k.CallbackIsCalledFromDialog=false;
this._onAppointmentResizeCallback(false,k);
}l.stopPropagation();
this._cleanupResize();
},_setAppointmentElementPosition:function(j,k,l){if(l!==i){j.style.top=l+"px";
}j.style.height=k+"px";
},_cleanupResize:function(){this._resizingState.resizing=false;
this._resizingState.sourceSlot=null;
this._resizingState.targetSlot=null;
this._resizingState.resizeTimestamp=new Date().getTime();
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onResizeGripMouseMoveDelegate);
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onResizeGripMouseUpDelegate);
$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
if(this._contentTouchScroll){this._contentTouchScroll.enable();
}clearInterval(this._scrollInterval);
},_onAppointmentResizeCallback:function(k,j){j.Scheduler._raiseRecurrenceActionDialogClosedEvent(j,k,c.RecurrenceAction.Resize);
var l=new c.SchedulerAppointmentResizeEndEventArgs(j.Appointment,j.TargetSlot,j.UpdatedStartDate,j.UpdatedEndDate,k);
j.Scheduler._raiseAppointmentResizeEnd(l);
if(!l.get_cancel()){j.Scheduler.resizeAppointment(j.Appointment,k,j.SourceSlot,j.TargetSlot);
}else{j.Scheduler._restoreResizingAppointmentSize();
}},_onAppointmentResizeAbortCallback:function(j){j.Scheduler._raiseRecurrenceActionDialogClosedEvent(j,false,c.RecurrenceAction.Resize);
j.Scheduler._restoreResizingAppointmentSize();
},_onResizeGripMouseClick:function(j){j.stopPropagation();
},_onResizeGripMouseOver:function(j){j.stopPropagation();
},_initializeModelTables:function(){this._modelTables=[];
var j=this,k=j.get_element();
a(".rsTopWrap .rsAllDayTable, .rsTopWrap .rsContentTable, .rsTopWrap .rsAgendaTable",k).each(function(){var m=this,n=j._getTotalOffset(k);
m.targetRect=$telerik.getBounds(m);
m.targetRect.x-=n.left;
m.targetRect.y-=n.top;
j._compensateScrollOffset(m);
if(!a(m).is(".rsAgendaTable")){m.cellWidth=m.targetRect.width/m.rows[0].cells.length;
var l=[];
a.each(m.rows,function(){Array.add(l,this.cells[0].offsetHeight);
});
m.cellHeights=l;
}Array.add(j._modelTables,m);
});
return this._modelTables;
},_compensateScrollOffset:function(l){var j=$telerik.isSafari||$telerik.isChrome?document.body:document.documentElement,k=$telerik.getScrollOffset(j,false),m=$telerik.getScrollOffset(l,true);
m.x-=k.x;
m.y-=k.y;
l.targetRect.x+=m.x;
l.targetRect.y+=m.y;
},_getTotalOffset:function(j){var l=j.offsetTop,k=j.offsetLeft,m=j.offsetParent;
while(m){l+=m.offsetTop;
k+=m.offsetLeft;
m=m.offsetParent;
}return{top:l,left:k};
},_getCellFromCoordinates:function(l,m){if(!this.get_element()){return;
}var q=this._modelTables;
var n=a("#"+this.get_element().id+" div.rsContentScrollArea").filter(":first")[0];
var t=$telerik.getScrollOffset(n,true);
var w=this._getTotalOffset(this.get_element());
for(var o=0,p=q.length;
o<p;
o++){var z=l+t.x;
var A=m+t.y;
var u=q[o];
var v={x:u.targetRect.x+w.left,y:u.targetRect.y+w.top,width:u.targetRect.width,height:u.targetRect.height};
var j=v.y+v.height;
var r=v.x+v.width;
if(z>=v.x&&z<=r&&A>=v.y&&A<=j){var s=this._getRowIndex(A,u,v.y);
s=Math.min(u.rows.length-1,Math.max(0,s));
var k=parseInt((z-v.x)/u.cellWidth,10);
k=Math.min(u.rows[s].cells.length-1,Math.max(0,k));
return u.rows[s].cells[k];
}}return null;
},_getRowIndex:function(k,l,p){var n=0;
var o=l.cellHeights.length;
var j=p;
while(n<o){var m=j+l.cellHeights[n];
if(j<=k&&k<m){break;
}j=m;
n++;
}return n;
},_shouldStartDrag:function(j){if(!this._initialDragAppointment||!this._initialDragMousePos){return false;
}if(Math.abs(this._initialDragMousePos.x-j.x)>4||Math.abs(this._initialDragMousePos.y-j.y)>4){return true;
}},_onDocumentMouseMove:function(n){var q=this._getMousePosition(n),p=$telerik.getTouchEventLocation(n,"client"),o=this._getCellFromCoordinates(p.x,p.y);
if(!this._dragging&&this._shouldStartDrag(q)){this._startDrag(n);
}if(!this._dragging||!this._draggingAppointment){return;
}if(this._scrollView(this._initialDragAppointmentElement,false,q)){return;
}c.RadScheduler._clearSelection();
if(!o||!o.tagName||o.tagName.toLowerCase()!="td"||o==this._draggingHoveredCell){return;
}var l=this._initialDragAppointmentElement,r=this._getDraggingTargetCell(o),j=a(l.parentNode),k;
this._draggingHoveredCell=o;
if(a(r).children(".rsWrap").get(0)!=l.parentNode){j.removeClass(this._styles.dragTarget);
this._clearElementZIndex(j[0]);
k=this._getCellWrap(r,l);
k.css("zIndex",999);
if(this.get_selectedView()!=c.SchedulerViewType.MonthView){k.append(l);
}else{if(r.childNodes.length>1){r.childNodes[1].appendChild(l);
}else{k.append(l);
}}if(this._isInTimelineViewNotGroupedByDate()&&!j.parent().hasClass("rsFirstCell")){j.remove();
}a(l.parentNode).addClass(this._styles.dragTarget).css("display","");
}this._activeModel.updateDraggingAppointmentSize(l,r,o);
var s=this._activeModel.getTimeSlotFromDomElement(o),m=new c.SchedulerAppointmentMovingEventArgs(this._draggingAppointment,s);
this.raiseEvent("appointmentMoving",m);
if(m.get_cancel()){this._abortDrag(n);
}return true;
},_getDraggingTargetCell:function(j){var l=Math.max(0,j.parentNode.rowIndex-this._draggingSourceRowOffset),k=Math.max(0,j.cellIndex-this._draggingSourceCellOffset);
return j.parentNode.parentNode.rows[l].cells[k];
},_getCellWrap:function(l,j){var k=a(l),m=k.find("div.rsWrap").filter(":first");
if(m.length==0){m=a(j.parentNode.cloneNode(false)).css({width:k.width(),height:"auto"});
if(l.innerHTML=="&nbsp;"){l.innerHTML="";
}else{m.css({position:"absolute",top:k[0].offsetTop,left:k[0].offsetLeft});
}m.appendTo(k);
}if(m.hasClass("rsDateWrap")&&m.next().length){m=m.next();
}return m;
},_isInTimelineViewNotGroupedByDate:function(){return this.get_selectedView()==c.SchedulerViewType.TimelineView&&(!this.get_timelineViewSettings().groupBy||this.get_timelineViewSettings().groupBy.indexOf("Date")==-1);
},_isInBatchMode:function(){return this.get_webServiceSettings().get_updateMode()==c.AppointmentUpdateMode.Batch;
},_clearElementZIndex:function(j){a(j).css("zIndex","");
},_scrollView:function(n,l,q){var j=a(n).parents("div.rsContentScrollArea");
if(!j.length){return;
}var m=a("#"+this.get_element().id+" div.rsContent")[0];
var s=this._getRelativeOffset(j[0],m);
var r=q.x-(s.left+j.width());
var p=q.x-s.left;
var u=q.y-s.top;
var k=q.y-(s.top+j.height());
var o=0;
var v=0;
var t=function(){if(o!==0){j.scrollLeft(j.scrollLeft()+o/10);
}if(v!==0){j.scrollTop(j.scrollTop()+v/10);
}};
if(r>0){o=r;
}else{if(p<0){o=p;
}}if(k>0){v=k;
}else{if(u<0){v=u;
}}clearInterval(this._scrollInterval);
if(o!==0||v!==0){this._scrollInterval=setInterval(t,15);
t();
return true;
}return;
},_getRelativeOffset:function(j,n){var m=j.offsetParent;
var l=j.offsetTop;
var k=j.offsetLeft;
while(m!=n){l+=m.offsetTop;
k+=m.offsetLeft;
if(!m.offsetParent){break;
}m=m.offsetParent;
}return{top:l,left:k};
},_getMousePosition:function(j){var l=$telerik.getScrollOffset(document.body,true),k=$telerik.getTouchEventLocation(j,"client");
return{x:k.x+l.x,y:k.y+l.y};
},_onAppointmentMouseDown:function(m){if(this.get_readOnlyResolved()){return;
}if(this._rowSelectionState.selectedSlots.length>0){this._clearSlotSelection();
}var l=this.getAppointmentDomElement(m.eventMapTarget),k=this.getAppointmentFromDomElement(l),n=this.get_selectedView()==c.SchedulerViewType.AgendaView,p=k._selected,o=$telerik.isTouchDevice,j,q=this;
if(o){this._addLongTouchHandler("appointment",this._onAppointmentTouchHold,m);
this._preventCtxMenuClosing=false;
if(!p){this._clearAppointmentSelection();
}if(!p||n){this._appointmentTapped=true;
a(".rsContent",this._element).on("touchmove",function(r){q._contextMenuInterval.reset();
q._appointmentTapped=false;
}).on("touchend",function(t){q._contextMenuInterval.reset();
a(".rsContent",q._element).off("touchend").off("touchmove");
if(q._appointmentTapped){q._appointmentTapped=false;
var s=q.getAppointmentDomElement(t.target),r=q.getAppointmentFromDomElement(s);
q._selectAppointment(r,s);
}});
return;
}}else{this._selectAppointment(k,l);
}j=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
if(!j||n){return;
}if(this._contentTouchScroll){this._contentTouchScroll.disable();
}this._initialDragAppointmentElement=l;
this._initialDragMousePos=this._getMousePosition(m);
this._initialDragAppointment=k;
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
if(o){a(".rsContent",this._element).on("touchend",function(r){q._onDocMouseUp(r);
}).on("touchmove",function(r){r.preventDefault();
q._contextMenuInterval.reset();
q._onDocumentMouseMove(r);
});
}else{$telerik.addHandler(document,"mouseup",this._onDocMouseUpDelegate);
$telerik.addHandler(document,"mousemove",this._onDocumentMouseMoveDelegate);
}this._dragHandlersAttached=true;
},_onAppointmentTouchHold:function(l){this._abortDrag(l,true);
this._preventCtxMenuClosing=true;
var k=this.getAppointmentDomElement(l.target),j=this.getAppointmentFromDomElement(k);
this._selectAppointment(j,k);
if(j.get_contextMenu&&j.get_contextMenu()!=null){this._onAppointmentContextMenu(l);
}else{this._editAppointmentInline(j,k);
}},_selectAppointment:function(k,l){var j=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
this._clearAppointmentSelection();
if($telerik.isTouchDevice&&j){a(l).find(".rsAptResize").css("visibility","visible");
}k._selected=true;
this._toggleAppointmentElementSelectedClass(l,true);
this._lastSelectedApt=k;
},_clearAppointmentSelection:function(){if(this._lastSelectedApt){var k=this._lastSelectedApt.get_elements(),j;
this._lastSelectedApt._selected=false;
for(var m=0,n=k.length;
m<n;
m++){j=k[m];
this._toggleAppointmentElementSelectedClass(j,false);
if($telerik.isTouchDevice){a(j).find(".rsAptResize").css("visibility","");
}}this._lastSelectedApt=null;
}},_toggleAppointmentElementSelectedClass:function(j,k){a(j).toggleClass("rsAptSelected",k);
if(this.get_selectedView()==c.SchedulerViewType.AgendaView){a(j).parents("tr.rsAgendaRow").first().toggleClass("rsAgendaRowSelected",k);
}},_startDrag:function(n){var p=$telerik.getTouchEventLocation(n,"client"),q=this.get_activeModel(),j=this._initialDragAppointment,k=this._initialDragAppointmentElement,o=this._getCellFromCoordinates(p.x,p.y);
if(!o){return;
}this._initialDragCell=o;
var r=new c.SchedulerAppointmentMoveStartEventArgs(j);
this.raiseEvent("appointmentMoveStart",r);
if(r.get_cancel()){return;
}this._draggingAppointment=j;
this._draggingAppointmentHeight=a(k).height();
this._draggingAppointmentWidth=a(k).width();
this._dragging=true;
var l;
if($telerik.isTouchDevice){l=a(k).offset();
l={x:l.left,y:l.top};
}else{l=$telerik.getLocation(k);
}if($telerik.isFirefox||$telerik.isSafari){var s=$telerik.getScrollOffset(k,true),m=$telerik.isFirefox?document.body.parentNode:document.body;
l.x-=s.x;
l.y-=s.y;
l.x+=m.scrollLeft;
l.y+=m.scrollTop;
}this._draggingSourceRowOffset=q._getSourceRowOffsetOfMovedAppointment(k,o);
this._draggingSourceCellOffset=q._getSourceCellOffsetOfMovedAppointment(k,o);
j._startDrag(o);
},_endDrag:function(j){this._finishDrag(j,false);
},_onDocMouseUp:function(j){this._finishDrag(j,false);
this._contextMenuInterval.reset();
},_abortDrag:function(k,j){this._finishDrag(k,true,j);
},_finishDrag:function(m,l,j){clearInterval(this._scrollInterval);
this._finishDragExecuting=true;
if(this._dragHandlersAttached){$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
if($telerik.isTouchDevice){a(".rsContent",this._element).off("touchend").off("touchmove");
}else{$telerik.removeHandler(document,"mouseup",this._onDocMouseUpDelegate);
$telerik.removeHandler(document,"mousemove",this._onDocumentMouseMoveDelegate);
}this._dragHandlersAttached=false;
}if(this._contentTouchScroll){this._contentTouchScroll.enable();
}if(this._dragging){var k=this._initialDragAppointmentElement;
this._clearElementZIndex(k.parentNode);
if(!l&&k.parentNode&&k.parentNode.parentNode){this._draggingAppointment._finishDrag();
}else{a(k).height(this._draggingAppointmentHeight).width(this._draggingAppointmentWidth);
this._draggingAppointment._abortDrag();
this._draggingAppointment._raiseMoveEnd(j);
}var n=this;
window.setTimeout(function(){n._draggingAppointment=null;
n._dragging=false;
n._draggingHoveredCell=null;
n._draggingSourceCellOffset=0;
n._draggingSourceRowOffset=0;
},0);
Sys.UI.DomElement.removeCssClass(k.parentNode,this._styles.dragTarget);
if(this._isInTimelineViewNotGroupedByDate()&&!a(k.parentNode).parent().hasClass("rsFirstCell")){a(k.parentNode).remove();
}m.preventDefault();
m.stopPropagation();
}this._finishDragExecuting=false;
},_onAppointmentDoubleClick:function(m){if(this._resizingState.resizing){this._resizingState.resizing=false;
m.stopPropagation();
return;
}c.RadScheduler._clearSelection();
var k=this.getAppointmentDomElement(m.eventMapTarget),j=this.getAppointmentFromDomElement(k),l=new c.SchedulerAppointmentDoubleClickEventArgs(j);
this._raiseAppointmentDoubleClick(l);
this._editAppointmentInline(j,k);
$telerik.cancelRawEvent(m);
return false;
},_editAppointmentInline:function(k,l){if(this.get_readOnlyResolved()||!k){return;
}var j=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
if(!j){return;
}var m={OnConfirm:this._onAppointmentEditCallback,OnCancel:this._onAppointmentEditAbortCallback,Scheduler:this,Appointment:k,AppointmentElement:l,CallbackIsCalledFromDialog:true};
this._showEditConfirmationDialog(m);
},_showEditConfirmationDialog:function(k){var j=k.Appointment._recurrenceState;
if(j==1||j==2||j==3){var m=new c.SchedulerRecurrenceActionDialogShowingEventArgs(k.Appointment,c.RecurrenceAction.Edit);
this._raiseRecurrenceActionDialogShowing(m);
if(m.get_cancel()){var l=m.get_editSeries();
if(l!==null){k.CallbackIsCalledFromDialog=false;
k.OnConfirm(l,k);
}}else{c.RecurrenceActionDialog.Show(c.RecurrenceAction.Edit,k);
}}else{k.CallbackIsCalledFromDialog=false;
k.OnConfirm(false,k);
}},_onAppointmentEditCallback:function(m,l){var o=l.Scheduler,j=l.Appointment,k=l.AppointmentElement,n;
o._raiseRecurrenceActionDialogClosedEvent(l,m,c.RecurrenceAction.Edit);
n=new c.SchedulerAppointmentEditingEventArgs(j,m);
o._raiseAppointmentEditing(n);
if(!n.get_cancel()){o.showInlineEditForm(j,m,k);
}},_onAppointmentEditAbortCallback:function(j){j.Scheduler._raiseRecurrenceActionDialogClosedEvent(j,false,c.RecurrenceAction.Edit);
},_raiseRecurrenceActionDialogClosedEvent:function(j,l,m){if(j.CallbackIsCalledFromDialog){var k=new c.SchedulerRecurrenceActionDialogClosedEventArgs(j.Appointment,m,l);
j.Scheduler._raiseRecurrenceActionDialogClosed(k);
}},_onDateHeaderClick:function(k){$telerik.cancelRawEvent(k);
if(this._renderMode==c.RenderMode.Mobile&&$telerik.isTouchDevice&&this.get_selectedView()==c.SchedulerViewType.MonthView){return;
}var j=this._extractDateFromLink(k.eventMapTarget);
return this._switchToSelectedDay(j);
},_onMonthHeaderClick:function(k){$telerik.cancelRawEvent(k);
var j=this._extractDateFromLink(k.eventMapTarget);
return this._switchToSelectedMonth(j);
},_extractDateFromLink:function(l){var j=new Date();
var k=l.href.match(/#(\d{4}-\d{2}-\d{2})/);
if(k&&k.length==2){var m=a.map(k[1].split("-"),function(n){return parseInt(n,10);
});
j=new Date(m[0],m[1]-1,m[2]);
}return j;
},_onShowMoreClick:function(j){$telerik.cancelRawEvent(j);
var k=this._activeModel.getTimeSlotFromDomElement(j.eventMapTarget);
return this._switchToSelectedDay(k.get_startTime());
},_switchToSelectedDay:function(m){var k=b.getDate(m);
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedDay,k);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this._renderingManager._suppressWebServiceCalls=true;
this._selectDate(k);
this._renderingManager._suppressWebServiceCalls=false;
this.set_selectedView(c.SchedulerViewType.DayView,true);
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedDay));
return;
}var l={Command:"SwitchToSelectedDay",StartDate:k.format("yyyyMMddHHmm")};
this.postback(l);
return false;
},_switchToSelectedMonth:function(m){var k=b.getDate(m);
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedMonth,k);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this._renderingManager._suppressWebServiceCalls=true;
this._selectDate(k);
this._renderingManager._suppressWebServiceCalls=false;
this.set_selectedView(c.SchedulerViewType.MonthView,true);
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedMonth));
return;
}var l={Command:"SwitchToSelectedMonth",StartDate:k.format("yyyyMMddHHmm")};
this.postback(l);
return false;
},_onAppointmentMouseOver:function(n){if(this._resizingState.resizing||this._dragging||$telerik.isTouchDevice||$telerik.isMobileIE10){n.stopPropagation();
return;
}var l=this.getAppointmentDomElement(n.eventMapTarget);
var k=this.getAppointmentFromDomElement(l);
var j=(k._allowDelete!=null)?k.get_allowDelete():this.get_allowDelete();
if(!j){return;
}this._hoveredAppointmentElement=l;
var m=$telerik.getElementByClassName(l,"rsAptDelete","a");
if(m){m.style.visibility="visible";
}if(this.get_selectedView()==c.SchedulerViewType.AgendaView){a(l).parents("tr.rsAgendaRow").first().addClass("rsAgendaRowHovered");
}},_onAppointmentMouseOut:function(l){var m=l.rawEvent.relatedTarget?l.rawEvent.relatedTarget:l.rawEvent.toElement;
if(!m||$telerik.isTouchDevice||$telerik.isMobileIE10){return;
}if($telerik.isDescendant(this._hoveredAppointmentElement,m)){return;
}var j=this.getAppointmentDomElement(l.eventMapTarget);
var k=$telerik.getElementByClassName(j,"rsAptDelete","a");
if(k){k.style.visibility="hidden";
}if(this.get_selectedView()==c.SchedulerViewType.AgendaView){a(j).parents("tr.rsAgendaRow").first().removeClass("rsAgendaRowHovered");
}},_onCellClick:function(j){if(j.target.tagName.toUpperCase()=="TBODY"){return;
}var l=this._activeModel.getTimeSlotFromDomElement(j.target);
if(!l){return;
}var k=new c.SchedulerTimeSlotClickEventArgs(l.get_startTime(),l,j);
this._raiseTimeSlotClick(k);
},_onCellContextMenu:function(m){this._timeSlotTapped=false;
var w=this._activeModel.getTimeSlotFromDomElement(m.target),y=this._activeModel.get_supportsSlotSelection(),q=this._renderMode==c.RenderMode.Mobile&&$telerik.isTouchDevice;
if(!w){return;
}var v=this._rowSelectionState;
if(y){var t=false;
var p;
for(p=0;
p<v.selectedSlots.length;
p++){if(b.areEqual(v.selectedSlots[p].get_startTime(),w.get_startTime())){t=(v.selectedSlots[0].get_rawIndex().modelIndex==w.get_rawIndex().modelIndex);
break;
}}if(!t){this._clearSlotSelection();
v.rowSelectionStartSlot=w;
w.set_selected(true);
var s=((this.get_selectedView()==c.SchedulerViewType.WeekView)&&this._activeModel._getNextTimeSlot(w)&&!(b.areEqual(this._activeModel._getNextTimeSlot(w).get_startTime(),w.get_endTime())));
var u=(w.get_isAllDay()||s)?1:this._numberOfHoveredRows;
var r=w;
for(p=0;
p<u-1;
p++){r=this._activeModel._getNextTimeSlot(r);
if(r){r.set_selected(true);
}}v.rowSelectionEndSlot=(r)?r:w;
this._updateRowSelection();
}}var x=v.rowSelectionStartSlot||w;
var n=v.rowSelectionEndSlot||w;
var o=new c.SchedulerTimeSlotContextMenuEventArgs(w.get_startTime(),w.get_isAllDay(),m,w,x,n);
this._raiseTimeSlotContextMenu(o);
var z=null;
if(this.get_timeSlotContextMenus){z=this.get_timeSlotContextMenus()[0];
}if(z!=null){var j=z.findItemByValue("CommandAddAppointment");
var k=z.findItemByValue("CommandAddRecurringAppointment");
var l=!this.get_readOnlyResolved()&&this.get_allowInsert();
if(j!=null){j.set_enabled(l);
}if(k!=null){k.set_enabled(l);
}}else{if(q){this._onCellDoubleClick(m);
}}},_onCellDoubleClick:function(j){if(!this.get_readOnlyResolved()&&this.get_allowInsert()){var l=this._activeModel.getTimeSlotFromDomElement(j.target);
var k=new c.SchedulerAppointmentInsertingEventArgs(l.get_startTime(),l.get_isAllDay(),l);
this._raiseAppointmentInserting(k);
if(!k.get_cancel()){this.showInsertFormAt(l);
}}return false;
},_onAppointmentDeleteClick:function(k){if(!this.get_readOnlyResolved()){var j=this.getAppointmentFromDomElement(k.eventMapTarget);
this._deleteAppointment(j);
}k.preventDefault();
},_inlineFormDeleteClicked:function(l){var k=l.get_appointmentInternalID(),j=this._getAppointmentByInternalID(k);
if(this._renderingManager&&l._editSeries&&j._recurrenceState!=1){j=this.get_appointments().findByID(j.get_recurrenceParentID());
}this._showDeleteConfirmationForAppointment(j,l._editSeries);
},_formDeleteLinkClicked:function(k){var j={OnConfirm:function(n,m){setTimeout(function(){eval(m.deleteLinkHref.replace(/%20/g," "));
},10);
},deleteLinkHref:k._deleteLinkHref},l=k._confirmDialogTarget||"rsTopWrap";
this._showDeleteAppointmentConfirmationDialog(j,false,l);
},_getAppointmentByInternalID:function(k){var j=this.get_appointments().find(function(l){return l.get_internalID()==k;
});
return j;
},_showDeleteConfirmationForAppointment:function(j,l){var k={OnConfirm:this._onAppointmentDeleteCallback,OnCancel:this._onAppointmentDeleteAbortCallback,Scheduler:this,Appointment:j,CallbackIsCalledFromDialog:true};
this._showDeleteAppointmentConfirmationDialog(k,l,"rsTopWrap");
},_deleteAppointment:function(j){if(!j){return;
}var k={OnConfirm:this._onAppointmentDeleteCallback,OnCancel:this._onAppointmentDeleteAbortCallback,Scheduler:this,Appointment:j,CallbackIsCalledFromDialog:true};
this._showDeleteConfirmationDialog(k);
},_showDeleteConfirmationDialog:function(k){var j=k.Appointment._recurrenceState;
if(j!=0){this._showDeleteRecurringAppointmentConfirmationDialog(k);
}else{this._showDeleteAppointmentConfirmationDialog(k,false,"rsTopWrap");
}},_showDeleteRecurringAppointmentConfirmationDialog:function(j){var l=new c.SchedulerRecurrenceActionDialogShowingEventArgs(j.Appointment,c.RecurrenceAction.Delete);
this._raiseRecurrenceActionDialogShowing(l);
if(l.get_cancel()){var k=l.get_editSeries();
if(k!==null){j.CallbackIsCalledFromDialog=false;
j.OnConfirm(k,j);
}}else{c.RecurrenceActionDialog.Show(c.RecurrenceAction.Delete,j);
}},_showDeleteAppointmentConfirmationDialog:function(j,l,n){if(this.get_displayDeleteConfirmation()){var m=this.get_localization(),k=$telerik.$.modal("#"+this.get_element().id+">."+n,this._renderMode);
k.initialize().set_content({title:m.ConfirmDeleteTitle,content:m.ConfirmDeleteText,ok:m.ConfirmOK,cancel:m.ConfirmCancel}).set_onActionConfirm(function(){j.OnConfirm(l,j);
k.hide();
}).show();
}else{j.CallbackIsCalledFromDialog=false;
j.OnConfirm(l,j);
}},_onAppointmentDeleteCallback:function(k,j){j.Scheduler._raiseRecurrenceActionDialogClosedEvent(j,k,c.RecurrenceAction.Delete);
var l=new c.SchedulerAppointmentDeletingEventArgs(j.Appointment,k);
j.Scheduler._raiseAppointmentDeleting(l);
if(!l.get_cancel()){j.Scheduler.deleteAppointment(j.Appointment,k);
}},_onAppointmentDeleteAbortCallback:function(j){j.Scheduler._raiseRecurrenceActionDialogClosedEvent(j,false,c.RecurrenceAction.Delete);
},_onPreviousDayClick:function(m){m.stopPropagation();
m.preventDefault();
var l=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.DisplayPreviousAppointmentSegment);
this.raiseEvent("navigationCommand",l);
if(l.get_cancel()){return;
}var k=this.getAppointmentFromDomElement(m.eventMapTarget),j=this.get_activeModel();
if(this._renderingManager){if(j.get_supportsFullTime()&&!this.get_showFullTime()&&!j._isVertical){this.set_showFullTime(true);
}else{if(k.get_start()<j.get_visibleRangeStart()){this._selectDate(j.get_previousPeriodDate());
}else{this._navigating=false;
}}return;
}if(k){var n={Command:"GoToPrevious",AppointmentID:k._internalID};
this.postback(n);
}},_onNextDayClick:function(m){m.stopPropagation();
m.preventDefault();
var l=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.DisplayNextAppointmentSegment);
this.raiseEvent("navigationCommand",l);
if(l.get_cancel()){return;
}var k=this.getAppointmentFromDomElement(m.eventMapTarget),j=this.get_activeModel();
if(this._renderingManager){if(j.get_supportsFullTime()&&!this.get_showFullTime()&&!j._isVertical){this.set_showFullTime(true);
}else{if(k.get_end()>j.get_visibleRangeEnd()){this._selectDate(j.get_nextPeriodDate());
}else{this._navigating=false;
}}return;
}if(k){var n={Command:"GoToNext",AppointmentID:k._internalID};
this.postback(n);
}},_onAddAppointmentClick:function(j){var k=this._rowSelectionState,l;
if(k.selectedSlots.length==0){l=this._activeModel._getFirstTimeSlot();
if(l&&l.set_selected){l.set_selected(true);
k.rowSelectionStartSlot=l;
k.isRowSelection=true;
k.selectedSlots.push(l);
}}this._insertAppoinmentAtSelectedSlots();
},_onViewToggleClick:function(k){var j=a(this.get_element()).find(".rsToolbar .rsViewSwitcher>ul");
if(j.length==0){return;
}j.toggleClass("rsHidden",!j.hasClass("rsHidden"));
},_onDayViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToDayView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.DayView);
return;
}this.postback({Command:"SwitchToDayView"});
},_onWeekViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToWeekView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.WeekView);
return;
}var l={Command:"SwitchToWeekView"};
this.postback(l);
},_onMonthViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToMonthView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.MonthView);
return;
}var l={Command:"SwitchToMonthView"};
this.postback(l);
},_onTimelineViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToTimelineView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.TimelineView);
return;
}var l={Command:"SwitchToTimelineView"};
this.postback(l);
},_onMultiDayViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToMultiDayView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.MultiDayView);
return;
}var l={Command:"SwitchToMultiDayView"};
this.postback(l);
},_onAgendaViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToAgendaView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.AgendaView);
return;
}var l={Command:"SwitchToAgendaView"};
this.postback(l);
},_onYearViewTabClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToYearView);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(c.SchedulerViewType.YearView);
return;
}var l={Command:"SwitchToYearView"};
this.postback(l);
},_onPreviousSchedulerDayClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.NavigateToPreviousPeriod);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this._selectDate(this._activeModel.get_previousPeriodDate());
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.NavigateToPreviousPeriod));
return;
}var l={Command:"NavigateToPreviousPeriod"};
this.postback(l);
},_onNextSchedulerDayClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.NavigateToNextPeriod);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this._selectDate(this._activeModel.get_nextPeriodDate());
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.NavigateToNextPeriod));
return;
}var l={Command:"NavigateToNextPeriod"};
this.postback(l);
},_onTodayClick:function(k){k.preventDefault();
var m=b.getDate(new Date());
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedDay,m);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){this._selectDate(m);
this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.SwitchToSelectedDay));
return;
}var l={Command:"GoToToday"};
this.postback(l);
},_onFullTimeLinkClick:function(k){k.preventDefault();
var j=new d.NavigationCommandEventArgs(c.SchedulerNavigationCommand.SwitchFullTime);
this.raiseEvent("navigationCommand",j);
if(j.get_cancel()){return;
}if(this._renderingManager){if(!this.get_activeModel()._isVertical){this.set_showFullTime(!this.get_showFullTime());
}this.raiseEvent("navigationComplete",new d.NavigationCompleteEventArgs(c.SchedulerNavigationCommand.SwitchFullTime));
return;
}var l={Command:"SwitchFullTime"};
this.postback(l);
},_selectDate:function(j){this.set_selectedDate(j);
this._preventCalendarNavigate=true;
$find(this.get_element().id+"_SelectedDateCalendar").selectDate([j.getFullYear(),j.getMonth()+1,j.getDate()],true);
this._preventCalendarNavigate=false;
},postback:function(j){this._onContentScroll();
var k=this.get_postBackReference().replace("arguments",Sys.Serialization.JavaScriptSerializer.serialize(j));
eval(k);
},_getElementIndex:function(k,j){if(!k){return;
}for(var l=0;
l<k.length;
l++){if(k[l]===j){return l;
}}return -1;
},_getInlineTemplate:function(){if(!this._inlineTemplate){this._inlineTemplate=this._createInlineTemplate();
var o=a("#"+this.get_element().id+" .rsAptEditSizingWrapper");
if(o.length){this._inlineTemplate.attachTo(o[0]);
if(this.get_selectedView()==c.SchedulerViewType.AgendaView&&this._inlineTemplate._setWrapDimentions){this._inlineTemplate._setWrapDimentions(o.parent(),o.parent().parent());
}var l=Function.createDelegate(this,this._formDeleteLinkClicked);
this._inlineTemplate.add_deleteClicked(l);
}else{var j=Function.createDelegate(this,this._inlineFormDeleteClicked);
this._inlineTemplate.add_deleteClicked(j);
}var n=Function.createDelegate(this,this._inlineFormSaveClicked);
this._inlineTemplate.add_saveClicked(n);
var m=Function.createDelegate(this,this._inlineFormMoreClicked);
this._inlineTemplate.add_moreClicked(m);
var k=Function.createDelegate(this,this._inlineFormKeyDown);
this._inlineTemplate.add_keyDown(k);
}return this._inlineTemplate;
},_createInlineTemplate:function(){var j=this.get_element(),l=this.get_localization(),k=this._advancedFormSettings.enabled,n=this.get_minimumInlineFormWidth(),m=this.get_minimumInlineFormHeight();
if(this._renderMode===c.RenderMode.Mobile){return new c.InlineTemplateNative(j,l,k,n,m);
}if(this._renderMode===c.RenderMode.Lite){return new c.InlineTemplateLite(j,l,k,n,m);
}return new c.InlineTemplate(j,l,k,n,m);
},_createAdvancedTemplate:function(l,j,k){return new c.Scheduling.AdvancedTemplate(l,j,k);
},_inlineFormSaveClicked:function(k){var j=this._extractAppointmentFromInlineTemplate(k);
if(k.get_isInsert()){this.insertAppointment(j);
}else{this.updateAppointment(j,k.get_editSeries());
}},_inlineFormMoreClicked:function(k){var j=this._extractAppointmentFromInlineTemplate(k);
if(k.get_isInsert()){this._showAdvancedInsertForm(j);
}else{this.showAdvancedEditForm(j,k.get_editSeries());
}},_inlineFormKeyDown:function(k,j){if(j.keyCode==13&&(this.get_selectedSlots().length>0)){if(j.preventDefault){j.preventDefault();
}if(j.stopPropagation){j.stopPropagation();
}}},_extractAppointmentFromInlineTemplate:function(l){var m=l.get_element();
if(m.originalParent){m=m.originalParent;
}var j=new c.SchedulerAppointment();
j._internalID=l.get_appointmentInternalID();
if(l.get_isInsert()){var n=this._activeModel.getTimeSlotFromDomElement(m);
if(n.get_resource){j.get_resources().add(n.get_resource());
}}else{var k=this.get_appointments().find(function(o){return o.get_internalID()==j.get_internalID();
});
if(this._renderingManager){j=this.prepareToEdit(k,l.get_editSeries());
j.set_subject(l.get_text());
return j;
}else{k.get_resources().forEach(function(o){j.get_resources().add(o);
});
}}j.set_subject(l.get_text());
j.set_start(l.get_start());
j.set_end(l.get_end());
j.set_timeZoneID(this._timeZoneId);
return j;
},_showAdvancedInsertForm:function(j,k,o){if(this._renderingManager){this._showAdvancedFormWrapper(a(this.get_element()).find("div.rsAdvancedInsertWrapper"));
this._advancedTemplate=this._getAdvancedInsertTemplate();
this._fireFormCreated(j,c.SchedulerFormMode.AdvancedInsert);
if(this._advancedTemplate){this._advancedTemplate.populate(j,true);
}if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormShown",this._advancedTemplate);
}this._focusAdvancedFormSubjectTextBox();
return;
}var l=null;
var n=this.get_selectedSlots().length;
if(n>0){l=this.get_selectedSlots()[n-1].get_index();
}var m={command:"AdvancedInsert",appointment:this._getSerializableAppointment(j),startDate:j.get_start().format("yyyyMMddHHmm"),endDate:j.get_end().format("yyyyMMddHHmm"),lastSlotIndex:l};
if(k){m.command="AdvancedInsertRecurring";
m.targetSlotIndex=o.get_index();
}this.postback(m);
},_getAdvancedInsertTemplate:function(){if(!this._advancedInsertTemplate&&this._useDefaultAdvancedInsert){var l=this.get_element(),j=a(l),k=j.find("div.rsAdvancedInsertWrapper div.rsAdvancedEdit"),m=this.get_advancedFormSettings().modal;
this._advancedInsertTemplate=this._createAdvancedTemplate(l,k,m);
this._advancedInsertTemplate.initialize();
}return this._advancedInsertTemplate;
},_getAdvancedEditTemplate:function(){if(!this._advancedEditTemplate&&this._useDefaultAdvancedEdit){var l=this.get_element(),j=a(l),k=j.find("div.rsAdvancedEditWrapper div.rsAdvancedEdit"),m=this.get_advancedFormSettings().modal;
this._advancedEditTemplate=this._createAdvancedTemplate(l,k,m);
this._advancedEditTemplate.initialize();
}return this._advancedEditTemplate;
},_showAdvancedFormWrapper:function(k){if(k.parent().is(".RadScheduler")){return;
}this.hideInlineForm();
this.hideAdvancedForm();
var l=this.get_element(),j=a(l);
j.append(k);
if(this._advancedFormSettings.modal){k.css("position","static");
this._makeModal(k.find("div.rsAdvancedEdit")[0]);
}else{j.find("div.rsTopWrap").hide();
}},_focusAdvancedFormSubjectTextBox:function(){var j=a(this.get_element()).find(".rsAdvancedEdit .riTextBox, .rsAdvancedInsert .riTextBox").filter(":visible").filter(":first")[0];
if(j){j.focus();
}},_makeModal:function(m){if(!this._advancedFormSettings.modal){return;
}var l=this.get_element(),j=a(l),k=a(m);
m.id=l.id+"formElement";
this._popupDialog=a.popupDialog(m,k.find(".rsAdvInnerTitle")[0],this._advancedFormSettings);
if(this._advancedFormSettings&&k.hasClass("rsAdvancedEdit")&&!k.hasClass("rsAdvancedModal")){k.addClass("rsAdvancedModal");
}j.find(".rsAdvFormWrap").css({display:"block"});
this._popupDialog.show();
},_getModelFactory:function(j){switch(j){case c.SchedulerViewType.DayView:return new c.Scheduler.DayModelFactory(this);
case c.SchedulerViewType.WeekView:return new c.Scheduler.WeekModelFactory(this);
case c.SchedulerViewType.MonthView:return new c.Scheduler.MonthModelFactory(this);
case c.SchedulerViewType.TimelineView:return new c.Scheduler.TimelineModelFactory(this);
case c.SchedulerViewType.MultiDayView:return new c.Scheduler.MultiDayModelFactory(this);
case c.SchedulerViewType.AgendaView:return new c.Scheduler.AgendaModelFactory(this);
case c.SchedulerViewType.YearView:return new c.Scheduler.YearModelFactory(this);
}},_setIndicatorState:function(k){var l=[],j=[];
a.each(k,function(m){l[m]=(this==1||this==3)?1:0;
j[m]=(this==2||this==3)?1:0;
});
this._aptTopIndicators=l;
this._aptBottomIndicators=j;
this._updateHiddenAppointmentsIndicator(this._aptTopIndicators,"top");
this._updateHiddenAppointmentsIndicator(this._aptBottomIndicators,"bottom");
},_updateHiddenAppointmentsIndicator:function(l,m){var j=m=="top"?"rsTopIndicator":"rsBottomIndicator";
this._removeIndicatorsTable(j);
for(var k=0;
k<l.length;
k++){if(l[k]>0){this._createIndicatorsTable(l,j);
return;
}}},_createIndicatorsTable:function(p,k){var j=a(this.get_element()).find(".rsTopWrap .rsContentScrollArea"),l=new Telerik.Web.StringBuilder(),q;
l.append("<table class='rsArrowContainer ").append(k).append("'><tr>");
for(var m=0;
m<p.length;
m++){l.append("<td>");
if(p[m]>0){l.append("<div class='rsArrowWrap'><a class='rsOvertimeArrow' href='#' /></div>");
}l.append("</td>");
}l.append("</tr></table>");
q=a(l.toString()).width(j.find(".rsContentTable").width());
if(this._renderMode==c.RenderMode.Lite){var o=k==="rsTopIndicator"?"Top":"Bottom";
var n='<span class="rsIcon rsIconArrow'+o+'"></span>';
q.find(".rsOvertimeArrow").append(n);
}j.append(q);
},_removeIndicatorsTable:function(j){a(this.get_element()).find(".rsTopWrap .rsContentScrollArea table."+j).remove();
},_doCallback:function(j,k){var l=Function.createDelegate(this,this._onCallbackResponse);
var m=Function.createDelegate(this,this._onCallbackError);
WebForm_DoCallback(this._uniqueId,j,l,k,m,true);
},_extractErrorMessage:function(j){if(j.get_message){return j.get_message();
}else{return j.replace(/(\d*\|.*)/,"");
}},_onCallbackError:function(k,j){var l=this._extractErrorMessage(k);
throw new Error(l);
},_onCallbackResponse:function(m,k){if(m==="OK"){return;
}var l=Sys.Serialization.JavaScriptSerializer.deserialize(m);
var j=[];
var n=this;
a.each(l,function(){var o=new c.SchedulerAppointment(this,n);
j.push(o);
});
this._populateAppointmentsTooltip(j);
},_populateAppointmentsTooltip:function(j){var l=this._tooltipSlotResource;
var k;
if(l){k=a.grep(j,function(m,n){return m.get_resources().getResourceByTypeAndKey(l.get_type(),l.get_key())!==null;
});
}else{k=j;
}this._appointmentsTooltip.show().populate(k).position();
},_initializeAppointmentsTooltip:function(){var l=this;
var j=this._appointmentsToolTipDelay;
var m=this._appointmentsTooltip=new c.AppointmentsTooltip(a(this.get_element()).find(".rsYearMonthsWrap")[0]);
var k=function(){l._hideAppointmentsTooltipTimer=setTimeout(function(){m.hide();
},j);
};
m.on({mouseenter:function(){clearTimeout(l._hideAppointmentsTooltipTimer);
},mouseleave:k},m);
a(this.get_element()).find(".rsYearView").on("mouseenter",".rsOccupiedSlot",function(o){var n=this;
l._appointmentsTooltipTimer=setTimeout(function(){var q=l.get_activeModel();
var r=q.getTimeSlotFromDomElement(n);
l._tooltipSlotResource=r.get_resource?r.get_resource():null;
if(l._renderingManager){l._renderingManager.loadAppointmentsInRange(r.get_startTime(),r.get_endTime());
}else{var p={Command:"GetSlotAppointments",Start:r.get_startTime().format("yyyyMMddHHmm"),End:r.get_endTime().format("yyyyMMddHHmm")};
l._doCallback(Sys.Serialization.JavaScriptSerializer.serialize([p]),l);
}m._anchor=n;
},j);
}).on("mouseleave",".rsOccupiedSlot",function(n){clearTimeout(l._appointmentsTooltipTimer);
k();
});
},_disposeAppointmentsTooltip:function(){if(this._appointmentsTooltip){this._appointmentsTooltip.dispose();
clearTimeout(this._appointmentsTooltipTimer);
}this._appointmentsTooltip=null;
a(this.get_element()).find(".rsYearView").off();
},_raiseDataBound:function(){this.raiseEvent("dataBound",Sys.EventArgs.Empty);
},_raiseAppointmentCreated:function(j){this.raiseEvent("appointmentCreated",new c.AppointmentEventArgs(j));
},_raiseAppointmentDataBound:function(j){this.raiseEvent("appointmentDataBound",j);
},_raiseAppointmentInserting:function(j){this.raiseEvent("appointmentInserting",j);
},_raiseAppointmentEditing:function(j){this.raiseEvent("appointmentEditing",j);
},_raiseAppointmentDeleting:function(j){this.raiseEvent("appointmentDeleting",j);
},_raiseAppointmentClick:function(j){this.raiseEvent("appointmentClick",j);
},_raiseAppointmentDoubleClick:function(j){this.raiseEvent("appointmentDoubleClick",j);
},_raiseAppointmentResizeStart:function(j){this.raiseEvent("appointmentResizeStart",j);
},_raiseAppointmentResizing:function(j){this.raiseEvent("appointmentResizing",j);
},_raiseAppointmentResizeEnd:function(j){this.raiseEvent("appointmentResizeEnd",j);
},_raiseAppointmentContextMenu:function(j){this.raiseEvent("appointmentContextMenu",j);
},_raiseAppointmentWebServiceInserting:function(j){this.raiseEvent("appointmentWebServiceInserting",j);
},_raiseAppointmentWebServiceUpdating:function(j){this.raiseEvent("appointmentWebServiceUpdating",j);
},_raiseAppointmentWebServiceDeleting:function(j){this.raiseEvent("appointmentWebServiceDeleting",j);
},_raiseAppointmentsPopulating:function(j){this.raiseEvent("appointmentsPopulating",j);
},_raiseAppointmentsPopulated:function(){this.raiseEvent("appointmentsPopulated",Sys.EventArgs.Empty);
},_raiseTimeSlotClick:function(j){this.raiseEvent("timeSlotClick",j);
},_raiseTimeSlotContextMenu:function(j){this.raiseEvent("timeSlotContextMenu",j);
},_raiseFormCreated:function(j){this.raiseEvent("formCreated",j);
},_raiseRecurrenceExceptionCreating:function(j){this.raiseEvent("recurrenceExceptionCreating",j);
},_raiseRecurrenceExceptionsRemoving:function(j){this.raiseEvent("recurrenceExceptionsRemoving",j);
},_raiseRecurrenceActionDialogShowing:function(j){this.raiseEvent("recurrenceActionDialogShowing",j);
},_raiseRecurrenceActionDialogClosed:function(j){this.raiseEvent("recurrenceActionDialogClosed",j);
},_raiseResourcesPopulating:function(j){this.raiseEvent("resourcesPopulating",j);
},_raiseResourcesPopulated:function(){this.raiseEvent("resourcesPopulated",Sys.EventArgs.Empty);
},_raiseRequestSuccess:function(j){this.raiseEvent("requestSuccess",j);
},_raiseRequestFailed:function(j){this.raiseEvent("requestFailed",j);
}};
a.registerControlProperties(c.RadScheduler,{shouldPostbackOnAppointmentContextMenuItemClick:false,shouldPostbackOnTimeSlotContextMenuItemClick:false,appointmentContextMenuIDs:[],timeSlotContextMenuIDs:[]});
a.registerControlEvents(c.RadScheduler,["dataBound","appointmentCreated","appointmentDataBound","appointmentInserting","appointmentEditing","appointmentDeleting","appointmentClick","appointmentDoubleClick","appointmentResizeStart","appointmentResizing","appointmentResizeEnd","appointmentMoveStart","appointmentMoving","appointmentMoveEnd","appointmentSerialized","appointmentContextMenu","appointmentContextMenuItemClicking","appointmentContextMenuItemClicked","appointmentWebServiceInserting","appointmentWebServiceUpdating","appointmentWebServiceDeleting","appointmentsPopulating","appointmentsPopulated","timeSlotClick","timeSlotContextMenu","timeSlotContextMenuItemClicking","timeSlotContextMenuItemClicked","formCreated","recurrenceExceptionCreating","recurrenceExceptionsRemoving","recurrenceActionDialogShowing","recurrenceActionDialogClosed","reminderTriggering","reminderSnoozing","reminderDismissing","resourcesPopulating","resourcesPopulated","requestSuccess","requestFailed","navigationCommand","navigationComplete"]);
c.RadScheduler.registerClass("Telerik.Web.UI.RadScheduler",c.RadWebControl);
})();
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.RecurrenceAction=function(){};
Telerik.Web.UI.RecurrenceAction.prototype={Edit:1,Delete:2,Resize:3,Move:4};
Telerik.Web.UI.RecurrenceAction.registerEnum("Telerik.Web.UI.RecurrenceAction");
(function(a,b){b.RecurrenceActionDialog=function(){};
b.RecurrenceActionDialog.Show=function(f,c){var g=c.Scheduler.get_localization(),h="",i="",j="";
switch(f){case b.RecurrenceAction.Delete:h=g.ConfirmRecurrenceDeleteOccurrence;
i=g.ConfirmRecurrenceDeleteSeries;
j=g.ConfirmRecurrenceDeleteTitle;
break;
case b.RecurrenceAction.Edit:h=g.ConfirmRecurrenceEditOccurrence;
i=g.ConfirmRecurrenceEditSeries;
j=g.ConfirmRecurrenceEditTitle;
break;
case b.RecurrenceAction.Resize:h=g.ConfirmRecurrenceResizeOccurrence;
i=g.ConfirmRecurrenceResizeSeries;
j=g.ConfirmRecurrenceResizeTitle;
break;
case b.RecurrenceAction.Move:h=g.ConfirmRecurrenceMoveOccurrence;
i=g.ConfirmRecurrenceMoveSeries;
j=g.ConfirmRecurrenceMoveTitle;
break;
}var e=a.modal("#"+c.Scheduler.get_element().id+">.rsTopWrap",c.Scheduler._renderMode);
var d=['<label><input type="radio" id="choiceOccurrenceSpan_0" name="choiceOccurrenceSpan" value="occurrence" checked="checked" />',h,"</label>",'<label><input type="radio" id="choiceOccurrenceSpan_1" name="choiceOccurrenceSpan" value="series" />',i,"</label>"];
e.initialize().set_content({title:j,content:d.join(""),ok:g.ConfirmOK,cancel:g.ConfirmCancel}).set_onActionConfirm(function(l,k){var m=a(e.get_element()).find("input[name=choiceOccurrenceSpan]:checked").val()=="series";
c.OnConfirm(m,c);
e.dispose();
}).set_onActionCancel(function(){if(c.OnCancel){c.OnCancel(c);
}e.dispose();
}).show();
};
})($telerik.$,Telerik.Web.UI);
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.SchedulerResource=function(a){this._attributes=new Telerik.Web.UI.SchedulerAttributeCollection(this);
if(a){this._key=a.key;
this._type=a.type;
this._text=a.text;
this._internalKey=a.internalKey;
this._available=a.available;
this._cssClass=a.cssClass;
if(typeof(a.attributes)!="undefined"){this._attributes._load(a.attributes);
}}};
Telerik.Web.UI.SchedulerResource.prototype={get_key:function(){return this._key;
},set_key:function(a){this._key=a;
},get_type:function(){return this._type;
},set_type:function(a){this._type=a;
},get_text:function(){return this._text;
},set_text:function(a){this._text=a;
},get_available:function(){return this._available;
},set_available:function(a){this._available=a;
},get_cssClass:function(){return this._cssClass;
},set_cssClass:function(a){this._cssClass=a;
},_getInternalKey:function(){return this._internalKey;
},get_attributes:function(){return this._attributes;
}};
Telerik.Web.UI.SchedulerResource.registerClass("Telerik.Web.UI.SchedulerResource");
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.SchedulerResourceCollection=function(){this._array=[];
};
a.SchedulerResourceCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
},insert:function(b,c){Array.insert(this._array,b,c);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getResource(b);
if(c){this.remove(c);
}},indexOf:function(c){for(var b=0,d=this._array.length;
b<d;
b++){if(this._array[b]===c){return b;
}}return -1;
},removeResourcesByType:function(c){var b=this;
this.getResourcesByType(c).forEach(function(d){b.remove(d);
});
},clear:function(){this._array=[];
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getResource(c));
}},getResource:function(b){return this._array[b];
},getResourcesByType:function(b){return this.findAll(function(c){return c.get_type()==b;
});
},getResourceByType:function(e){for(var c=0,b=this.get_count();
c<b;
c++){var d=this.getResource(c);
if(d.get_type()==e){return d;
}}return null;
},findAll:function(b){var c=new a.SchedulerResourceCollection();
this.forEach(function(d){if(b(d)){c.add(d);
}});
return c;
},getResourceByTypeAndKey:function(c,b){return this.findAll(function(d){return d.get_type()==c&&d.get_key()==b;
}).getResource(0)||null;
},clone:function(){var b=new a.SchedulerResourceCollection();
this.forEach(function(c){b.add(c);
});
return b;
}};
a.SchedulerResourceCollection.registerClass("Telerik.Web.UI.SchedulerResourceCollection");
}());
(function(){Type.registerNamespace("Telerik.Web.UI");
var a=Telerik.Web.UI;
a.ResourceType=function(b){if(b){this._name=b.name;
this._allowMultipleValues=b.allowMultipleValues||false;
}};
a.ResourceType.prototype={get_name:function(){return this._name;
},set_name:function(b){this._name=b;
},get_allowMultipleValues:function(){return this._allowMultipleValues;
},set_allowMultipleValues:function(b){this._allowMultipleValues=b;
}};
a.ResourceType.registerClass("Telerik.Web.UI.ResourceType");
})();
(function(){Type.registerNamespace("Telerik.Web.UI");
var a=Telerik.Web.UI;
a.ResourceTypeCollection=function(){this._array=[];
};
a.ResourceTypeCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
},insert:function(b,c){Array.insert(this._array,b,c);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getResourceType(b);
if(c){this.remove(c);
}},clear:function(){this._array=[];
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getResourceType(c));
}},getResourceType:function(b){return this._array[b];
},getResourceTypeByName:function(b){return this.findAll(function(c){return c.get_name()==b;
}).getResourceType(0)||null;
},findAll:function(b){var c=new a.ResourceTypeCollection();
this.forEach(function(d){if(b(d)){c.add(d);
}});
return c;
}};
a.ResourceTypeCollection.registerClass("Telerik.Web.UI.ResourceTypeCollection");
}());
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.SchedulerAttributeCollection=function(){this._data={};
this._keys=[];
};
a.SchedulerAttributeCollection.prototype={getAttribute:function(b){return this._data[b];
},setAttribute:function(c,d){this._add(c,d);
var b={};
b[c]=d;
},forEach:function(e){for(var c=0,b=this.get_count();
c<b;
c++){var d=this._keys[c];
e(d,this.getAttribute(d));
}},removeAttribute:function(b){Array.remove(this._keys,b);
delete this._data[b];
},get_count:function(){return this._keys.length;
},clear:function(){this._data={};
this._keys=[];
},clone:function(){var b=new a.SchedulerAttributeCollection();
this.forEach(function(c,d){b.setAttribute(c,d);
});
return b;
},_add:function(b,c){if(Array.indexOf(this._keys,b)<0){Array.add(this._keys,b);
}this._data[b]=c;
},_load:function(b){for(var c in b){this._add(c,b[c]);
}}};
a.SchedulerAttributeCollection.registerClass("Telerik.Web.UI.SchedulerAttributeCollection");
}());
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler.Views");
(function(a,b){a.ModelFactory=function(c){this._owner=c;
};
a.ModelFactory.prototype={createModel:function(){throw Error.notImplemented();
},_getGroupBy:function(){throw Error.notImplemented();
},_getGroupByDate:function(){return/^\s*date\s*,\s*/i.test(this._getGroupBy());
},_getGroupingResourceName:function(){var c=this._getGroupBy();
if(c.trim().toLowerCase()=="date"){throw Error.argument("groupBy","groupBy property should be in one of the following formats: <[Resource name]> or <Date,[Resource name]>. Using only <Date> is not allowed. ");
}var d=c.split(",");
if(d.length>2){throw Error.argument("groupBy","GroupBy property should be in one of the following formats: <[Resource name]> or <Date,[Resource name]> ");
}if(this._getGroupByDate()){if(d.length==2){return d[1].trim();
}return"";
}return d[0].trim();
},_getEnableGrouping:function(){return this._getGroupBy()!="";
}};
a.ModelFactory.registerClass("Telerik.Web.UI.Scheduler.ModelFactory");
a.DayModelFactory=function(c){a.DayModelFactory.initializeBase(this,[c]);
};
a.DayModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_dayViewSettings().isVertical||false;
if(this._getGroupByDate()){c=false;
}return new a.ResourceGroupedDayModel(this._owner,this._getGroupingResourceName(),c);
}return new a.DayModel(this._owner);
},_getGroupBy:function(){return this._owner.get_dayViewSettings().groupBy||"";
}};
a.DayModelFactory.registerClass("Telerik.Web.UI.Scheduler.DayModelFactory",a.ModelFactory);
a.WeekModelFactory=function(c){a.WeekModelFactory.initializeBase(this,[c]);
};
a.WeekModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_weekViewSettings().isVertical||false;
if(this._getGroupByDate()){return new a.DateGroupedWeekModel(this._owner,this._getGroupingResourceName(),c);
}else{return new a.ResourceGroupedWeekModel(this._owner,this._getGroupingResourceName(),c);
}}return new a.WeekModel(this._owner);
},_getGroupBy:function(){return this._owner.get_weekViewSettings().groupBy||"";
}};
a.WeekModelFactory.registerClass("Telerik.Web.UI.Scheduler.WeekModelFactory",a.ModelFactory);
a.MultiDayModelFactory=function(c){a.MultiDayModelFactory.initializeBase(this,[c]);
};
a.MultiDayModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_multiDayViewSettings().isVertical||false;
if(this._getGroupByDate()){return new a.DateGroupedMultiDayModel(this._owner,this._getGroupingResourceName(),c);
}else{return new a.ResourceGroupedMultiDayModel(this._owner,this._getGroupingResourceName(),c);
}}return new a.MultiDayModel(this._owner);
},_getGroupBy:function(){return this._owner.get_multiDayViewSettings().groupBy||"";
}};
a.MultiDayModelFactory.registerClass("Telerik.Web.UI.Scheduler.MultiDayModelFactory",a.ModelFactory);
a.MonthModelFactory=function(c){a.MonthModelFactory.initializeBase(this,[c]);
};
a.MonthModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_monthViewSettings().isVertical||false;
if(this._getGroupByDate()){return new b.Month.GroupedByDate.Model(this._owner,this._getGroupingResourceName(),c);
}else{return new b.Month.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Month.Model(this._owner);
},_getGroupBy:function(){return this._owner.get_monthViewSettings().groupBy||"";
}};
a.MonthModelFactory.registerClass("Telerik.Web.UI.Scheduler.MonthModelFactory",a.ModelFactory);
a.TimelineModelFactory=function(c){a.TimelineModelFactory.initializeBase(this,[c]);
};
a.TimelineModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_timelineViewSettings().isVertical||false;
if(this._getGroupByDate()){return new b.Timeline.GroupedByDate.Model(this._owner,this._getGroupingResourceName(),c);
}else{return new b.Timeline.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Timeline.Model(this._owner);
},_getGroupBy:function(){return this._owner.get_timelineViewSettings().groupBy||"";
}};
a.TimelineModelFactory.registerClass("Telerik.Web.UI.Scheduler.TimelineModelFactory",a.ModelFactory);
a.AgendaModelFactory=function(c){a.AgendaModelFactory.initializeBase(this,[c]);
};
a.AgendaModelFactory.prototype={createModel:function(){var c=this._owner.get_agendaViewSettings().isVertical||false;
if(this._getEnableGrouping()){if(this._getGroupByDate()){return new b.Agenda.GroupedByDate.Model(this._owner,this._getGroupingResourceName(),c);
}else{return new b.Agenda.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Agenda.Model(this._owner,c);
},_getGroupBy:function(){return this._owner.get_agendaViewSettings().groupBy||"";
}};
a.AgendaModelFactory.registerClass("Telerik.Web.UI.Scheduler.AgendaModelFactory",a.ModelFactory);
a.YearModelFactory=function(c){a.YearModelFactory.initializeBase(this,[c]);
};
a.YearModelFactory.prototype={createModel:function(){var c=this._owner.get_yearViewSettings().isVertical||false;
if(this._getEnableGrouping()){if(this._getGroupByDate()){throw new Error("Date grouped YearView is not supported");
}else{return new b.Year.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Year.Model(this._owner);
},_getGroupBy:function(){return this._owner.get_yearViewSettings().groupBy||"";
}};
a.YearModelFactory.registerClass("Telerik.Web.UI.Scheduler.YearModelFactory",a.ModelFactory);
})(Telerik.Web.UI.Scheduler,Telerik.Web.UI.Scheduler.Views);
(function(b){var a=Telerik.Web.UI;
a.SchedulerWebServiceSettings=function(c){a.SchedulerWebServiceSettings.initializeBase(this,[c]);
if(!this._method){this._method="GetAppointments";
}if(c.deleteAppointmentMethod!=b){this._deleteAppointmentMethod=c.deleteAppointmentMethod;
}else{this._deleteAppointmentMethod="DeleteAppointment";
}if(c.insertAppointmentMethod!=b){this._insertAppointmentMethod=c.insertAppointmentMethod;
}else{this._insertAppointmentMethod="InsertAppointment";
}if(c.updateAppointmentMethod!=b){this._updateAppointmentMethod=c.updateAppointmentMethod;
}else{this._updateAppointmentMethod="UpdateAppointment";
}if(c.getResourcesMethod!=b){this._getResourcesMethod=c.getResourcesMethod;
}else{this._getResourcesMethod="GetResources";
}if(c.createRecurrenceExceptionMethod!=b){this._createRecurrenceExceptionMethod=c.createRecurrenceExceptionMethod;
}else{this._createRecurrenceExceptionMethod="CreateRecurrenceException";
}if(c.removeRecurrenceExceptionsMethod!=b){this._removeRecurrenceExceptionsMethod=c.removeRecurrenceExceptionsMethod;
}else{this._removeRecurrenceExceptionsMethod="RemoveRecurrenceExceptions";
}if(c.updateMode!=b){this._updateMode=c.updateMode;
}else{this._updateMode=a.AppointmentUpdateMode.Batch;
}if(c.resourcesPopulated!=b){this._resourcesPopulated=c.resourcesPopulated;
}else{this._resourcesPopulated=true;
}};
a.SchedulerWebServiceSettings.prototype={get_getAppointmentsMethod:function(){return this._method;
},set_getAppointmentsMethod:function(c){this._method=c;
},get_deleteAppointmentMethod:function(){return this._deleteAppointmentMethod;
},set_deleteAppointmentMethod:function(c){this._deleteAppointmentMethod=c;
},get_insertAppointmentMethod:function(){return this._insertAppointmentMethod;
},set_insertAppointmentMethod:function(c){this._insertAppointmentMethod=c;
},get_updateAppointmentMethod:function(){return this._updateAppointmentMethod;
},set_updateAppointmentMethod:function(c){this._updateAppointmentMethod=c;
},get_getResourcesMethod:function(){return this._getResourcesMethod;
},set_getResourcesMethod:function(c){this._getResourcesMethod=c;
},get_createRecurrenceExceptionMethod:function(){return this._createRecurrenceExceptionMethod;
},set_createRecurrenceExceptionMethod:function(c){this._createRecurrenceExceptionMethod=c;
},get_removeRecurrenceExceptionsMethod:function(){return this._removeRecurrenceExceptionsMethod;
},set_removeRecurrenceExceptionsMethod:function(c){this._removeRecurrenceExceptionsMethod=c;
},get_resourcesPopulated:function(){return this._resourcesPopulated;
},set_resourcesPopulated:function(c){this._resourcesPopulated=c;
},get_isEmpty:function(){return a.SchedulerWebServiceSettings.callBaseMethod(this,"get_isEmpty");
},get_isOData:function(){return false;
},get_updateMode:function(){return this._updateMode;
},get_isWcf:function(){return true;
},get_isInBatchMode:function(){return this.get_updateMode()==a.AppointmentUpdateMode.Batch;
}};
a.SchedulerWebServiceSettings.registerClass("Telerik.Web.UI.SchedulerWebServiceSettings",a.WebServiceSettings);
})();
Type.registerNamespace("Telerik.Web.UI");
(function(a){a.ISchedulerModel=function(){};
a.ISchedulerModel.prototype={getTimeSlotFromDomElement:function(b){throw Error.notImplemented();
},getTimeSlotForAppointment:function(b){throw Error.notImplemented();
},get_isAllDayAppointment:function(b){throw Error.notImplemented();
},updateResizingAppointmentSize:function(b,c){},updateDraggingAppointmentSize:function(b,d,c){throw Error.notImplemented();
},get_supportsSlotSelection:function(){return false;
},get_visibleRangeStart:function(){throw Error.notImplemented();
},get_visibleRangeEnd:function(){throw Error.notImplemented();
},get_supportsFullTime:function(){return true;
}};
a.ISchedulerModel.registerInterface("Telerik.Web.UI.ISchedulerModel");
a.ISchedulerTimeSlot=function(){};
a.ISchedulerTimeSlot.prototype={get_index:function(){throw Error.notImplemented();
},get_isAllDay:function(){throw Error.notImplemented();
},get_startTime:function(){throw Error.notImplemented();
},get_endTime:function(){throw Error.notImplemented();
},get_duration:function(){throw Error.notImplemented();
},get_durationInMinutes:function(){throw Error.notImplemented();
},get_domElement:function(){throw Error.notImplemented();
}};
a.ISchedulerTimeSlot.registerInterface("Telerik.Web.UI.ISchedulerTimeSlot");
})(Telerik.Web.UI);
Type.registerNamespace("Telerik.Web.UI.Scheduler");
Type.registerNamespace("Telerik.Web.UI.Scheduler.KeyboardNavigation");
(function(){var b=Telerik.Web.UI.Scheduler;
var a=$telerik.$;
var g={next:1,previous:0},e={inline:1,full:0},f=-1,d={save:0,cancel:1,options:2},c={del:0,edit:1};
b.KeyboardNavigation=function(k){var l=this._scheduler=k;
var h=!this._scheduler.get_webServiceSettings().get_isEmpty();
this._tabNavigator=new b.KeyboardNavigation.Modules.TabNavigator(k);
this._commandsModule=new b.KeyboardNavigation.Modules.Commands(k);
this._commandsModule.bind({onAppointmentCommand:function(n){var p=this._tabNavigator.get_selectedAppointment();
if(p){var o=a.Event("click");
o.eventMapTarget=p.get_element();
switch(n){case c.edit:l._onAppointmentDoubleClick(o);
break;
case c.del:l._onAppointmentDeleteClick(o);
break;
}}},onViewChange:function(n){var o=Telerik.Web.UI.SchedulerViewType;
switch(n){case o.DayView:l._onDayViewTabClick(a.Event("click"));
break;
case o.WeekView:l._onWeekViewTabClick(a.Event("click"));
break;
case o.MonthView:l._onMonthViewTabClick(a.Event("click"));
break;
case o.AgendaView:l._onAgendaViewTabClick(a.Event("click"));
break;
}},onEditFormCommand:function(n){if(!this._commandsModule.get_editForm()){this._commandsModule.set_editForm(l._getInlineTemplate());
f=e.inline;
}var o=this._commandsModule.get_editForm();
switch(n){case d.save:o._saveClicked();
this._commandsModule.trigger("onEditFormHidden");
break;
case d.cancel:o._cancelClicked();
this._commandsModule.trigger("onEditFormHidden");
break;
case d.options:if(f==e.inline){o._moreClicked();
}break;
}},onEditFormShown:function(n,p){var o=p!=undefined?p:e.inline;
this._commandsModule.set_editForm(n);
this._commandsModule.set_editFormType(o);
},onEditFormHidden:function(){this._commandsModule.set_isEditing(false);
this._commandsModule.set_editFormType(-1);
l.get_element().focus();
},onTimeFrameChange:function(n){if(n==1){l._onNextSchedulerDayClick(a.Event("click"));
}else{l._onPreviousSchedulerDayClick(a.Event("click"));
}},onNavigation:function(){this._tabNavigator.reset();
}},this);
this._navigator=new b.KeyboardNavigation.Modules.Navigator(this._commandsModule,k);
if(!a(".rsAdvancedEdit",this._scheduler.get_element()).is(":visible")){this._navigator.init();
}else{var m=this;
var i={_cancelClicked:function(){this._buttonClicked(".rsAdvEditCancel");
},_saveClicked:function(){this._buttonClicked(".rsAdvEditSave");
},_moreClicked:function(){},_buttonClicked:function(o){var n=new Function(a(o,m._scheduler.get_element()).attr("href").split(":")[1]);
n();
}};
this._commandsModule.trigger("onEditFormShown",i,e.full);
}var j=this;
if(h){this._scheduler.add_navigationComplete(function(o,n){j.reset(n);
});
}};
b.KeyboardNavigation.prototype={_getNavigator:function(){return this._navigator;
},_getCommandsModule:function(){return this._commandsModule;
},_getTabNavigator:function(){return this._tabNavigator;
},dispose:function(){this._commandsModule=null;
this._navigator=null;
},reset:function(h){setTimeout(function(){Telerik.Web.UI.Scheduler.KeyboardNavigation.Models.reset();
},10);
var i=this;
if(h&&h.get_command()<=3){setTimeout(function(){i._navigator.init();
},600);
}this._tabNavigator.reset();
},parse:function(i){var j=this._getNavigator(),h=this._getCommandsModule(),k=this._getTabNavigator();
if(!j.isCommandKey(i)){if(j.isNavigationCommand(i)&&!h.get_isEditing()&&j.get_model()){h.trigger("onNavigation");
j.get_model().handle(i);
}else{if(k.isTabCommand(i)&&!h.get_isEditing()&&j.get_model()){k.handle(i);
}else{h.handle(i);
}}}}};
b.KeyboardNavigation.Modules={};
b.KeyboardNavigation.Models={};
(function(){var h=b.KeyboardNavigation.Modules;
h.makeEventHandler=function(k){var j={};
a.extend(k,{bind:function(m,l){a.each(m,function(n,o){i(n,o,l);
});
},trigger:function(m){var n=j[m];
for(var o=0;
o<n.length;
o++){var l=Array.prototype.slice.call(arguments);
l.shift();
n[o].upload.apply(n[o].context,l);
}}});
function i(m,n,l){var o=j[m]||[];
o.push({upload:n,context:l});
j[m]=o;
}};
h.Commands=function(j){h.makeEventHandler(this);
var k=Telerik.Web.UI.SchedulerViewType,i=false;
this._scheduler=j;
a.extend(this,{handle:function(l){if(l.altKey){this._handleAltKey(l);
}else{if(l.ctrlKey){this._handleCtrlKey(l);
}else{switch(l.keyCode){case Sys.UI.Key.enter:if(!a(l.target).is("textarea")){this.trigger("onAppointmentCommand",c.edit);
}break;
case Sys.UI.Key.del:if(!a(l.target).is("textarea")){this.trigger("onAppointmentCommand",c.del);
}break;
case 27:if(i){this.get_editForm()._cancelClicked();
this.trigger("onEditFormHidden");
l.preventDefault();
}break;
}}}},set_editForm:function(l){this._editForm=l;
i=true;
},get_editForm:function(){return this._editForm;
},set_editFormType:function(l){f=l;
},get_isEditing:function(){return i;
},set_isEditing:function(l){i=l;
},_handleAltKey:function(l){switch(l.keyCode){case 107:case 187:this.trigger("onViewChange",k.MonthView);
break;
case 109:case 189:this.trigger("onViewChange",k.WeekView);
break;
case 192:this.trigger("onViewChange",k.AgendaView);
break;
case 83:this.trigger("onEditFormCommand",d.save);
break;
case 67:this.trigger("onEditFormCommand",d.cancel);
break;
case 79:this.trigger("onEditFormCommand",d.options);
break;
default:if(l.keyCode>=48&&l.keyCode<=57){this.trigger("onViewChange",k.DayView);
}break;
}switch(this._scheduler.get_selectedView()){case k.WeekView:switch(l.keyCode){case Sys.UI.Key.down:this.trigger("onTimeFrameChange",g.next);
break;
case Sys.UI.Key.up:this.trigger("onTimeFrameChange",g.previous);
break;
}break;
case k.MonthView:switch(l.keyCode){case Sys.UI.Key.pageDown:this.trigger("onTimeFrameChange",g.next);
break;
case Sys.UI.Key.pageUp:this.trigger("onTimeFrameChange",g.previous);
break;
}break;
}},_handleCtrlKey:function(l){switch(this._scheduler.get_selectedView()){case k.DayView:switch(l.keyCode){case Sys.UI.Key.left:this.trigger("onTimeFrameChange",g.previous);
break;
case Sys.UI.Key.right:this.trigger("onTimeFrameChange",g.next);
break;
}break;
}}});
};
h.Navigator=function(i,j){this._model=null;
this._commandsModule=i;
this._scheduler=j;
};
h.Navigator.prototype={init:function(){this._model=b.KeyboardNavigation.Models.getModel(this._scheduler);
if(this._model){h.makeEventHandler(this._model);
this._model.bind({onRowSelection:function(i){if(this._scheduler._rowSelectionState.selectedSlots.length>0){this._scheduler._processRowSelection(i.get_domElement());
}}},this);
this._model._commandsModule=this._commandsModule;
}},get_model:function(){return this._model;
},isNavigationCommand:function(j){var i=j.keyCode,l=j.altKey||j.ctrlKey,k=Sys.UI.Key;
if(l){j.preventDefault();
}return !l&&(i==k.down||i==k.up||i==k.left||i==k.right);
},isCommandKey:function(i){return(i.keyCode==16||i.keyCode==17||i.keyCode==18);
}};
h.TabNavigator=function(i){var j=new h.TabNavigator.appointmentsWrapper(i);
this._scheduler=i;
a.extend(this,{isTabCommand:function(k){return k.keyCode==9&&(a(k.target).hasClass("RadScheduler")||a(k.target).parents().hasClass("RadScheduler"));
},handle:function(l){j.update(l);
var k=j.get_nextAppointment();
if(k){l.preventDefault();
this._scheduler._selectAppointment(k,k.get_element());
}else{this.reset();
}},reset:function(){this._scheduler._clearAppointmentSelection();
},get_selectedAppointment:function(){return this._scheduler._lastSelectedApt;
},get_wrapper:function(){return j;
}});
};
h.TabNavigator.appointmentsWrapper=function(i){var j=this;
this._array=null;
this._sorted=false;
this._currentIndex=-1;
this._scheduler=i;
if(!this._scheduler.get_webServiceSettings().get_isEmpty()){this._scheduler.add_appointmentsPopulated(function(l,k){j.init();
});
}this.init();
};
h.TabNavigator.appointmentsWrapper.prototype={init:function(){var n=this._scheduler.get_appointments()._array,m=n.length,l=0;
this._array=[];
for(var k=0;
k<m;
k++){if(n[k].get_element()){this._array[l++]=n[k];
}}},update:function(j){var i=this._array.length;
if(this._currentIndex<0||this._currentIndex>(i-1)){this._currentIndex=j.shiftKey?i-1:0;
}else{this._currentIndex+=j.shiftKey?-1:1;
}},get_sortedAppointments:function(){if(!this._sorted){this._array=this._sort(this._array);
this._sorted=true;
}return this._array;
},get_nextAppointment:function(){return this.get_sortedAppointments()[this._currentIndex];
},_sort:function(j){if(j.length<=1){return j;
}var m=[];
var k=[];
var n=j[Math.round(j.length/2)];
Array.remove(j,n);
for(var l=0;
l<j.length;
l++){if(j[l].get_start()<n.get_start()){m[m.length]=j[l];
}else{k[k.length]=j[l];
}}return this._concat(this._sort(m),n,this._sort(k));
},_concat:function(k,l,i){var m=[];
var j=function(n){for(var o=0;
o<n.length;
o++){m[m.length]=n[o];
}};
j(k);
m[m.length]=l;
j(i);
return m;
}};
})();
(function(){var i=false,h=true;
b.KeyboardNavigation.Models.reset=function(){h=true;
};
b.KeyboardNavigation.Model=function(j){this._scheduler=j;
this._nav=null,this._scrollOptions=null,this._shiftPressed=false,this._firstMove=true;
};
b.KeyboardNavigation.Model.prototype={initialize:function(){this.initializeNavigator();
this.initScrollProperties();
},initScrollProperties:function(){var j=a(".rsContentScrollArea",this._scheduler.get_element())[0];
this._scrollOptions={rowHeight:parseInt(this._scheduler.get_rowHeight(),10),scrollElement:j,scrollAreaHeight:a(j).height()};
},initializeNavigator:function(){var l=this._nav={};
h=true;
var k=this._scheduler.get_activeModel();
var j=this.createMap(k._getContentTable(),function(m){h=false;
var o=m.get_targetSlot().get_domElement(),n=o.cellIndex,p=o.parentNode.rowIndex;
l.x=p;
l.y=n;
});
l.map=j;
l.model=k;
l.slot=k.getTimeSlotFromDomElement(j[0][0]);
l.x=0;
l.y=0;
},createMap:function(q,r){var p=q.getElementsByTagName("tr"),o=p.length,n=new Array(o);
this._scheduler.add_timeSlotClick(function(s,j){r(j);
});
for(var l=0;
l<o;
l++){var k=p[l].getElementsByTagName("td");
n[l]=new Array(k.length);
for(var m=0;
m<k.length;
m++){n[l][m]=k[m];
}}return n;
},updateScroll:function(){var k=this._scrollOptions,j=(this._nav.x+1)*k.rowHeight;
if(j>k.scrollAreaHeight){k.scrollElement.scrollTop+=k.rowHeight;
}else{if(k.scrollElement.scrollTop>0){k.scrollElement.scrollTop-=k.rowHeight;
}}},select:function(){var k=this.get_nav();
var j=k.model;
if(!i){this._scheduler._clearSlotSelection();
}var l=j.getTimeSlotFromDomElement(k.map[k.x][k.y]);
this.selectSlot(l);
k.slot=l;
},selectSlot:function(k){var j=this._scheduler._rowSelectionState;
if(k&&k.set_selected){k.set_selected(true);
if(!i){j.rowSelectionStartSlot=k;
}j.isRowSelection=true;
j.selectedSlots.push(k);
}}};
b.KeyboardNavigation.Model.registerClass("Telerik.Web.UI.Scheduler.KeyboardNavigation.Model");
b.KeyboardNavigation.DayModel=function(j){b.KeyboardNavigation.DayModel.initializeBase(this,[j]);
};
b.KeyboardNavigation.DayModel.prototype={get_nav:function(){return this._nav;
},handle:function(j){var k=false,l=Sys.UI.Key;
var m=this.get_nav();
i=j.shiftKey;
switch(j.keyCode){case l.down:if(m.x<m.map.length-1){m.x++;
k=true;
this.down();
}break;
case l.up:if(m.x>0){m.x--;
k=true;
this.up();
}break;
case l.left:if(!i){this.left();
}break;
case l.right:if(!i){this.right();
}break;
}if(i&&k){this.trigger("onRowSelection",m.slot);
}},left:function(){this._commandsModule.trigger("onTimeFrameChange",g.previous);
},right:function(){this._commandsModule.trigger("onTimeFrameChange",g.next);
},up:function(){this.select();
this.updateScroll(true);
},down:function(){this.select();
this.updateScroll(false);
}};
b.KeyboardNavigation.DayModel.registerClass("Telerik.Web.UI.Scheduler.KeyboardNavigation.DayModel",b.KeyboardNavigation.Model);
b.KeyboardNavigation.WeekModel=function(j){b.KeyboardNavigation.WeekModel.initializeBase(this,[j]);
this._move={day:0,week:1};
};
b.KeyboardNavigation.WeekModel.prototype={get_nav:function(){return this._nav;
},handle:function(j){var k=Sys.UI.Key;
var l=this._move;
var m=this.get_nav();
i=j.shiftKey;
switch(j.keyCode){case k.down:if(m.x<m.map.length-1){m.x++;
this.down();
}break;
case k.up:if(m.x>0){m.x--;
this.up();
}break;
case k.left:if(h){m.y=m.map[0].length;
}if(m.y>0){m.y--;
this.left(l.day);
}else{if(!i){this.left(l.week);
}}break;
case k.right:if(h){m.y=-1;
}if(m.y<m.map[0].length-1){m.y++;
this.right(l.day);
}else{if(!i){this.right(l.week);
}}break;
}h=false;
if(i){this.trigger("onRowSelection",m.slot);
}},left:function(j){if(j==this._move.day){this.select();
}else{this._commandsModule.trigger("onTimeFrameChange",g.previous);
}},right:function(j){if(j==this._move.day){this.select();
}else{this._commandsModule.trigger("onTimeFrameChange",g.next);
}},up:function(){this.select();
this.updateScroll(true);
},down:function(){this.select();
this.updateScroll(false);
}};
b.KeyboardNavigation.WeekModel.registerClass("Telerik.Web.UI.Scheduler.KeyboardNavigation.WeekModel",b.KeyboardNavigation.Model);
b.KeyboardNavigation.MonthModel=function(j){b.KeyboardNavigation.MonthModel.initializeBase(this,[j]);
this._move={day:0,month:1};
};
b.KeyboardNavigation.MonthModel.prototype={get_nav:function(){return this._nav;
},handle:function(j){var k=Sys.UI.Key;
var l=this._move;
var m=this.get_nav();
i=j.shiftKey;
switch(j.keyCode){case k.down:if(m.x<m.map.length-1){m.x++;
this.down();
}break;
case k.up:if(m.x>0){m.x--;
this.up();
}break;
case k.left:if(h){m.y=m.map[0].length;
}if(m.y>0){m.y--;
this.left(l.day);
}else{if(m.x>0){m.x--;
m.y=m.map[0].length-1;
this.up();
}else{if(!i){this.left(l.month);
}}}break;
case k.right:if(h){m.y=-1;
}if(m.y<m.map[0].length-1){m.y++;
this.right(l.day);
}else{if(m.x<m.map.length){m.x++;
m.y=0;
this.down();
}else{if(!i){this.right(l.month);
}}}break;
}h=false;
if(i){this.trigger("onRowSelection",m.slot);
}},left:function(j){if(j==this._move.day){this.select();
}else{this._commandsModule.trigger("onTimeFrameChange",g.previous);
}},right:function(j){if(j==this._move.day){this.select();
}else{this._commandsModule.trigger("onTimeFrameChange",g.next);
}},up:function(){this.select();
this.updateScroll(true);
},down:function(){this.select();
this.updateScroll(false);
}};
b.KeyboardNavigation.MonthModel.registerClass("Telerik.Web.UI.Scheduler.KeyboardNavigation.MonthModel",b.KeyboardNavigation.Model);
b.KeyboardNavigation.AgendaModel=function(j){b.KeyboardNavigation.AgendaModel.initializeBase(this,[j]);
};
b.KeyboardNavigation.AgendaModel.prototype={initializeNavigator:function(){var m=this._scheduler;
var k=m.get_activeModel(),j=k._getContentTable();
var n=this;
var l=this._nav={};
h=true;
this.createMap(j,function(p){var o=p.get_appointment(),q=o.get_element(),r=a(q).parents("tr.rsAgendaRow")[0];
l.x=r.rowIndex;
m._lastSelectedApt=o;
});
if(!m.get_webServiceSettings().get_isEmpty()){m.add_appointmentsPopulated(function(p,o){n.updateMap(j);
});
}l.model=k;
l.x=0;
},createMap:function(k,j){this._scheduler.add_appointmentClick(function(m,l){j(l);
});
this.updateMap(k);
},updateMap:function(n){var m=n.getElementsByTagName("tr"),l=m.length,k=new Array(l);
h=true;
for(var j=0;
j<l;
j++){k[j]=m[j];
}this._nav.map=k;
this._nav.x=0;
},get_nav:function(){return this._nav;
},handle:function(j){var k=Sys.UI.Key;
var l=this.get_nav();
switch(j.keyCode){case k.down:if(h){l.x=0;
}else{if(l.x<l.map.length-1){l.x++;
}}this.down();
break;
case k.up:if(h){l.x=l.map.length-1;
}else{if(l.x>0){l.x--;
}}this.up();
break;
case k.left:this.left();
break;
case k.right:this.right();
break;
}h=false;
},left:function(){this._commandsModule.trigger("onTimeFrameChange",g.previous);
},right:function(){this._commandsModule.trigger("onTimeFrameChange",g.next);
},up:function(){this.selectAppointment();
this.updateScroll(true);
},down:function(){this.selectAppointment();
this.updateScroll(false);
},selectAppointment:function(){var m=this.get_nav();
var l=m.model,j=a(m.map[m.x]).find(".rsApt")[0],k=l.getAppointmentFromDomElement(j);
if(k){this._scheduler._selectAppointment(k,j);
}}};
b.KeyboardNavigation.AgendaModel.registerClass("Telerik.Web.UI.Scheduler.KeyboardNavigation.AgendaModel",b.KeyboardNavigation.Model);
b.KeyboardNavigation.Models.getModel=function(k){var l=k.get_selectedView();
var m=Telerik.Web.UI.SchedulerViewType;
var j;
switch(l){case m.DayView:j=new b.KeyboardNavigation.DayModel(k);
break;
case m.WeekView:j=new b.KeyboardNavigation.WeekModel(k);
break;
case m.MonthView:j=new b.KeyboardNavigation.MonthModel(k);
break;
case m.AgendaView:j=new b.KeyboardNavigation.AgendaModel(k);
break;
default:j=null;
}if(j){j.initialize();
}return j;
};
})();
})();

(function(b,a){a(["./kendo.data","./kendo.userevents","./kendo.dataviz.themes"],b);
})(function(){(function(){(function(a,H){var s=Math,x=a.proxy,r=window.kendo,d=r.Class,J=r.ui.Widget,F=r.template,l=r.deepExtend,p=r.data.HierarchicalDataSource,o=r.getter,j=r.dataviz;
var w=".kendoTreeMap",c="change",i="dataBound",q="itemCreated",t=Number.MAX_VALUE,v="mouseover"+w,u="mouseleave"+w,I="undefined";
var G=J.extend({init:function(K,L){r.destroy(K);
a(K).empty();
J.fn.init.call(this,K,L);
this.wrapper=this.element;
this._initTheme(this.options);
this.element.addClass("k-widget k-treemap");
this._setLayout();
this._originalOptions=l({},this.options);
this._initDataSource();
this._attachEvents();
r.notify(this,j.ui);
},options:{name:"TreeMap",theme:"default",autoBind:true,textField:"text",valueField:"value",colorField:"color"},events:[i,q],_initTheme:function(K){var L=this,O=j.ui.themes||{},M=((K||{}).theme||"").toLowerCase(),N=(O[M]||{}).treeMap;
L.options=l({},N,K);
},_attachEvents:function(){this.element.on(v,x(this._mouseover,this)).on(u,x(this._mouseleave,this));
},_setLayout:function(){if(this.options.type==="horizontal"){this._layout=new B(false);
this._view=new C(this,this.options);
}else{if(this.options.type==="vertical"){this._layout=new B(true);
this._view=new C(this,this.options);
}else{this._layout=new D();
this._view=new E(this,this.options);
}}},_initDataSource:function(){var M=this,L=M.options,K=L.dataSource;
M._dataChangeHandler=x(M._onDataChange,M);
M.dataSource=p.create(K).bind(c,M._dataChangeHandler);
if(K){if(M.options.autoBind){M.dataSource.fetch();
}}},setDataSource:function(K){var L=this;
L.dataSource.unbind(c,L._dataChangeHandler);
L.dataSource=K.bind(c,L._dataChangeHandler);
if(K){if(L.options.autoBind){L.dataSource.fetch();
}}},_onDataChange:function(M){var R=M.node;
var Q=M.items;
var S=this.options;
var P,O,K;
if(!R){this.element.empty();
P=this._wrapItem(Q[0]);
this._layout.createRoot(P,this.element.outerWidth(),this.element.outerHeight(),this.options.type==="vertical");
this._view.createRoot(P);
this._root=P;
}else{if(Q.length){var T=this._getByUid(R.uid);
T.children=[];
if(!m(T.minColor)&&!m(T.maxColor)){K=S.colors||[];
}else{K=g(T.minColor,T.maxColor,Q.length)||[];
}for(O=0;
O<Q.length;
O++){P=Q[O];
T.children.push(this._wrapItem(P));
}var N=this._view.htmlSize(T);
this._layout.compute(T.children,T.coord,N);
for(O=0;
O<T.children.length;
O++){P=T.children[O];
if(!m(P.color)){if(typeof(K[0])==="string"){P.color=K[O%K.length];
}else{var L=K[O%K.length];
if(L){P.color=L[0];
P.minColor=L[0];
P.maxColor=L[1];
}}}}this._view.render(T);
}}for(O=0;
O<Q.length;
O++){Q[O].load();
}if(R){this.trigger(i,{node:R});
}},_contentSize:function(K){this.view.renderHeight(K);
},_wrapItem:function(K){var L={};
if(m(this.options.valueField)){L.value=n(this.options.valueField,K);
}if(m(this.options.colorField)){L.color=n(this.options.colorField,K);
}if(m(this.options.textField)){L.text=n(this.options.textField,K);
}L.level=K.level();
L.dataItem=K;
return L;
},_getByUid:function(M){var L=[this._root];
var K;
while(L.length){K=L.pop();
if(K.dataItem.uid===M){return K;
}if(K.children){L=L.concat(K.children);
}}},dataItem:function(L){var M=a(L).attr(r.attr("uid")),K=this.dataSource;
return K&&K.getByUid(M);
},findByUid:function(K){return this.element.find(".k-treemap-tile["+r.attr("uid")+"='"+K+"']");
},_mouseover:function(K){var L=a(K.target);
if(L.hasClass("k-leaf")){this._removeActiveState();
L.removeClass("k-state-hover").addClass("k-state-hover");
}},_removeActiveState:function(){this.element.find(".k-state-hover").removeClass("k-state-hover");
},_mouseleave:function(){this._removeActiveState();
},destroy:function(){J.fn.destroy.call(this);
this.element.off(w);
if(this.dataSource){this.dataSource.unbind(c,this._dataChangeHandler);
}this._root=null;
r.destroy(this.element);
},items:function(){return a();
},getSize:function(){return r.dimensions(this.element);
},_resize:function(){this.dataSource.fetch();
},setOptions:function(L){var K=L.dataSource;
L.dataSource=H;
this._originalOptions=l(this._originalOptions,L);
this.options=l({},this._originalOptions);
this._setLayout();
this._initTheme(this.options);
J.fn._setEvents.call(this,L);
if(K){this.setDataSource(p.create(K));
}if(this.options.autoBind){this.dataSource.fetch();
}}});
var D=d.extend({createRoot:function(L,M,K){L.coord={width:M,height:K,top:0,left:0};
},leaf:function(K){return !K.children;
},layoutChildren:function(N,K){var Q=K.width*K.height;
var S=0,O=[],M;
for(M=0;
M<N.length;
M++){O[M]=parseFloat(N[M].value);
S+=O[M];
}for(M=0;
M<O.length;
M++){N[M].area=Q*O[M]/S;
}var P=this.layoutHorizontal()?K.height:K.width;
N=new r.data.Query(N)._sortForGrouping("value","desc");
var L=[N[0]];
var R=N.slice(1);
this.squarify(R,L,P,K);
},squarify:function(M,L,N,K){this.computeDim(M,L,N,K);
},computeDim:function(P,N,Q,K){if(P.length+N.length==1){var L=P.length==1?P:N;
this.layoutLast(L,Q,K);
return;
}if(P.length>=2&&N.length===0){N=[P[0]];
P=P.slice(1);
}if(P.length===0){if(N.length>0){this.layoutRow(N,Q,K);
}return;
}var M=P[0];
if(this.worstAspectRatio(N,Q)>=this.worstAspectRatio([M].concat(N),Q)){this.computeDim(P.slice(1),N.concat([M]),Q,K);
}else{var O=this.layoutRow(N,Q,K);
this.computeDim(P,[],O.dim,O);
}},layoutLast:function(L,M,K){L[0].coord=K;
},layoutRow:function(L,M,K){if(this.layoutHorizontal()){return this.layoutV(L,M,K);
}else{return this.layoutH(L,M,K);
}},orientation:"h",layoutVertical:function(){return this.orientation==="v";
},layoutHorizontal:function(){return this.orientation==="h";
},layoutChange:function(){this.orientation=this.layoutVertical()?"h":"v";
},worstAspectRatio:function(N,Q){if(!N||N.length===0){return t;
}var L=0,O=0,P=t;
for(var M=0;
M<N.length;
M++){var K=N[M].area;
L+=K;
P=(P<K)?P:K;
O=(O>K)?O:K;
}return s.max((Q*Q*O)/(L*L),(L*L)/(Q*Q*P));
},compute:function(K,N,L){if(!(N.width>=N.height&&this.layoutHorizontal())){this.layoutChange();
}if(K&&K.length>0){var M={width:N.width,height:N.height-L.text,top:0,left:0};
this.layoutChildren(K,M);
}},layoutV:function(O,R,L){var Q=this._totalArea(O),P=0;
R=A(Q/R);
for(var N=0;
N<O.length;
N++){var M=A(O[N].area/R);
O[N].coord={height:M,width:R,top:L.top+P,left:L.left};
P+=M;
}var K={height:L.height,width:L.width-R,top:L.top,left:L.left+R};
K.dim=s.min(K.width,K.height);
if(K.dim!=K.height){this.layoutChange();
}return K;
},layoutH:function(O,S,L){var R=this._totalArea(O);
var M=A(R/S),Q=L.top,P=0;
for(var N=0;
N<O.length;
N++){O[N].coord={height:M,width:A(O[N].area/M),top:Q,left:L.left+P};
P+=O[N].coord.width;
}var K={height:L.height-M,width:L.width,top:L.top+M,left:L.left};
K.dim=s.min(K.width,K.height);
if(K.dim!=K.width){this.layoutChange();
}return K;
},_totalArea:function(L){var M=0;
for(var K=0;
K<L.length;
K++){M+=L[K].area;
}return M;
}});
var E=d.extend({init:function(L,K){this.options=l({},this.options,K);
this.treeMap=L;
this.element=a(L.element);
this.offset=0;
},htmlSize:function(L){var M=this._getByUid(L.dataItem.uid);
var K={text:0};
if(L.children){this._clean(M);
var N=this._getText(L);
if(N){var O=this._createTitle(L);
M.append(O);
K.text=O.height();
}M.append(this._createWrap());
this.offset=(M.outerWidth()-M.innerWidth())/2;
}return K;
},_getByUid:function(K){return this.element.find(".k-treemap-tile["+r.attr("uid")+"='"+K+"']");
},render:function(O){var P=this._getByUid(O.dataItem.uid);
var K=O.children;
if(K){var Q=P.find(".k-treemap-wrap");
for(var M=0;
M<K.length;
M++){var N=K[M];
var L=this._createLeaf(N);
Q.append(L);
this.treeMap.trigger(q,{element:L});
}}},createRoot:function(L){var K=this._createLeaf(L);
this.element.append(K);
this.treeMap.trigger(q,{element:K});
},_clean:function(K){K.css("background-color","");
K.removeClass("k-leaf");
K.removeClass("k-inverse");
K.empty();
},_createLeaf:function(K){return this._createTile(K).css("background-color",K.color).addClass("k-leaf").toggleClass("k-inverse",this._tileColorBrightness(K)>180).append(a("<div></div>").html(this._getText(K)));
},_createTile:function(K){var L={width:K.coord.width,height:K.coord.height,left:K.coord.left,top:K.coord.top};
if(L.left&&this.offset){L.width+=this.offset*2;
}else{L.width+=this.offset;
}if(L.top){L.height+=this.offset*2;
}else{L.height+=this.offset;
}var M=a("<div class='k-treemap-tile'></div>").css({width:L.width,height:L.height,left:L.left,top:L.top});
if(m(K.dataItem)&&m(K.dataItem.uid)){M.attr(r.attr("uid"),K.dataItem.uid);
}return M;
},_getText:function(K){var L=K.text;
if(this.options.template){L=this._renderTemplate(K);
}return L;
},_renderTemplate:function(K){var L=F(this.options.template);
return L({dataItem:K.dataItem,text:K.text});
},_createTitle:function(K){return a("<div class='k-treemap-title'></div>").append(a("<div></div>").html(this._getText(K)));
},_createWrap:function(){return a("<div class='k-treemap-wrap'></div>");
},_tileColorBrightness:function(K){return e(K.color);
}});
var B=d.extend({createRoot:function(L,N,K,M){L.coord={width:N,height:K,top:0,left:0};
L.vertical=M;
},init:function(K){this.vertical=K;
this.quotient=K?1:0;
},compute:function(K,O,M){if(K.length>0){var P=O.width;
var L=O.height;
if(this.vertical){L-=M.text;
}else{P-=M.text;
}var N={width:P,height:L,top:0,left:0};
this.layoutChildren(K,N);
}},layoutChildren:function(N,K){var P=K.width*K.height;
var Q=0;
var O=[];
var L;
for(L=0;
L<N.length;
L++){var M=N[L];
O[L]=parseFloat(N[L].value);
Q+=O[L];
M.vertical=this.vertical;
}for(L=0;
L<O.length;
L++){N[L].area=P*O[L]/Q;
}N=new r.data.Query(N)._sortForGrouping("value","desc");
this.sliceAndDice(N,K);
},sliceAndDice:function(L,K){var M=this._totalArea(L);
if(L[0].level%2===this.quotient){this.layoutHorizontal(L,K,M);
}else{this.layoutVertical(L,K,M);
}},layoutHorizontal:function(N,K,P){var O=0;
for(var L=0;
L<N.length;
L++){var M=N[L];
var Q=M.area/(P/K.width);
M.coord={height:K.height,width:Q,top:K.top,left:K.left+O};
O+=Q;
}},layoutVertical:function(O,K,Q){var P=0;
for(var M=0;
M<O.length;
M++){var N=O[M];
var L=N.area/(Q/K.height);
N.coord={height:L,width:K.width,top:K.top+P,left:K.left};
P+=L;
}},_totalArea:function(L){var M=0;
for(var K=0;
K<L.length;
K++){M+=L[K].area;
}return M;
}});
var C=E.extend({htmlSize:function(L){var M=this._getByUid(L.dataItem.uid);
var K={text:0,offset:0};
if(L.children){this._clean(M);
var N=this._getText(L);
if(N){var O=this._createTitle(L);
M.append(O);
if(L.vertical){K.text=O.height();
}else{K.text=O.width();
}}M.append(this._createWrap());
this.offset=(M.outerWidth()-M.innerWidth())/2;
}return K;
},_createTitle:function(K){var L;
if(K.vertical){L=a("<div class='k-treemap-title'></div>");
}else{L=a("<div class='k-treemap-title-vertical'></div>");
}return L.append(a("<div></div>").html(this._getText(K)));
}});
function n(K,M){if(M===null){return M;
}var L=o(K,true);
return L(M);
}function m(K){return typeof K!==I;
}function g(Q,O,N){var R=y(Q);
var P=y(O);
var M=e(Q)-e(O)<0;
var K=[];
K.push(Q);
for(var L=0;
L<N;
L++){var S={r:f(R.r,P.r,L,N,M),g:f(R.g,P.g,L,N,M),b:f(R.b,P.b,L,N,M)};
K.push(b(S));
}K.push(O);
return K;
}function f(R,P,M,O,N){var S=s.min(s.abs(R),s.abs(P));
var Q=s.max(s.abs(R),s.abs(P));
var T=(Q-S)/(O+1);
var L=T*(M+1);
var K;
if(N){K=S+L;
}else{K=Q-L;
}return K;
}function b(K){return"#"+k(K.r)+k(K.g)+k(K.b);
}function y(K){K=K.replace("#","");
var L=h(K);
return{r:z(L.r),g:z(L.g),b:z(L.b)};
}function k(K){var L=s.round(K).toString(16).toUpperCase();
if(L.length===1){L="0"+L;
}return L;
}function h(K){var L=K.length;
var M={};
if(L===3){M.r=K[0];
M.g=K[1];
M.b=K[2];
}else{M.r=K.substring(0,2);
M.g=K.substring(2,4);
M.b=K.substring(4,6);
}return M;
}function z(K){return parseInt(K.toString(16),16);
}function e(L){var K=0;
if(L){L=y(L);
K=s.sqrt(0.241*L.r*L.r+0.691*L.g*L.g+0.06800000000000001*L.b*L.b);
}return K;
}function A(L){var K=s.pow(10,4);
return s.round(L*K)/K;
}j.ui.plugin(G);
})(window.kendo.jQuery);
})();
return window.kendo;
},typeof define=="function"&&define.amd?define:function(a,b){b();
});

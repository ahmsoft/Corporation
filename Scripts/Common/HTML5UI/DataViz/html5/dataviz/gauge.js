(function(b,a){a(["./kendo.dataviz.core","./kendo.drawing","./kendo.dataviz.themes"],b);
})(function(){(function(){(function(a,an){var U=Math,O=window.kendo,ao=O.util,ap=O.ui.Widget,v=O.deepExtend,u=O.dataviz,j=u.autoMajorUnit,r=u.ChartElement,aa=u.NumericAxis,k=u.Axis,p=u.Box2D,s=O.Class,C=ao.defined,N=ao.isNumber,M=u.interpolateValue,J=u.getSpacing,al=u.round,G=u.geometry,E=u.drawing,ad=G.Point,K=E.Group,ac=E.Path,ak=G.Rect,am=E.Text;
var e=150,Q=250,f="arrow",g="arrowPointer",l="barPointer",o="#000",q=0.05,t=u.COORD_PRECISION,V=Number.MAX_VALUE,W=-Number.MAX_VALUE,w=200,x=0.5,B=200,A=60,z=60,y=5,D=U.PI/180,H=180,L="inside",P="linear",Z="needle",ab="outside",af="radialPointer",aq="x",ar="y";
var ae=s.extend({init:function(at,X){var Y=this;
var au=at.options;
r.fn.init.call(Y,X);
X=Y.options;
X.fill=X.color;
Y.scale=at;
if(C(X.value)){X.value=U.min(U.max(X.value,au.min),au.max);
}else{X.value=au.min;
}},options:{color:o},value:function(X){var au=this;
var Y=au.options;
var av=Y.value;
var at=au.scale.options;
if(arguments.length===0){return av;
}Y._oldValue=(Y._oldValue!==an)?Y.value:at.min;
Y.value=U.min(U.max(X,at.min),at.max);
if(au.elements){au.repaint();
}}});
var ah=ae.extend({options:{shape:Z,cap:{size:q},arrow:{width:16,height:14},animation:{type:af,duration:e}},setRadius:function(X){var Y=this;
if(X){Y.elements.clear();
Y.render(Y.parent,Y.center,X);
}},setAngle:function(X){this.elements.transform(G.transform().rotate(X,this.center));
},repaint:function(){var av=this;
var au=av.scale;
var at=av.options;
var Y=au.slotAngle(at._oldValue);
var X=au.slotAngle(at.value);
if(at.animation.transitions===false){av.setAngle(X);
}else{new ai(av.elements,v(at.animation,{oldAngle:Y,newAngle:X})).play();
}},render:function(){var av=this;
var au=av.scale;
var X=au.arc.center;
var at=av.options;
var Y=new K();
if(at.animation!==false){v(at.animation,{startAngle:0,center:X,reverse:au.options.reverse});
}if(at.shape===Z){Y.append(av._renderNeedle(),av._renderCap());
}else{Y.append(av._renderArrow());
}av.elements=Y;
av.setAngle(D);
return Y;
},reflow:function(X){var av=this;
var at=av.center=X.center;
var au=av.radius=X.getRadiusX();
var Y=av.capSize=Math.round(au*av.options.cap.size);
av.bbox=ak.fromPoints(new ad(at.x-Y,at.y-Y),new ad(at.x+Y,at.y+Y));
},_renderNeedle:function(){var aw=this;
var av=aw.options;
var Y=aw.scale.options.minorTicks.size;
var X=aw.center;
var at=av.color;
var au=new ac({fill:{color:at},stroke:{color:at,width:x}});
au.moveTo(X.x+aw.radius-Y,X.y).lineTo(X.x,X.y-(aw.capSize/2)).lineTo(X.x,X.y+(aw.capSize/2)).close();
return au;
},_renderCap:function(){var av=this;
var au=av.options;
var Y=au.cap.color||au.color;
var at=new G.Circle(av.center,av.capSize);
var X=new E.Circle(at,{fill:{color:Y},stroke:{color:Y}});
return X;
}});
var aj=aa.extend({init:function(X){var Y=this;
Y.options=v({},Y.options,X);
Y.options.majorUnit=Y.options.majorUnit||j(Y.options.min,Y.options.max);
Y.options.minorUnit=Y.options.minorUnit||Y.options.majorUnit/10;
k.fn.init.call(Y,Y.options);
},options:{min:0,max:100,majorTicks:{size:15,align:L,color:o,width:x,visible:true},minorTicks:{size:10,align:L,color:o,width:x,visible:true},startAngle:-30,endAngle:210,labels:{position:L,padding:2}},render:function(Y,at){var au=this;
var X=au.renderArc(Y,at);
au.bbox=X.bbox();
au.labelElements=au.renderLabels();
au.ticks=au.renderTicks();
au.ranges=au.renderRanges();
},reflow:function(X){var au=this;
var Y=X.center();
var at=U.min(X.height(),X.width())/2;
if(au.bbox!==an){au.bbox=au.arc.bbox();
au.radius(au.arc.getRadiusX());
au.repositionRanges();
au.renderLabels();
}else{return au.render(Y,at);
}},slotAngle:function(ay){var au=this.options;
var ax=au.startAngle;
var aw=au.reverse;
var X=au.endAngle-ax;
var at=au.min;
var Y=au.max;
var av;
if(aw){av=au.endAngle-(ay-at)/(Y-at)*X;
}else{av=((ay-at)/(Y-at)*X)+ax;
}return av+H;
},renderLabels:function(){var aR=this;
var aK=aR.options;
var aJ=aK.majorTicks.size;
var Y=aR.arc.clone();
var aN=Y.getRadiusX();
var aS=aR.tickAngles(Y,aK.majorUnit);
var aD=aR.labels;
var at=aD.length;
var aF=aK.labels;
var aL=aF.padding;
var aO=aN*0.05;
var aQ=aK.rangeSize=aK.rangeSize||aN*0.1;
var aP=aK.ranges||[];
var ax,aw,aB;
var X,aA,aI,ay,au,av,az;
var aE=new K();
var aH,aC,aM,aG;
if(aR.options.rangeDistance!==an){aO=aR.options.rangeDistance;
}else{aR.options.rangeDistance=aO;
}if(aF.position===L){aN-=aJ;
if(aP.length&&aR.labelElements===an){aN-=aQ+aO;
}Y.setRadiusX(aN).setRadiusY(aN);
}for(ay=0;
ay<at;
ay++){aA=aD[ay];
ax=aA.box.width()/2;
aw=aA.box.height()/2;
X=aS[ay];
aB=(X-H)*D;
az=aF.position===L;
aI=Y.pointAt(X);
au=aI.x+(U.cos(aB)*(ax+aL)*(az?1:-1));
av=aI.y+(U.sin(aB)*(aw+aL)*(az?1:-1));
aA.reflow(new u.Box2D(au-ax,av-aw,au+ax,av+aw));
aC=new ad(aA.box.x1,aA.box.y1);
if(aR.labelElements===an){aH=b(aA,aK.labels);
aE.append(aH);
}else{aH=aR.labelElements.children[ay];
aM=aH.bbox().origin;
aG=aH.transform()||G.transform();
aG.translate(aC.x-aM.x,aC.y-aM.y);
aH.transform(aG);
}aR.bbox=ak.union(aR.bbox,aH.bbox());
}return aE;
},repositionRanges:function(){var ax=this;
var av=ax.ranges.children;
var aw=ax.options.rangeSize;
var at=ax.options.rangeDistance;
var au,Y;
if(av.length>0){au=ax.getRangeRadius();
if(ax.options.labels.position===L){au+=aw+at;
}Y=au+(aw/2);
for(var X=0;
X<av.length;
X++){av[X]._geometry.setRadiusX(Y).setRadiusY(Y);
}ax.bbox=ak.union(ax.bbox,ax.ranges.bbox());
}},renderRanges:function(){var aD=this;
var X=aD.arc;
var ay=new K();
var Y,aE;
var aB=aD.rangeSegments();
var aC=aB.length;
var az=aD.options.reverse;
var ax=aD.options.rangeSize;
var au=aD.options.rangeDistance;
var aA,aw,av,at;
if(aC){aw=aD.getRangeRadius();
aD.radius(aD.radius()-ax-au);
for(at=0;
at<aC;
at++){aA=aB[at];
Y=aD.slotAngle(aA[az?"to":"from"]);
aE=aD.slotAngle(aA[!az?"to":"from"]);
if(aE-Y!==0){av=new G.Arc(X.center,{radiusX:aw+(ax/2),radiusY:aw+(ax/2),startAngle:Y,endAngle:aE});
ay.append(new E.Arc(av,{stroke:{width:ax,color:aA.color,opacity:aA.opacity}}));
}}}return ay;
},rangeSegments:function(){var at=this;
var ay=at.options;
var aA=ay.ranges||[];
var X=aA.length;
var az;
var aE;
var Y=ay.rangePlaceholderColor;
var aD=[];
var aC;
var ax=ay.min;
var aw=ay.max;
var au,av;
function aB(aG,aI,aF,aH){return{from:aG,to:aI,color:aF,opacity:aH};
}if(X){aD.push(aB(ax,aw,Y));
for(au=0;
au<X;
au++){az=I(aA[au],ax,aw);
aE=aD.length;
for(av=0;
av<aE;
av++){aC=aD[av];
if(aC.from<=az.from&&az.from<=aC.to){aD.push(aB(az.from,az.to,az.color,az.opacity));
if(aC.from<=az.to&&az.to<=aC.to){aD.push(aB(az.to,aC.to,Y,az.opacity));
}aC.to=az.from;
break;
}}}}return aD;
},getRangeRadius:function(){var ax=this;
var at=ax.options;
var Y=at.majorTicks.size;
var aw=at.rangeSize;
var av=at.rangeDistance;
var X=ax.arc;
var au;
if(at.labels.position===ab){au=X.getRadiusX()-Y-av-aw;
}else{au=X.getRadiusX()-aw;
}return au;
},renderArc:function(Y,au){var av=this;
var at=av.options;
var X=av.arc=new G.Arc(Y,{radiusX:au,radiusY:au,startAngle:at.startAngle+H,endAngle:at.endAngle+H});
return X;
},renderTicks:function(){var az=this;
var Y=az.arc;
var ax=az.options;
var au=ax.labels.position;
var X=new K();
var av=ax.majorTicks.size;
var aw=ax.minorTicks.size;
var aA=Y.clone();
var ay=aA.getRadiusX();
function at(aB,aF,aK,aH){var aI=new K(),aC=aB.center,aE=aB.getRadiusX(),aD,aJ,aG,aL=aH.visible;
if(aL){for(aD=0;
aD<aF.length;
aD++){aJ=aB.pointAt(aF[aD]);
aG=new ad(aC.x+aE-aH.size,aC.y).rotate(aF[aD],aC);
aI.append(new ac({stroke:{color:aH.color,width:aH.width}}).moveTo(aJ).lineTo(aG));
}}return aI;
}az.majorTickAngles=az.tickAngles(Y,ax.majorUnit);
az.majorTicks=at(aA,az.majorTickAngles,ax.majorUnit,ax.majorTicks);
X.append(az.majorTicks);
az._tickDifference=av-aw;
if(au===ab){aA.setRadiusX(ay-av+aw).setRadiusY(ay-av+aw);
}az.minorTickAngles=az.normalizeTickAngles(az.tickAngles(Y,ax.minorUnit));
az.minorTicks=at(aA,az.minorTickAngles,ax.minorUnit,ax.minorTicks,ax.majorUnit);
X.append(az.minorTicks);
return X;
},normalizeTickAngles:function(X){var av=this;
var at=av.options;
var au=at.majorUnit/at.minorUnit;
for(var Y=X.length-1;
Y>=0;
Y--){if(Y%au===0){X.splice(Y,1);
}}return X;
},tickAngles:function(ay,aB){var az=this;
var at=az.options;
var ax=at.reverse;
var aw=at.max-at.min;
var X=ay.endAngle-ay.startAngle;
var au=ay.startAngle;
var aC=aw/aB;
var aA=X/aC;
var av=[];
var Y;
if(ax){au+=X;
aA=-aA;
}for(Y=0;
Y<aC;
Y++){av.push(al(au,t));
au+=aA;
}if(al(au)<=ay.endAngle){av.push(au);
}return av;
},radius:function(X){var Y=this;
if(X){Y.arc.setRadiusX(X).setRadiusY(X);
Y.repositionTicks(Y.majorTicks.children,Y.majorTickAngles);
Y.repositionTicks(Y.minorTicks.children,Y.minorTickAngles,true);
}else{return Y.arc.getRadiusX();
}},repositionTicks:function(aA,ay,at){var ax=this;
var X=at?(ax._tickDifference||0):0;
var az=ax.arc;
var av=az.getRadiusX();
if(at&&ax.options.labels.position===ab&&X!==0){az=ax.arc.clone();
az.setRadiusX(av-X).setRadiusY(av-X);
}for(var Y=0;
Y<aA.length;
Y++){var au=az.pointAt(ay[Y]);
var aw=aA[Y].segments;
var aB=au.x-aw[0].anchor().x;
var aC=au.y-aw[0].anchor().y;
aA[Y].transform(new G.Transformation().translate(aB,aC));
}}});
var F=ap.extend({init:function(X,az){var Y=this;
var au;
var ax;
var aw;
var ay=u.ui.themes||{};
var av;
O.destroy(X);
a(X).empty();
ap.fn.init.call(Y,X);
Y.wrapper=Y.element;
Y._originalOptions=v({},az);
au=v({},Y.options,az);
aw=au.theme;
av=ay[aw]||ay[aw.toLowerCase()];
ax=aw&&av?av.gauge:{};
Y.options=v({},ax,au);
if(a.isArray(au.pointer)){for(var at=0;
at<au.pointer.length;
at++){Y.options.pointer[at]=v({},ax.pointer,au.pointer[at]);
}}Y.element.addClass("k-gauge");
Y.surface=Y._createSurface();
Y.redraw();
},options:{plotArea:{},theme:"default",renderAs:"",pointer:{},scale:{},gaugeArea:{}},destroy:function(){this.surface.destroy();
ap.fn.destroy.call(this);
},value:function(at){var Y=this;
var X=Y.pointers[0];
if(arguments.length===0){return X.value();
}X.value(at);
Y._setValueOptions(at);
},_draw:function(){var X=this.surface;
X.clear();
X.draw(this._visuals);
},exportVisual:function(){return this._visuals;
},allValues:function(av){var au=this;
var at=au.pointers;
var X=[];
var Y;
if(arguments.length===0){for(Y=0;
Y<at.length;
Y++){X.push(at[Y].value());
}return X;
}if(a.isArray(av)){for(Y=0;
Y<av.length;
Y++){if(N(av[Y])){at[Y].value(av[Y]);
}}}au._setValueOptions(av);
},_setValueOptions:function(at){var Y=[].concat(this.options.pointer);
at=[].concat(at);
for(var X=0;
X<at.length;
X++){Y[X].value=at[X];
}},_resize:function(){var at=this;
var Y=at.options.transitions;
var X;
at.options.transitions=false;
for(X=0;
X<at.pointers.length;
X++){at.pointers[X].options.animation.transitions=false;
}at.redraw();
at.options.transitions=Y;
for(X=0;
X<at.pointers.length;
X++){at.pointers[X].options.animation.transitions=Y;
}},redraw:function(){var at=this;
var Y=v(at._getSize(),at.options.gaugeArea);
var au=new ak([0,0],[Y.width,Y.height]);
var X;
at.surface.clear();
at.gaugeArea=at._createGaugeArea();
at.surface.element.css({width:Y.width,height:Y.height});
at._createModel();
X=d(au.bbox(),at._gaugeAreaMargin);
at.reflow(X);
},_createGaugeArea:function(){var aw=this;
var au=aw.options.gaugeArea;
var av=aw.surface.size();
var Y=au.border||{};
var X=new ak([0,0],[av.width,av.height]);
aw._gaugeAreaMargin=au.margin||y;
if(Y.width>0){X=d(X,Y.width);
}var at=ac.fromRect(X,{stroke:{color:Y.width?Y.color:"",width:Y.width,dashType:Y.dashType,lineJoin:"round",lineCap:"round"},fill:{color:au.background}});
return at;
},_createSurface:function(){var at=this;
var X=at.options;
var Y=at._getSize();
Y=X.gaugeArea?v(Y,X.gaugeArea):Y;
var au=a("<div></div>").appendTo(at.element).css({width:Y.width,height:Y.height});
return new E.Surface.create(au,{type:X.renderAs});
},getSize:function(){return this._getSize();
},_getSize:function(){var at=this;
var X=at.element;
var au=X.width();
var Y=X.height();
if(!au){au=B;
}if(!Y){Y=w;
}return{width:au,height:Y};
}});
var ag=F.extend({init:function(X,Y){var at=this;
F.fn.init.call(at,X,Y);
O.notify(at,u.ui);
},options:{name:"RadialGauge",transitions:true,gaugeArea:{background:""}},reflow:function(X){var au=this;
var at=au.pointers;
au.scale.reflow(X);
au._initialPlotArea=au.scale.bbox;
for(var Y=0;
Y<at.length;
Y++){at[Y].reflow(au.scale.arc);
au._initialPlotArea=ak.union(au._initialPlotArea,at[Y].bbox);
}au.fitScale(X);
au.alignScale(X);
au._buildVisual(au.gaugeArea,at,au.scale);
au._draw();
},_buildVisual:function(Y,au,av){var aw=new K();
var X;
aw.append(Y);
aw.append(av.ticks);
aw.append(av.ranges);
for(var at=0;
at<au.length;
at++){X=au[at];
X.render();
aw.append(X.elements);
X.value(X.options.value);
}aw.append(av.labelElements);
this._visuals=aw;
},fitScale:function(Y){var aF=this;
var aC=aF.scale;
var X=aC.arc;
var aB=aF._initialPlotArea;
var aE=U.abs(aF.getDiff(aB,Y));
var ay=al(aE,t);
var au=al(-aE,t);
var az,ax,av,aw,aA;
var aD=0;
var at=0;
while(at++<100){aD=(aA===av)?(aD+1):0;
if(aD>5){break;
}if(ay!=aw){az=aF.getPlotBox(ay,Y,X);
if(0<=az&&az<=2){break;
}}if(au!=aw){av=aF.getPlotBox(au,Y,X);
if(0<=av&&av<=2){break;
}}if(az>0&&av>0){aw=ay*2;
}else{if(az<0&&av<0){aw=au*2;
}else{aw=al(((ay+au)/2)||1,t);
}}ax=aF.getPlotBox(aw,Y,X);
if(0<=ax&&ax<=2){break;
}aA=av;
if(ax>0){au=aw;
av=ax;
}else{ay=aw;
az=ax;
}}},getPlotBox:function(ax,Y,X){var ay=this;
var aw=ay.scale;
var au=ay.pointers;
var av=X.getRadiusX();
X=X.clone();
X.setRadiusX(av+ax).setRadiusY(av+ax);
aw.arc=X;
aw.reflow(Y);
ay.plotBbox=aw.bbox;
for(var at=0;
at<au.length;
at++){au[at].reflow(X);
ay.plotBbox=ak.union(ay.plotBbox,au[at].bbox);
}return ay.getDiff(ay.plotBbox,Y);
},getDiff:function(Y,X){return U.min(X.width()-Y.width(),X.height()-Y.height());
},alignScale:function(X){var az=this;
var aw=az.plotBbox.center();
var Y=X.center();
var au=aw.x-Y.x;
var av=aw.y-Y.y;
var ay=az.scale;
var ax=az.pointers;
ay.arc.center.x-=au;
ay.arc.center.y-=av;
ay.reflow(X);
for(var at=0;
at<ax.length;
at++){ax[at].reflow(ay.arc);
az.plotBbox=ak.union(ay.bbox,ax[at].bbox);
}},_createModel:function(){var aw=this;
var at=aw.options;
var au=at.pointer;
var av=aw.scale=new aj(at.scale);
var X;
aw.pointers=[];
au=a.isArray(au)?au:[au];
for(var Y=0;
Y<au.length;
Y++){X=new ah(av,v({},au[Y],{animation:{transitions:at.transitions}}));
aw.pointers.push(X);
}}});
var R=F.extend({init:function(X,at){var Y=this;
F.fn.init.call(Y,X,at);
O.notify(Y,u.ui);
},options:{name:"LinearGauge",transitions:true,gaugeArea:{background:""},scale:{vertical:true}},reflow:function(X){var ax=this;
var aw=ax.pointers;
var at=X.origin.x;
var au=X.origin.y;
var Y=new u.Box2D(at,at,at+X.width(),au+X.height());
ax.scale.reflow(Y);
for(var av=0;
av<aw.length;
av++){aw[av].reflow();
}ax.bbox=ax._getBox(Y);
ax._alignElements();
ax._shrinkElements();
ax._buildVisual();
ax._draw();
},_buildVisual:function(){var av=this;
var aw=new K();
var au=av.scale.render();
var at=av.pointers;
var X;
aw.append(av.gaugeArea);
aw.append(au);
for(var Y=0;
Y<at.length;
Y++){X=at[Y];
aw.append(X.render());
X.value(X.options.value);
}av._visuals=aw;
},_createModel:function(){var ax=this;
var au=ax.options;
var av=au.pointer;
var aw=ax.scale=new T(au.scale);
var X,Y;
ax.pointers=[];
av=a.isArray(av)?av:[av];
for(var at=0;
at<av.length;
at++){Y=v({},av[at],{animation:{transitions:au.transitions}});
if(Y.shape===f){X=new h(aw,Y);
}else{X=new m(aw,Y);
}ax.pointers.push(X);
}},_getSize:function(){var Y=this;
var X=Y.element;
var av=X.width();
var at=X.height();
var au=Y.options.scale.vertical;
if(!av){av=au?A:B;
}if(!at){at=au?w:z;
}return{width:av,height:at};
},_getBox:function(X){var ay=this;
var aw=ay.scale;
var av=ay.pointers;
var Y=X.center();
var au=av[0].box.clone().wrap(aw.box);
var ax;
for(var at=0;
at<av.length;
at++){au.wrap(av[at].box.clone());
}if(aw.options.vertical){ax=au.width()/2;
au=new p(Y.x-ax,X.y1,Y.x+ax,X.y2);
}else{ax=au.height()/2;
au=new p(X.x1,Y.y-ax,X.x2,Y.y+ax);
}return au;
},_alignElements:function(){var ay=this;
var aw=ay.scale;
var av=ay.pointers;
var ax=aw.box;
var X=av[0].box.clone().wrap(aw.box);
var au=ay.bbox;
var Y,at;
for(at=0;
at<av.length;
at++){X.wrap(av[at].box.clone());
}if(aw.options.vertical){Y=au.center().x-X.center().x;
aw.reflow(new p(ax.x1+Y,au.y1,ax.x2+Y,au.y2));
}else{Y=au.center().y-X.center().y;
aw.reflow(new p(au.x1,ax.y1+Y,au.x2,ax.y2+Y));
}for(at=0;
at<av.length;
at++){av[at].reflow(ay.bbox);
}},_shrinkElements:function(){var ax=this;
var av=ax.scale;
var at=ax.pointers;
var aw=av.box.clone();
var au=av.options.vertical?"y":"x";
var Y=at[0].box;
var X;
for(X=0;
X<at.length;
X++){Y.wrap(at[X].box.clone());
}aw[au+1]+=U.max(aw[au+1]-Y[au+1],0);
aw[au+2]-=U.max(Y[au+2]-aw[au+2],0);
av.reflow(aw);
for(X=0;
X<at.length;
X++){at[X].reflow(ax.bbox);
}}});
var T=aa.extend({init:function(X){var Y=this;
Y.options=v({},Y.options,X);
Y.options=v({},Y.options,{labels:{mirror:Y.options.mirror}});
Y.options.majorUnit=Y.options.majorUnit||j(Y.options.min,Y.options.max);
k.fn.init.call(Y,Y.options);
Y.options.minorUnit=Y.options.minorUnit||Y.options.majorUnit/10;
},options:{min:0,max:50,majorTicks:{size:15,align:L,color:o,width:x,visible:true},minorTicks:{size:10,align:L,color:o,width:x,visible:true},line:{width:x},labels:{position:L,padding:2},mirror:false,_alignLines:false},render:function(){var aw=this;
var X=aw.elements=new K();
var Y=aw.renderLabels();
var au=aw.renderLine();
var av=aw.renderTicks();
var at=aw.renderRanges();
X.append(au,Y,av,at);
return X;
},renderRanges:function(){var aE=this;
var ax=aE.options;
var av=ax.min;
var au=ax.max;
var az=ax.ranges||[];
var aF=ax.vertical;
var aw=ax.labels.mirror;
var Y=new K();
var X=az.length;
var aA=ax.rangeSize||ax.minorTicks.size/2;
var ay,aB,aC,aD,at;
if(X){for(at=0;
at<X;
at++){ay=I(az[at],av,au);
aB=aE.getSlot(ay.from,ay.to);
aC=aF?aE.lineBox():aB;
aD=aF?aB:aE.lineBox();
if(aF){aC.x1-=aA*(aw?-1:1);
}else{aD.y2+=aA*(aw?-1:1);
}Y.append(ac.fromRect(new ak([aC.x1,aD.y1],[aC.x2-aC.x1,aD.y2-aD.y1]),{fill:{color:ay.color,opacity:ay.opacity},stroke:{}}));
}}return Y;
},renderLabels:function(){var av=this;
var au=av.options;
var at=av.labels;
var X=new K();
for(var Y=0;
Y<at.length;
Y++){X.append(b(at[Y],au.labels));
}return X;
},renderLine:function(){var aw=this;
var av=aw.options;
var Y=av.line;
var at=aw.lineBox();
var au;
var X=new K();
if(Y.width>0&&Y.visible){au=new ac({stroke:{color:Y.color,dashType:Y.dashType,width:Y.width}});
au.moveTo(at.x1,at.y1).lineTo(at.x2,at.y2);
X.append(au);
}return X;
},renderTicks:function(){var aw=this;
var ay=new K();
var au=aw.options;
var X=aw.lineBox();
var at=au.labels.mirror;
var Y=au.majorTicks.visible?au.majorUnit:0;
var ax={_alignLines:au._alignLines,vertical:au.vertical};
function av(aC,aB){var aA,az=aC.length;
if(aB.visible){for(aA=aB.skip;
aA<az;
aA+=aB.step){if(aA%aB.skipUnit===0){continue;
}ax.tickX=at?X.x2:X.x2-aB.size;
ax.tickY=at?X.y1-aB.size:X.y1;
ax.position=aC[aA];
ay.append(aw.renderAxisTick(ax,aB));
}}}av(aw.getMajorTickPositions(),au.majorTicks);
av(aw.getMinorTickPositions(),v({},{skipUnit:Y/au.minorUnit},au.minorTicks));
return ay;
},renderAxisTick:function(Y,av){var ax=Y.tickX;
var ay=Y.tickY;
var at=Y.position;
var au,X,aw;
if(Y.vertical){au=new ad(ax,at);
X=new ad(ax+av.size,at);
}else{au=new ad(at,ay);
X=new ad(at,ay+av.size);
}aw=new ac({stroke:{color:av.color,width:av.width}}).moveTo(au).lineTo(X);
return aw;
}});
var S=ae.extend({init:function(at,X){var Y=this;
ae.fn.init.call(Y,at,X);
Y.options=v({track:{visible:C(X.track)}},Y.options);
},options:{shape:l,track:{border:{width:1}},color:o,border:{width:1},opacity:1,margin:J(3),animation:{type:l},visible:true},reflow:function(){var au=this;
var at=au.options;
var ay=au.scale;
var az=ay.lineBox();
var aC=at.track.size||at.size;
var aw=at.size/2;
var Y=ay.options.mirror;
var X=J(at.margin);
var aD=ay.options.vertical;
var aA=aD?X[Y?"left":"right"]:X[Y?"bottom":"top"];
var av,ax,aB;
aA=Y?-aA:aA;
if(aD){aB=new p(az.x1+aA,az.y1,az.x1+aA,az.y2);
if(Y){aB.x1-=aC;
}else{aB.x2+=aC;
}if(at.shape!==l){ax=new p(az.x2+aA,az.y1-aw,az.x2+aA,az.y2+aw);
av=ax;
}}else{aB=new p(az.x1,az.y1-aA,az.x2,az.y1-aA);
if(Y){aB.y2+=aC;
}else{aB.y1-=aC;
}if(at.shape!==l){ax=new p(az.x1-aw,az.y1-aA,az.x2+aw,az.y1-aA);
av=ax;
}}au.trackBox=aB;
au.pointerRangeBox=ax;
au.box=av||aB.clone().pad(at.border.width);
},getElementOptions:function(){var X=this.options;
return{fill:{color:X.color,opacity:X.opacity},stroke:C(X.border)?{color:X.border.width?X.border.color||X.color:"",width:X.border.width,dashType:X.border.dashType,opacity:X.opacity}:null};
},_margin:function(){var au=this;
var at=au.options;
var av=au.scale;
var Y=av.options.mirror;
var X=J(at.margin);
var ax=av.options.vertical;
var aw=ax?X[Y?"left":"right"]:X[Y?"bottom":"top"];
return aw;
}});
var h=S.extend({init:function(Y,X){S.fn.init.call(this,Y,X);
if(this.options.size===an){this.options.size=this.scale.options.majorTicks.size*0.6;
}},pointerShape:function(){var az=this;
var Y=az.options;
var av=az.scale;
var ay=Y.size;
var aA=av.options.vertical;
var X=ay/2;
var ax=(av.options.mirror?-1:1);
var au=av.options.reverse;
var at,aw;
if(aA){at=au?"y2":"y1";
aw=[new ad(0,0-X),new ad(0-ax*ay,0),new ad(0,0+X)];
}else{at=au?"x1":"x2";
aw=[new ad(0-X,0),new ad(0,0+ax*ay),new ad(0+X,0)];
}return aw;
},repaint:function(){var au=this;
var at=au.scale;
var Y=au.options;
var X=new i(au.elements,v(Y.animation,{vertical:at.options.vertical,mirror:at.options.mirror,margin:au._margin(Y.margin),from:at.getSlot(Y._oldValue),to:at.getSlot(Y.value)}));
if(Y.animation.transitions===false){X.options.duration=0;
}X.setup();
X.play();
},render:function(){var ax=this;
var at=ax.options;
var Y=new K();
var au=ax.scale;
var X=ax.getElementOptions();
var av=ax.pointerShape(at.value);
at.animation.type=g;
Y=new ac({stroke:X.stroke,fill:X.fill}).moveTo(av[0]).lineTo(av[1]).lineTo(av[2]).close();
var aw=au.getSlot(at.value);
Y.transform(G.transform().translate(aw.x1,aw.y1));
ax.elements=Y;
return Y;
}});
var m=S.extend({init:function(Y,X){S.fn.init.call(this,Y,X);
if(this.options.size===an){this.options.size=this.scale.options.majorTicks.size*0.3;
}},pointerShape:function(aG){var aF=this;
var aw=aF.options;
var aB=aF.scale;
var aH=aB.options.vertical;
var av=aB.options.mirror;
var Y=av==aH?-1:1;
var aC=aw.size*Y;
var au=aB.getSlot(aB.options.min);
var aE=aB.getSlot(aG);
var X=aH?ar:aq;
var aD=aH?aq:ar;
var at=aF._margin()*Y;
var ax=new ad();
ax[X]=au[X+"1"];
ax[aD]=au[aD+"1"];
var ay=new ad();
ay[X]=aE[X+"1"];
ay[aD]=aE[aD+"1"];
if(aH){ax.translate(at,0);
ay.translate(at,0);
}else{ax.translate(0,at);
ay.translate(0,at);
}var az=ay.clone();
var aA=ax.clone();
if(aH){az.translate(aC,0);
aA.translate(aC,0);
}else{az.translate(0,aC);
aA.translate(0,aC);
}return[ax,ay,az,aA];
},repaint:function(){var ax=this;
var av=ax.scale;
var at=ax.options;
var aw=ax.pointerShape(at.value);
var au=ax.elements.children[0];
var Y=ax.pointerShape(at._oldValue);
au.moveTo(aw[0]).lineTo(aw[1]).lineTo(aw[2]).lineTo(aw[3]).close();
var X=new n(au,v(at.animation,{reverse:av.options.reverse,vertical:av.options.vertical,oldPoints:[Y[1],Y[2]],newPoints:[aw[1],aw[2]]}));
if(at.animation.transitions===false){X.options.duration=0;
}X.setup();
X.play();
},render:function(){var au=this;
var Y=new K();
var X=au.getElementOptions();
var at=new ac({stroke:X.stroke,fill:X.fill});
Y.append(at);
au.elements=Y;
return Y;
}});
var ai=E.Animation.extend({init:function(X,Y){E.Animation.fn.init.call(this,X,Y);
Y=this.options;
Y.duration=U.max((U.abs(Y.newAngle-Y.oldAngle)/Y.duration)*1000,1);
},options:{easing:P,duration:e},step:function(au){var Y=this;
var at=Y.options;
var X=M(at.oldAngle,at.newAngle,au);
Y.element.transform(G.transform().rotate(X,at.center));
}});
E.AnimationFactory.current.register(af,ai);
var i=E.Animation.extend({options:{easing:P,duration:Q},setup:function(){var av=this.options;
var au=av.margin;
var Y=av.from;
var aw=av.to;
var X=av.vertical?"x1":"y1";
if(av.mirror==av.vertical){Y[X]-=au;
aw[X]-=au;
}else{Y[X]+=au;
aw[X]+=au;
}var at=this.fromScale=new ad(Y.x1,Y.y1);
var ax=this.toScale=new ad(aw.x1,aw.y1);
if(av.duration!==0){av.duration=U.max((at.distanceTo(ax)/av.duration)*1000,1);
}},step:function(X){var Y=M(this.fromScale.x,this.toScale.x,X);
var at=M(this.fromScale.y,this.toScale.y,X);
this.element.transform(G.transform().translate(Y,at));
}});
E.AnimationFactory.current.register(g,i);
var n=E.Animation.extend({options:{easing:P,speed:Q},setup:function(){var av=this.options;
var at=av.newPoints;
var au=av.oldPoints;
var X=this.axis=av.vertical?ar:aq;
var aw=this.to=at[0][X];
var Y=this.from=au[0][X];
if(av.duration!==0){av.duration=U.max((U.abs(aw-Y)/av.speed)*1000,1);
}this._set(Y);
},step:function(X){var Y=M(this.from,this.to,X);
this._set(Y);
},_set:function(at){var Y="set"+this.axis.toUpperCase();
var X=this.options.newPoints;
X[0][Y](at);
X[1][Y](at);
}});
E.AnimationFactory.current.register(l,n);
function b(au,aw){var av=au.box;
var aA=au.children[0].box;
var Y=aw.border||{};
var X=aw.background||"";
var at=new K();
var ax,ay,aB;
aB=ac.fromRect(new ak([av.x1,av.y1],[av.width(),av.height()]),{stroke:{}});
var az=new am(au.text,new ad(aA.x1,aA.y1),{font:aw.font,fill:{color:aw.color}});
ay=c(az.bbox().clone(),aw.padding);
ax=ac.fromRect(ay,{stroke:{color:Y.width?Y.color:"",width:Y.width,dashType:Y.dashType,lineJoin:"round",lineCap:"round"},fill:{color:X}});
at.append(aB);
at.append(ax);
at.append(az);
return at;
}function I(au,at,Y){var X=C(au.from)?au.from:W;
var av=C(au.to)?au.to:V;
au.from=U.max(U.min(av,X),at);
au.to=U.min(U.max(av,X),Y);
return au;
}function c(X,av){var Y=X.getOrigin();
var at=X.getSize();
var au=J(av);
X.setOrigin([Y.x-au.left,Y.y-au.top]);
X.setSize([at.width+(au.left+au.right),at.height+(au.top+au.bottom)]);
return X;
}function d(X,at){var Y=J(at);
Y.left=-Y.left;
Y.top=-Y.top;
Y.right=-Y.right;
Y.bottom=-Y.bottom;
return c(X,Y);
}u.ui.plugin(ag);
u.ui.plugin(R);
u.ExportMixin.extend(F.fn);
v(u,{Gauge:F,RadialPointer:ah,LinearPointer:S,ArrowLinearPointer:h,BarLinearPointer:m,LinearScale:T,RadialScale:aj,LinearGauge:R,RadialGauge:ag});
})(window.kendo.jQuery);
})();
return window.kendo;
},typeof define=="function"&&define.amd?define:function(a,b){b();
});

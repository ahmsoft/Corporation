(function(b,a){a(["./kendo.fx","./kendo.draganddrop"],b);
})(function(){(function(){(function(a,F){var l=window.kendo,n=l.mobile,k=l.effects,E=n.ui,t=a.proxy,i=a.extend,H=E.Widget,g=l.Class,p=l.ui.Movable,r=l.ui.Pane,s=l.ui.PaneDimensions,D=k.Transition,e=k.Animation,b=Math.abs,C=500,A=0.7,j=0.96,G=10,m=55,q=0.5,c=5,w="km-scroller-release",v="km-scroller-refresh",u="pull",f="change",x="resize",y="scroll",o=2;
var I=e.extend({init:function(J){var K=this;
e.fn.init.call(K);
i(K,J);
K.userEvents.bind("gestureend",t(K.start,K));
K.tapCapture.bind("press",t(K.cancel,K));
},enabled:function(){return this.movable.scale<this.dimensions.minScale;
},done:function(){return this.dimensions.minScale-this.movable.scale<0.01;
},tick:function(){var J=this.movable;
J.scaleWith(1.1);
this.dimensions.rescale(J.scale);
},onEnd:function(){var J=this.movable;
J.scaleTo(this.dimensions.minScale);
this.dimensions.rescale(J.scale);
}});
var h=e.extend({init:function(J){var K=this;
e.fn.init.call(K);
i(K,J,{transition:new D({axis:J.axis,movable:J.movable,onEnd:function(){K._end();
}})});
K.tapCapture.bind("press",function(){K.cancel();
});
K.userEvents.bind("end",t(K.start,K));
K.userEvents.bind("gestureend",t(K.start,K));
K.userEvents.bind("tap",t(K.onEnd,K));
},onCancel:function(){this.transition.cancel();
},freeze:function(J){var K=this;
K.cancel();
K._moveTo(J);
},onEnd:function(){var J=this;
if(J.paneAxis.outOfBounds()){J._snapBack();
}else{J._end();
}},done:function(){return b(this.velocity)<1;
},start:function(J){var K=this,L;
if(!K.dimension.enabled){return;
}if(K.paneAxis.outOfBounds()){K._snapBack();
}else{L=J.touch.id===o?0:J.touch[K.axis].velocity;
K.velocity=Math.max(Math.min(L*K.velocityMultiplier,m),-m);
K.tapCapture.captureNext();
e.fn.start.call(K);
}},tick:function(){var N=this,K=N.dimension,L=N.paneAxis.outOfBounds()?q:N.friction,J=(N.velocity*=L),M=N.movable[N.axis]+J;
if(!N.elastic&&K.outOfBounds(M)){M=Math.max(Math.min(M,K.max),K.min);
N.velocity=0;
}N.movable.moveAxis(N.axis,M);
},_end:function(){this.tapCapture.cancelCapture();
this.end();
},_snapBack:function(){var L=this,J=L.dimension,K=L.movable[L.axis]>J.max?J.max:J.min;
L._moveTo(K);
},_moveTo:function(J){this.transition.moveTo({location:J,duration:C,ease:D.easeOutExpo});
}});
var d=e.extend({init:function(J){var K=this;
l.effects.Animation.fn.init.call(this);
i(K,J,{origin:{},destination:{},offset:{}});
},tick:function(){this._updateCoordinates();
this.moveTo(this.origin);
},done:function(){return b(this.offset.y)<c&&b(this.offset.x)<c;
},onEnd:function(){this.moveTo(this.destination);
if(this.callback){this.callback.call();
}},setCoordinates:function(J,K){this.offset={};
this.origin=J;
this.destination=K;
},setCallback:function(J){if(J&&l.isFunction(J)){this.callback=J;
}else{J=F;
}},_updateCoordinates:function(){this.offset={x:(this.destination.x-this.origin.x)/4,y:(this.destination.y-this.origin.y)/4};
this.origin={y:this.origin.y+this.offset.y,x:this.origin.x+this.offset.x};
}});
var z=g.extend({init:function(L){var M=this,K=L.axis==="x",J=a('<div class="km-touch-scrollbar km-'+(K?"horizontal":"vertical")+'-scrollbar" />');
i(M,L,{element:J,elementSize:0,movable:new p(J),scrollMovable:L.movable,alwaysVisible:L.alwaysVisible,size:K?"width":"height"});
M.scrollMovable.bind(f,t(M.refresh,M));
M.container.append(J);
if(L.alwaysVisible){M.show();
}},refresh:function(){var Q=this,J=Q.axis,K=Q.dimension,L=K.size,N=Q.scrollMovable,P=L/K.total,M=Math.round(-N[J]*P),O=Math.round(L*P);
if(P>=1){this.element.css("display","none");
}else{this.element.css("display","");
}if(M+O>L){O=L-M;
}else{if(M<0){O+=M;
M=0;
}}if(Q.elementSize!=O){Q.element.css(Q.size,O+"px");
Q.elementSize=O;
}Q.movable.moveAxis(J,M);
},show:function(){this.element.css({opacity:A,visibility:"visible"});
},hide:function(){if(!this.alwaysVisible){this.element.css({opacity:0});
}}});
var B=H.extend({init:function(M,P){var S=this;
H.fn.init.call(S,M,P);
M=S.element;
S._native=S.options.useNative&&l.support.hasNativeScrolling;
if(S._native){M.addClass("km-native-scroller").prepend('<div class="km-scroll-header"/>');
i(S,{scrollElement:M,fixedContainer:M.children().first()});
return;
}M.css("overflow","hidden").addClass("km-scroll-wrapper").wrapInner('<div class="km-scroll-container"/>').prepend('<div class="km-scroll-header"/>');
var N=M.children().eq(1),R=new l.TapCapture(M),O=new p(N),L=new s({element:N,container:M,forcedEnabled:S.options.zoom}),K=this.options.avoidScrolling,T=new l.UserEvents(M,{allowSelection:true,preventDragEvent:true,captureUpIfMoved:true,multiTouch:S.options.zoom,start:function(V){L.refresh();
var Y=b(V.x.velocity),Z=b(V.y.velocity),W=Y*2>=Z,X=a.contains(S.fixedContainer[0],V.event.target),aa=Z*2>=Y;
if(!X&&!K(V)&&S.enabled&&(L.x.enabled&&W||L.y.enabled&&aa)){T.capture();
}else{T.cancel();
}}}),Q=new r({movable:O,dimensions:L,userEvents:T,elastic:S.options.elastic}),U=new I({movable:O,dimensions:L,userEvents:T,tapCapture:R}),J=new d({moveTo:function(V){S.scrollTo(V.x,V.y);
}});
O.bind(f,function(){S.scrollTop=-O.y;
S.scrollLeft=-O.x;
S.trigger(y,{scrollTop:S.scrollTop,scrollLeft:S.scrollLeft});
});
if(S.options.mousewheelScrolling){M.on("DOMMouseScroll mousewheel",t(this,"_wheelScroll"));
}i(S,{movable:O,dimensions:L,zoomSnapBack:U,animatedScroller:J,userEvents:T,pane:Q,tapCapture:R,pulled:false,enabled:true,scrollElement:N,scrollTop:0,scrollLeft:0,fixedContainer:M.children().first()});
S._initAxis("x");
S._initAxis("y");
S._wheelEnd=function(){S._wheel=false;
S.userEvents.end(0,S._wheelY);
};
L.refresh();
if(S.options.pullToRefresh){S._initPullToRefresh();
}},_wheelScroll:function(K){if(!this._wheel){this._wheel=true;
this._wheelY=0;
this.userEvents.press(0,this._wheelY);
}clearTimeout(this._wheelTimeout);
this._wheelTimeout=setTimeout(this._wheelEnd,50);
var J=l.wheelDeltaY(K);
if(J){this._wheelY+=J;
this.userEvents.move(0,this._wheelY);
}K.preventDefault();
},makeVirtual:function(){this.dimensions.y.makeVirtual();
},virtualSize:function(K,J){this.dimensions.y.virtualSize(K,J);
},height:function(){return this.dimensions.y.size;
},scrollHeight:function(){return this.scrollElement[0].scrollHeight;
},scrollWidth:function(){return this.scrollElement[0].scrollWidth;
},options:{name:"Scroller",zoom:false,pullOffset:140,visibleScrollHints:false,elastic:true,useNative:false,mousewheelScrolling:true,avoidScrolling:function(){return false;
},pullToRefresh:false,messages:{pullTemplate:"Pull to refresh",releaseTemplate:"Release to refresh",refreshTemplate:"Refreshing"}},events:[u,y,x],_resize:function(){if(!this._native){this.contentResized();
}},setOptions:function(J){var K=this;
H.fn.setOptions.call(K,J);
if(J.pullToRefresh){K._initPullToRefresh();
}},reset:function(){if(this._native){this.scrollElement.scrollTop(0);
}else{this.movable.moveTo({x:0,y:0});
this._scale(1);
}},contentResized:function(){this.dimensions.refresh();
if(this.pane.x.outOfBounds()){this.movable.moveAxis("x",this.dimensions.x.min);
}if(this.pane.y.outOfBounds()){this.movable.moveAxis("y",this.dimensions.y.min);
}},zoomOut:function(){var J=this.dimensions;
J.refresh();
this._scale(J.fitScale);
this.movable.moveTo(J.centerCoordinates());
},enable:function(){this.enabled=true;
},disable:function(){this.enabled=false;
},scrollTo:function(J,K){if(this._native){this.scrollElement.scrollLeft(b(J));
this.scrollElement.scrollTop(b(K));
}else{this.dimensions.refresh();
this.movable.moveTo({x:J,y:K});
}},animatedScrollTo:function(M,N,J){var K,L;
if(this._native){this.scrollTo(M,N);
}else{K={x:this.movable.x,y:this.movable.y};
L={x:M,y:N};
this.animatedScroller.setCoordinates(K,L);
this.animatedScroller.setCallback(J);
this.animatedScroller.start();
}},pullHandled:function(){var J=this;
J.refreshHint.removeClass(v);
J.hintContainer.html(J.pullTemplate({}));
J.yinertia.onEnd();
J.xinertia.onEnd();
J.userEvents.cancel();
},destroy:function(){H.fn.destroy.call(this);
if(this.userEvents){this.userEvents.destroy();
}},_scale:function(J){this.dimensions.rescale(J);
this.movable.scaleTo(J);
},_initPullToRefresh:function(){var J=this;
J.dimensions.y.forceEnabled();
J.pullTemplate=l.template(J.options.messages.pullTemplate);
J.releaseTemplate=l.template(J.options.messages.releaseTemplate);
J.refreshTemplate=l.template(J.options.messages.refreshTemplate);
J.scrollElement.prepend('<span class="km-scroller-pull"><span class="km-icon"></span><span class="km-loading-left"></span><span class="km-loading-right"></span><span class="km-template">'+J.pullTemplate({})+"</span></span>");
J.refreshHint=J.scrollElement.children().first();
J.hintContainer=J.refreshHint.children(".km-template");
J.pane.y.bind("change",t(J._paneChange,J));
J.userEvents.bind("end",t(J._dragEnd,J));
},_dragEnd:function(){var J=this;
if(!J.pulled){return;
}J.pulled=false;
J.refreshHint.removeClass(w).addClass(v);
J.hintContainer.html(J.refreshTemplate({}));
J.yinertia.freeze(J.options.pullOffset/2);
J.trigger("pull");
},_paneChange:function(){var J=this;
if(J.movable.y/q>J.options.pullOffset){if(!J.pulled){J.pulled=true;
J.refreshHint.removeClass(v).addClass(w);
J.hintContainer.html(J.releaseTemplate({}));
}}else{if(J.pulled){J.pulled=false;
J.refreshHint.removeClass(w);
J.hintContainer.html(J.pullTemplate({}));
}}},_initAxis:function(J){var P=this,L=P.movable,K=P.dimensions[J],O=P.tapCapture,M=P.pane[J],N=new z({axis:J,movable:L,dimension:K,container:P.element,alwaysVisible:P.options.visibleScrollHints});
K.bind(f,function(){N.refresh();
});
M.bind(f,function(){N.show();
});
P[J+"inertia"]=new h({axis:J,paneAxis:M,movable:L,tapCapture:O,userEvents:P.userEvents,dimension:K,elastic:P.options.elastic,friction:P.options.friction||j,velocityMultiplier:P.options.velocityMultiplier||G,end:function(){N.hide();
P.trigger("scrollEnd",{axis:J,scrollTop:P.scrollTop,scrollLeft:P.scrollLeft});
}});
}});
E.plugin(B);
})(window.kendo.jQuery);
})();
return window.kendo;
},typeof define=="function"&&define.amd?define:function(a,b){b();
});
